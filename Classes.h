#pragma once
//20.20 NOT FINISHED
//YouTube : EFK
//Discord : EFK#6607
//Twitter : EFK
//Twitch : Zeusty

//Uworld : 0xC525CD8


//fix bonearray = JE CHERCHE
namespace AFortAIPawn
{
	//constexpr auto DeimosBatchedGameplayCueParameters = 0x1668; // FGameplayCueParameters
	//constexpr auto AttributeReplicationProxy = 0x1738; // FFortAIAttributeReplicationProxy
	//constexpr auto RepAnimMontageInfo = 0x1740; // FGameplayAbilityRepAnimMontage
	//constexpr auto RepSharedAnimInfo = 0x1778; // FGameplayAbilityRepSharedAnim
	//constexpr auto SimulatedProxyGameplayCues = 0x1790; // FMinimalGameplayCueReplicationProxy
	//constexpr auto bAttacking = 0x1a60; // char : 1
	//constexpr auto bDied = 0x1a60; // char : 1
	//constexpr auto bHitReact = 0x1a60; // char : 1
	//constexpr auto bFullBodyHitReact = 0x1a60; // char : 1
	//constexpr auto bDancing = 0x1a60; // char : 1
	//constexpr auto bRangedAttacking = 0x1a60; // char : 1
	//constexpr auto bHasGoalActor = 0x1a60; // char : 1
	//constexpr auto bFrozen = 0x1a60; // char : 1
	//constexpr auto bNotifySpawnRift = 0x1a64; // char : 1
	//constexpr auto bHasInventory = 0x1a64; // char : 1
	//constexpr auto bUsesDBNO = 0x1a64; // char : 1
	//constexpr auto bKilledOrDowned = 0x1a64; // char : 1
	//constexpr auto bDespawnedDueToInactivity = 0x1a64; // char : 1
	//constexpr auto bNeedsDeathNotification = 0x1a64; // char : 1
	//constexpr auto bShouldUseRootComponentForTargetSelectionOverlap = 0x1a64; // char : 1
	//constexpr auto bUseSharedAnimation = 0x1a64; // char : 1
	//constexpr auto bShouldTossInventoryOnDeath = 0x1a65; // char : 1
	//constexpr auto bUseDefenderInventoryManagement = 0x1a65; // char : 1
	//constexpr auto bIgnoreDefender = 0x1a65; // char : 1
	//constexpr auto bTrackNearbyPickups = 0x1a65; // char : 1
	//constexpr auto bIsCharging = 0x1a65; // char : 1
	//constexpr auto bIsCowering = 0x1a65; // char : 1
	//constexpr auto bCanShowMinimapIndicator = 0x1a65; // char : 1
	//constexpr auto bShowMinimapFarOffDirectionArrow = 0x1a65; // char : 1
	//constexpr auto bEncounterExpectedLifespanExpired = 0x1a66; // char : 1
	//constexpr auto bSetMiniMapIconRotation = 0x1a66; // char : 1
	//constexpr auto bEnableBlockingCollisionWithOtherAI = 0x1a66; // char : 1
	//constexpr auto bHasEngaged = 0x1a66; // char : 1
	//constexpr auto bIsDebugSpawnedAI = 0x1a66; // char : 1
	//constexpr auto bShowCustomCSVRelevantKey = 0x1a66; // char : 1
	//constexpr auto bIsAlwaysGameplayRelevant = 0x1a66; // char : 1
	//constexpr auto bHasDroppedLoot = 0x1a67; // char : 1
	//constexpr auto bUseFastAbilityReplication = 0x1a67; // char : 1
	//constexpr auto bUseAIGoalComponent = 0x1a67; // char : 1
	//constexpr auto FastReplicationMinimalReplicationTags = 0x1a68; // FMinimalReplicationTagCountMap
	//constexpr auto FastReplicationMinimalGameplayCueProxy = 0x1ad0; // FMinimalGameplayCueReplicationProxy
	//constexpr auto OnInventoryInitialized = 0x1da0; // FMulticastInlineDelegate
	//constexpr auto OnInventoryUpdated = 0x1db0; // FMulticastInlineDelegate
	//constexpr auto AIDifficultyLevel = 0x1df0; // float
	//constexpr auto LevelRatingDisplayType = 0x1df4; // EFortAILevelRatingDisplayType
	//constexpr auto EncounterInfo = 0x1df8; // UFortAIEncounterInfo*
	//constexpr auto SpawnSetIndex = 0x1e00; // int32_t
	//constexpr auto SpawnGroupGuid = 0x1e04; // FGuid
	//constexpr auto EnemyIndexInSpawnGroup = 0x1e14; // int32_t
	//constexpr auto FinishEncounterSpawnFallbackTime = 0x1e18; // float
	//constexpr auto EncounterSpawnDisableRangedAttackingTime = 0x1e1c; // float
	//constexpr auto EncounterSpawnDisableMeleeAttackingTime = 0x1e20; // float
	//constexpr auto EncounterExpectedLifespanTimerHandle = 0x1e28; // FTimerHandle
	//constexpr auto SpawnRift = 0x1e30; // AActor*
	//constexpr auto SpawnRiftLocation = 0x1e38; // FVector
	//constexpr auto SpawnSourceActor = 0x1e50; // AActor*
	//constexpr auto AIGoalComponentClass = 0x1e58; // UAIGoalComponent*
	//constexpr auto MaxTimeAllowedOutsideTether = 0x1e60; // float
	//constexpr auto BehaviorTree = 0x1e68; // UBehaviorTree*
	//constexpr auto DefaultNavFilter = 0x1e70; // UNavigationQueryFilter*
	//constexpr auto HuntingNavFilter = 0x1e78; // UNavigationQueryFilter*
	//constexpr auto DBNOInteractionDuration = 0x1e88; // float
	//constexpr auto OnDowned = 0x1e90; // FMulticastInlineDelegate
	//constexpr auto DBNOInteractionType = 0x1ea0; // TInteractionType
	//constexpr auto MovementStyles0x4 = 0x1ea1; // EFortMovementStyle
	//constexpr auto UpdateNearbyPickupFrequency = 0x1ea8; // float
	//constexpr auto RequiredWeaponPickupTag = 0x1eac; // FGameplayTag
	//constexpr auto RequiredWeaponPickupTagQuery = 0x1eb0; // FGameplayTagQuery
	//constexpr auto bUsePickupDirectionOverride = 0x1ef8; // bool
	//constexpr auto PickupDirectionOverride = 0x1f00; // FVector
	//constexpr auto NoWeaponInCombatEventName = 0x1f18; // FName
	//constexpr auto NoWeaponOutOfCombatEventName = 0x1f1c; // FName
	//constexpr auto CachedHitLocation = 0x1f20; // FVector
	//constexpr auto TurnTransitionGameplayAbilityTag = 0x1f38; // FGameplayTagContainer
	//constexpr auto DeathParticles = 0x1f58; // TSoftObjectPtr<UParticleSystem>
	//constexpr auto NumRunVariations = 0x1f80; // int32_t
	//constexpr auto CurrentRunVariationIndex = 0x1f84; // int32_t
	//constexpr auto RunVariationRadius = 0x1f88; // float
	//constexpr auto EyeIndex = 0x1f8c; // int32_t
	//constexpr auto SkinIndex = 0x1f90; // int32_t
	//constexpr auto DefaultEyeColor = 0x1f94; // FLinearColor
	//constexpr auto DefaultEyeBrightness = 0x1fa4; // float
	//constexpr auto DefaultSkinColor = 0x1fa8; // FLinearColor
	//constexpr auto DefaultSkinGlow = 0x1fb8; // float
	//constexpr auto MinimapDefaultIconColor = 0x1fbc; // FLinearColor
	//constexpr auto PlayerManagerMinimapColor = 0x1fcc; // FLinearColor
	//constexpr auto MiniMapIconBrush = 0x1ff0; // FSlateBrush
	//constexpr auto MiniMapAboveBelowIconBrush = 0x20b0; // FSlateBrush
	//constexpr auto MinimapGoalByTagColors = 0x2170; // TArray<FMinimapGoalByTagColorsData>
	//constexpr auto MinimapGoalByTagColorIndex = 0x2180; // int8_t
	//constexpr auto AppearanceOverrideName = 0x2184; // FName
	//constexpr auto AppearanceOverrideGender = 0x2188; // EFortAIPawnGender
	//constexpr auto FollowPlayerEvent = 0x2189; // EFortCombatEvents
	//constexpr auto InCombatNearPlayerEvent = 0x218a; // EFortCombatEvents
	//constexpr auto InteractionType = 0x218b; // TInteractionType
	//constexpr auto FollowPlayerRange = 0x218c; // float
	//constexpr auto InteractionDuration = 0x2190; // float
	//constexpr auto InteractionText = 0x2198; // FText
	//constexpr auto SecondInteractionType = 0x21c8; // TInteractionType
	//constexpr auto SecondInteractionDuration = 0x21cc; // float
	//constexpr auto SecondInteractionText = 0x21d0; // FText
	//constexpr auto OnInteraction = 0x21e8; // FMulticastInlineDelegate
	//constexpr auto InteractionSound = 0x21f8; // USoundBase*
	//constexpr auto DefenderTrap = 0x2200; // ABuildingTrapDefender*
	//constexpr auto OnActorBeginCrowdOverlap = 0x2208; // FMulticastInlineDelegate
	//constexpr auto DeepWaterImmersionDepth = 0x2218; // float
	//constexpr auto bDebugAI = 0x221c; // char : 1
	//constexpr auto bDebugAIAnim = 0x221c; // char : 1
	//constexpr auto bUseBuildingAttackingHotspots = 0x221c; // char : 1
	//constexpr auto bCanBeLaunched = 0x221c; // char : 1
	//constexpr auto bCanMoveThroughWalls = 0x221c; // char : 1
	//constexpr auto bCanUseNavWalking = 0x221c; // char : 1
	//constexpr auto bCanUseSimpleCollisions = 0x221c; // char : 1
	//constexpr auto bCanLookAtGoal = 0x221d; // char : 1
	//constexpr auto bShouldStartSleeping = 0x221d; // char : 1
	//constexpr auto bIsSleeping = 0x221d; // char : 1
	//constexpr auto bCanUseShootingHotspots = 0x221d; // char : 1
	//constexpr auto bCanSleep = 0x221d; // char : 1
	//constexpr auto bCanUseDoors = 0x221d; // char : 1
	//constexpr auto bCanUseStepAside = 0x221d; // char : 1
	//constexpr auto bCanUseOpenedDoors = 0x221d; // char : 1
	//constexpr auto bDespawnedDueToExpiration = 0x221e; // char : 1
	//constexpr auto bAllowServerCosmeticComponentOptimizations = 0x221e; // char : 1
	//constexpr auto bAllowCapsuleComponentsOnServer = 0x221e; // char : 1
	//constexpr auto bRootComponentIgnoreQueryPawnCapsule = 0x221e; // char : 1
	//constexpr auto bCanUseMeshPooling = 0x221e; // char : 1
	//constexpr auto bUseCrowdSimulation = 0x221e; // char : 1
	//constexpr auto bControlWalkingOffLedges = 0x221e; // char : 1
	//constexpr auto bCanBeBaseForOtherPawns = 0x221e; // char : 1
	//constexpr auto bReplicateGrantedTagsWithFastAbilityReplication = 0x2220; // char : 1
	//constexpr auto bOnlySkipAbilitySystemComponentWithFastAbilityReplication = 0x2220; // char : 1
	//constexpr auto bReplicateGameplayCuesWithFastAbilityReplication = 0x2220; // char : 1
	//constexpr auto bHideHealthBar = 0x2220; // char : 1
	//constexpr auto bHasBuildingHitEffects = 0x2220; // char : 1
	//constexpr auto bCanInteract = 0x2220; // char : 1
	//constexpr auto bUseAppearanceOverride = 0x2220; // char : 1
	//constexpr auto bShouldIgnoreThisBaseRotation = 0x2221; // char : 1
	//constexpr auto BeingControlledBy = 0x2238; // TWeakObjectPtr<AFortPlayerState>
	//constexpr auto MovementUrgency = 0x2240; // EFortMovementUrgency
	//constexpr auto AIType = 0x2241; // EFortressAIType
	//constexpr auto Team = 0x2242; // char
	//constexpr auto SimpleCollisionsProfileName = 0x2244; // FName
	//constexpr auto UpgradeUIData = 0x2248; // FFortAISpawnGroupUpgradeUIData
	//constexpr auto CachedUpgradeUIDataUpgradeIconBrush = 0x22c0; // FSlateBrush
	//constexpr auto ScoreMultiplier = 0x2380; // float
	//constexpr auto OverriddenScore = 0x2384; // int32_t
	//constexpr auto OverriddenScoreDistribution = 0x2388; // EScoreDistributionType
	//constexpr auto LootDropConeHalfAngle = 0x238c; // float
	//constexpr auto LootDropSpeed = 0x2390; // float
	//constexpr auto MinItemTossDist = 0x2394; // float
	//constexpr auto MaxItemTossDist = 0x2398; // float
	//constexpr auto ItemTossDirectionConeHalfAngle = 0x239c; // float
	//constexpr auto HotspotType = 0x23a0; // EFortHotSpotSlot
	//constexpr auto PartialPathUsage = 0x23a1; // EFortPartialPathUsage
	//constexpr auto PlayerManager = 0x23a8; // AFortPlayerStateZone*
	//constexpr auto DefenderItemInstanceId = 0x23b0; // FString
	//constexpr auto DefenderSquadId = 0x23c0; // FName
	//constexpr auto DefenderPlacedTime = 0x23c4; // float
	//constexpr auto RecentlySeenInterval = 0x23c8; // float
	//constexpr auto CurrentAIRotationRate = 0x23d0; // FRotator
	//constexpr auto MoveSoundStimulusBroadcastInterval = 0x23e8; // float
	//constexpr auto MoveSoundStimulusMaxRange = 0x23ec; // float
	//constexpr auto bGenerateMoveSoundInAllMovementModes = 0x23f0; // bool
	//constexpr auto WeaponCollisionComponent = 0x2400; // UShapeComponent*
	//constexpr auto Inventory = 0x2408; // AFortInventory*
	//constexpr auto NearbyPickups = 0x2410; // TArray<AFortPickup*>
	//constexpr auto UnreachablePickups = 0x2420; // TMap<AFortPickup*, float>
	//constexpr auto AppearanceOverrideEntries = 0x2480; // TArray<FFortAIAppearanceOverrideEntry>
	//constexpr auto AppearanceOverrideEntryIndex = 0x2490; // int32_t
	//constexpr auto SpawnLocation = 0x2498; // FVector
	//constexpr auto SpawnRotation = 0x24b0; // FRotator
	//constexpr auto SleepingFloor = 0x24c8; // TWeakObjectPtr<ABuildingActor>
	//constexpr auto PelvisBoneName = 0x24d0; // FName
	//constexpr auto HeadBoneName = 0x24d4; // FName
	//constexpr auto MinimapIndicatorUpdateFrequency = 0x24e4; // float
	//constexpr auto MiniMapViewableDistance = 0x24f0; // float
	//constexpr auto DistanceToPlayerManagerToShowHealthBar = 0x24f4; // float
	//constexpr auto DistanceToOtherPlayersToShowHealthBar = 0x24f8; // float
	//constexpr auto AttributesSet = 0x2508; // UFortAIAttributesSet*
	//constexpr auto CharacterAttrSet = 0x2510; // UFortCharacterAttrSet*
	//constexpr auto WeaponAttrSet = 0x2518; // UFortWeaponAttrSet*
	//constexpr auto ImpactPhysicalSurfaceSounds0x1c = 0x2520; // USoundBase*
	//constexpr auto ImpactPhysicalSurfaceEffects0x1c = 0x2600; // UParticleSystem*
	//constexpr auto AthenaRVOWeightOverride = 0x26e0; // FScalableFloat
	//constexpr auto MinimapIndicator = 0x2708; // UFortSimpleMiniMapIndicator*
	//constexpr auto MinimapScale = 0x2710; // FVector2D
	//constexpr auto DefaultGameplayAbilitySets = 0x2720; // TArray<UFortAbilitySet*>
	//constexpr auto SpawnInheritedCharacterAbilitySets = 0x2730; // TArray<UFortAbilitySet*>
	//constexpr auto SpawnModifierDefinitions = 0x2740; // TArray<UFortGameplayModifierItemDefinition*>
	//constexpr auto AIPawnAbilitySystemComponent = 0x2750; // UFortAbilitySystemComponent*
	//constexpr auto WallAttackGameplayAbilityTags = 0x2758; // FGameplayTagContainer
	//constexpr auto WallRangedAttackGameplayAbilityTags = 0x2778; // FGameplayTagContainer
	//constexpr auto CeilingAttackGameplayAbilityTags = 0x2798; // FGameplayTagContainer
	//constexpr auto FloorAttackGameplayAbilityTags = 0x27b8; // FGameplayTagContainer
	//constexpr auto FailedAbilityQueryTags = 0x27d8; // TArray<FGameplayTagContainer>
	//constexpr auto CurrentAimTarget = 0x27e8; // AActor*
	//constexpr auto NavObstacleComponent = 0x27f0; // UFortNavObstacleComponent*
	//constexpr auto BuildingHitMaxDistanceToPlayer = 0x2808; // float
	//constexpr auto BuildingHitMaxDistanceToHitLocation = 0x280c; // float
	//constexpr auto HeadHeightPercent = 0x2810; // float
	//constexpr auto MarkerDisplay = 0x2818; // FMarkedActorDisplayInfo
	//constexpr auto bCanBeMarked = 0x28b0; // bool
	//constexpr auto IsBlockingBuilding = 0x28b8; // FScalableFloat
	//constexpr auto NetUpdateFrequency_Min = 0x2908; // FScalableFloat
	//constexpr auto NetUpdateFrequency_Dormant = 0x2930; // FScalableFloat
	//constexpr auto NetUpdateFrequency_BelowLower = 0x2958; // FScalableFloat
	//constexpr auto NetUpdateFrequency_Lower = 0x2980; // FScalableFloat
	//constexpr auto NetUpdateFrequency_AboveLower = 0x29a8; // FScalableFloat
	//constexpr auto NetUpdateFrequency_BelowNormal = 0x29d0; // FScalableFloat
	//constexpr auto NetUpdateFrequency_Normal = 0x29f8; // FScalableFloat
	//constexpr auto NetUpdateFrequency_AboveNormal = 0x2a20; // FScalableFloat
	//constexpr auto DefenderItem = 0x2b68; // UFortAccountItem*
	//constexpr auto TetheredFollower = 0x2c20; // AFortPawn*
	//constexpr auto TetheredCamera = 0x2c38; // UFortCameraMode*
	//constexpr auto TetheredTargetingCamera = 0x2c40; // UFortCameraMode*
	//constexpr auto bIsTetheredBoosting = 0x2c48; // bool
	//constexpr auto TetherBoostMultiplier = 0x2c4c; // float
	//constexpr auto TetherJumpServerCorrectionIgnoreTime = 0x2c50; // float
	//constexpr auto TetherJumpLastTime = 0x2c54; // float
	//constexpr auto TetherBoundsXYSplineClass = 0x2c58; // AActor*
	//constexpr auto TetherBoundsXYSplineComponent = 0x2c60; // USplineComponent*
	//constexpr auto OnUpdateFromVehicleInput = 0x2c68; // FMulticastInlineDelegate
	//constexpr auto CustomizationsToLoad = 0x2c80; // UFortAIPawnCustomizationDefinition*
	//constexpr auto bCanUnloadCustomization = 0x2c88; // bool
	//constexpr auto UsedCustomization = 0x2c90; // UFortAIPawnCustomizationDefinition*
	//constexpr auto OnCustomizationsLoadedEvent = 0x2c98; // FMulticastInlineDelegate
	//constexpr auto OnCustomizationsUnloadedEvent = 0x2ca8; // FMulticastInlineDelegate
	//constexpr auto AIAssetLoader = 0x2cb8; // UFortAIAssetLoader*
	//constexpr auto bReplicateInventory = 0x2cc0; // char : 1
	//constexpr auto LastDamageHitResult = 0x2ce8; // FHitResult
	//constexpr auto CustomBounceVelocityForPickup = 0x2dc8; // FVector
	//constexpr auto CustomBouncePawnOffsetForPickup = 0x2de0; // FVector

constexpr auto DeimosBatchedGameplayCueParameters = 0x1890;
constexpr auto AttributeReplicationProxy = 0x1960;
constexpr auto RepAnimMontageInfo = 0x1968;
constexpr auto RepSharedAnimInfo = 0x19A0;
constexpr auto SimulatedProxyGameplayCues = 0x19B0;
constexpr auto bAttacking = 0x1C80;
constexpr auto bDied = 0x1C80;
constexpr auto bHitReact = 0x1C80;
constexpr auto bFullBodyHitReact = 0x1C80;
constexpr auto bDancing = 0x1C80;
constexpr auto bRangedAttacking = 0x1C80;
constexpr auto bHasGoalActor = 0x1C80;
constexpr auto bFrozen = 0x1C80;
constexpr auto bUseSharedAnimation = 0x1C84;
constexpr auto bShouldUseRootComponentForTargetSelectionOverlap = 0x1C84;
constexpr auto bNeedsDeathNotification = 0x1C84;
constexpr auto bKilledOrDowned = 0x1C84;
constexpr auto bDespawnedDueToInactivity = 0x1C84;
constexpr auto bNotifySpawnRift = 0x1C84;
constexpr auto bUsesDBNO = 0x1C84;
constexpr auto bHasInventory = 0x1C84;
constexpr auto bShouldTossInventoryOnDeath = 0x1C85;
constexpr auto bUseDefenderInventoryManagement = 0x1C85;
constexpr auto bIgnoreDefender = 0x1C85;
constexpr auto bTrackNearbyPickups = 0x1C85;
constexpr auto bIsCharging = 0x1C85;
constexpr auto bIsCowering = 0x1C85;
constexpr auto bCanShowMinimapIndicator = 0x1C85;
constexpr auto bShowMinimapFarOffDirectionArrow = 0x1C85;
constexpr auto bHasEngaged = 0x1C86;
constexpr auto bIsAlwaysGameplayRelevant = 0x1C86;
constexpr auto bShowCustomCSVRelevantKey = 0x1C86;
constexpr auto bIsDebugSpawnedAI = 0x1C86;
constexpr auto bEncounterExpectedLifespanExpired = 0x1C86;
constexpr auto bEnableBlockingCollisionWithOtherAI = 0x1C86;
constexpr auto bSetMiniMapIconRotation = 0x1C86;
constexpr auto bHasDroppedLoot = 0x1C87;
constexpr auto bUseFastAbilityReplication = 0x1C87;
constexpr auto bUseAIGoalComponent = 0x1C87;
constexpr auto FastReplicationMinimalReplicationTags = 0x1C88;
constexpr auto FastReplicationMinimalGameplayCueProxy = 0x1CF0;
constexpr auto OnInventoryInitialized = 0x1FC0;
constexpr auto OnInventoryUpdated = 0x1FD0;
constexpr auto AIDifficultyLevel = 0x2010;
constexpr auto LevelRatingDisplayType = 0x2014;
constexpr auto EncounterInfo = 0x2018;
constexpr auto SpawnSetIndex = 0x2020;
constexpr auto SpawnGroupGuid = 0x2024;
constexpr auto EnemyIndexInSpawnGroup = 0x2034;
constexpr auto FinishEncounterSpawnFallbackTime = 0x2038;
constexpr auto EncounterSpawnDisableRangedAttackingTime = 0x203C;
constexpr auto EncounterSpawnDisableMeleeAttackingTime = 0x2040;
constexpr auto EncounterExpectedLifespanTimerHandle = 0x2048;
constexpr auto SpawnRift = 0x2050;
constexpr auto SpawnRiftLocation = 0x2058;
constexpr auto SpawnSourceActor = 0x2070;
constexpr auto AIGoalComponentClass = 0x2078;
constexpr auto MaxTimeAllowedOutsideTether = 0x2080;
constexpr auto BehaviorTree = 0x2088;
constexpr auto DefaultNavFilter = 0x2090;
constexpr auto HuntingNavFilter = 0x2098;
constexpr auto DBNOInteractionDuration = 0x20A8;
constexpr auto OnDowned = 0x20B0;
constexpr auto DBNOInteractionType = 0x20C0;
constexpr auto MovementStyles = 0x20C1;
constexpr auto UpdateNearbyPickupFrequency = 0x20C8;
constexpr auto RequiredWeaponPickupTag = 0x20CC;
constexpr auto RequiredWeaponPickupTagQuery = 0x20D0;
constexpr auto bUsePickupDirectionOverride = 0x2118;
constexpr auto PickupDirectionOverride = 0x2120;
constexpr auto NoWeaponInCombatEventName = 0x2138;
constexpr auto NoWeaponOutOfCombatEventName = 0x213C;
constexpr auto CachedHitLocation = 0x2140;
constexpr auto TurnTransitionGameplayAbilityTag = 0x2158;
constexpr auto DeathParticles = 0x2178;
constexpr auto NumRunVariations = 0x21A0;
constexpr auto CurrentRunVariationIndex = 0x21A4;
constexpr auto RunVariationRadius = 0x21A8;
constexpr auto EyeIndex = 0x21AC;
constexpr auto SkinIndex = 0x21B0;
constexpr auto DefaultEyeColor = 0x21B4;
constexpr auto DefaultEyeBrightness = 0x21C4;
constexpr auto DefaultSkinColor = 0x21C8;
constexpr auto DefaultSkinGlow = 0x21D8;
constexpr auto MinimapDefaultIconColor = 0x21DC;
constexpr auto PlayerManagerMinimapColor = 0x21EC;
constexpr auto MiniMapIconBrush = 0x2210;
constexpr auto MiniMapAboveBelowIconBrush = 0x22D0;
constexpr auto MinimapGoalByTagColors = 0x2390;
constexpr auto MinimapGoalByTagColorIndex = 0x23A0;
constexpr auto AppearanceOverrideName = 0x23A4;
constexpr auto AppearanceOverrideGender = 0x23A8;
constexpr auto FollowPlayerEvent = 0x23A9;
constexpr auto InCombatNearPlayerEvent = 0x23AA;
constexpr auto InteractionType = 0x23AB;
constexpr auto FollowPlayerRange = 0x23AC;
constexpr auto InteractionDuration = 0x23B0;
constexpr auto InteractionText = 0x23B8;
constexpr auto SecondInteractionType = 0x23E8;
constexpr auto SecondInteractionDuration = 0x23EC;
constexpr auto SecondInteractionText = 0x23F0;
constexpr auto OnInteraction = 0x2408;
constexpr auto InteractionSound = 0x2418;
constexpr auto DefenderTrap = 0x2420;
constexpr auto OnActorBeginCrowdOverlap = 0x2428;
constexpr auto DeepWaterImmersionDepth = 0x2438;
constexpr auto bDebugAI = 0x243C;
constexpr auto bDebugAIAnim = 0x243C;
constexpr auto bUseBuildingAttackingHotspots = 0x243C;
constexpr auto bCanBeLaunched = 0x243C;
constexpr auto bCanMoveThroughWalls = 0x243C;
constexpr auto bCanUseNavWalking = 0x243C;
constexpr auto bCanUseSimpleCollisions = 0x243C;
constexpr auto bCanUseStepAside = 0x243D;
constexpr auto bCanUseDoors = 0x243D;
constexpr auto bCanUseOpenedDoors = 0x243D;
constexpr auto bCanUseShootingHotspots = 0x243D;
constexpr auto bCanSleep = 0x243D;
constexpr auto bIsSleeping = 0x243D;
constexpr auto bShouldStartSleeping = 0x243D;
constexpr auto bCanLookAtGoal = 0x243D;
constexpr auto bDespawnedDueToExpiration = 0x243E;
constexpr auto bAllowServerCosmeticComponentOptimizations = 0x243E;
constexpr auto bAllowCapsuleComponentsOnServer = 0x243E;
constexpr auto bRootComponentIgnoreQueryPawnCapsule = 0x243E;
constexpr auto bCanUseMeshPooling = 0x243E;
constexpr auto bUseCrowdSimulation = 0x243E;
constexpr auto bControlWalkingOffLedges = 0x243E;
constexpr auto bCanBeBaseForOtherPawns = 0x243E;
constexpr auto bUseAppearanceOverride = 0x2440;
constexpr auto bCanInteract = 0x2440;
constexpr auto bHideHealthBar = 0x2440;
constexpr auto bHasBuildingHitEffects = 0x2440;
constexpr auto bReplicateGrantedTagsWithFastAbilityReplication = 0x2440;
constexpr auto bReplicateGameplayCuesWithFastAbilityReplication = 0x2440;
constexpr auto bOnlySkipAbilitySystemComponentWithFastAbilityReplication = 0x2440;
constexpr auto bShouldIgnoreThisBaseRotation = 0x2441;
constexpr auto BeingControlledBy = 0x2458;
constexpr auto MovementUrgency = 0x2460;
constexpr auto AIType = 0x2461;
constexpr auto Team = 0x2462;
constexpr auto SimpleCollisionsProfileName = 0x2464;
constexpr auto UpgradeUIData = 0x2468;
constexpr auto CachedUpgradeUIDataUpgradeIconBrush = 0x24E0;
constexpr auto ScoreMultiplier = 0x25A0;
constexpr auto OverriddenScore = 0x25A4;
constexpr auto OverriddenScoreDistribution = 0x25A8;
constexpr auto LootDropConeHalfAngle = 0x25AC;
constexpr auto LootDropSpeed = 0x25B0;
constexpr auto MinItemTossDist = 0x25B4;
constexpr auto MaxItemTossDist = 0x25B8;
constexpr auto ItemTossDirectionConeHalfAngle = 0x25BC;
constexpr auto HotspotType = 0x25C0;
constexpr auto PartialPathUsage = 0x25C1;
constexpr auto PlayerManager = 0x25C8;
constexpr auto DefenderItemInstanceId = 0x25D0;
constexpr auto DefenderSquadId = 0x25E0;
constexpr auto DefenderPlacedTime = 0x25E4;
constexpr auto RecentlySeenInterval = 0x25E8;
constexpr auto CurrentAIRotationRate = 0x25F0;
constexpr auto MoveSoundStimulusBroadcastInterval = 0x2608;
constexpr auto MoveSoundStimulusMaxRange = 0x260C;
constexpr auto bGenerateMoveSoundInAllMovementModes = 0x2610;
constexpr auto WeaponCollisionComponent = 0x2620;
constexpr auto Inventory = 0x2628;
constexpr auto NearbyPickups = 0x2630;
constexpr auto UnreachablePickups = 0x2640;
constexpr auto AppearanceOverrideEntries = 0x26A0;
constexpr auto AppearanceOverrideEntryIndex = 0x26B0;
constexpr auto SpawnLocation = 0x26B8;
constexpr auto SpawnRotation = 0x26D0;
constexpr auto SleepingFloor = 0x26E8;
constexpr auto PelvisBoneName = 0x26F0;
constexpr auto HeadBoneName = 0x26F4;
constexpr auto MinimapIndicatorUpdateFrequency = 0x2704;
constexpr auto MiniMapViewableDistance = 0x2710;
constexpr auto DistanceToPlayerManagerToShowHealthBar = 0x2714;
constexpr auto DistanceToOtherPlayersToShowHealthBar = 0x2718;
constexpr auto AttributesSet = 0x2728;
constexpr auto CharacterAttrSet = 0x2730;
constexpr auto WeaponAttrSet = 0x2738;
constexpr auto ImpactPhysicalSurfaceSounds = 0x2740;
constexpr auto ImpactPhysicalSurfaceEffects = 0x2820;
constexpr auto AthenaRVOWeightOverride = 0x2900;
constexpr auto MinimapIndicator = 0x2928;
constexpr auto MinimapScale = 0x2930;
constexpr auto DefaultGameplayAbilitySets = 0x2940;
constexpr auto SpawnInheritedCharacterAbilitySets = 0x2950;
constexpr auto SpawnModifierDefinitions = 0x2960;
constexpr auto AIPawnAbilitySystemComponent = 0x2970;
constexpr auto WallAttackGameplayAbilityTags = 0x2978;
constexpr auto WallRangedAttackGameplayAbilityTags = 0x2998;
constexpr auto CeilingAttackGameplayAbilityTags = 0x29B8;
constexpr auto FloorAttackGameplayAbilityTags = 0x29D8;
constexpr auto FailedAbilityQueryTags = 0x29F8;
constexpr auto CurrentAimTarget = 0x2A08;
constexpr auto NavObstacleComponent = 0x2A10;
constexpr auto BuildingHitMaxDistanceToPlayer = 0x2A28;
constexpr auto BuildingHitMaxDistanceToHitLocation = 0x2A2C;
constexpr auto HeadHeightPercent = 0x2A30;
constexpr auto MarkerDisplay = 0x2A38;
constexpr auto bCanBeMarked = 0x2AD0;
constexpr auto IsBlockingBuilding = 0x2AD8;
constexpr auto NetUpdateFrequency_Min = 0x2B28;
constexpr auto NetUpdateFrequency_Dormant = 0x2B50;
constexpr auto NetUpdateFrequency_BelowLower = 0x2B78;
constexpr auto NetUpdateFrequency_Lower = 0x2BA0;
constexpr auto NetUpdateFrequency_AboveLower = 0x2BC8;
constexpr auto NetUpdateFrequency_BelowNormal = 0x2BF0;
constexpr auto NetUpdateFrequency_Normal = 0x2C18;
constexpr auto NetUpdateFrequency_AboveNormal = 0x2C40;
constexpr auto DefenderItem = 0x2D88;
constexpr auto TetheredFollower = 0x2E40;
constexpr auto TetheredCamera = 0x2E58;
constexpr auto TetheredTargetingCamera = 0x2E60;
constexpr auto bIsTetheredBoosting = 0x2E68;
constexpr auto TetherBoostMultiplier = 0x2E6C;
constexpr auto TetherJumpServerCorrectionIgnoreTime = 0x2E70;
constexpr auto TetherJumpLastTime = 0x2E74;
constexpr auto TetherBoundsXYSplineClass = 0x2E78;
constexpr auto TetherBoundsXYSplineComponent = 0x2E80;
constexpr auto OnUpdateFromVehicleInput = 0x2E88;
constexpr auto CustomizationsToLoad = 0x2EA0;
constexpr auto bCanUnloadCustomization = 0x2EA8;
constexpr auto UsedCustomization = 0x2EB0;
constexpr auto OnCustomizationsLoadedEvent = 0x2EB8;
constexpr auto OnCustomizationsUnloadedEvent = 0x2EC8;
constexpr auto AIAssetLoader = 0x2ED8;
constexpr auto bReplicateInventory = 0x2EE0;
constexpr auto LastDamageHitResult = 0x2F08;
constexpr auto CustomBounceVelocityForPickup = 0x2FE8;
constexpr auto CustomBouncePawnOffsetForPickup = 0x3000;
}

namespace FortPlayerPawnAthena {
	//constexpr auto OnInteractionFailedCallback = 0x3c10; // FMulticastInlineDelegate
	//constexpr auto ItemInteractionActor = 0x3c20; // AActor*
	//constexpr auto CurrentPawnSquaredSpeed = 0x3c38; // float
	//constexpr auto CurrentPawnSquaredSpeedXY = 0x3c3c; // float
	//constexpr auto CurrentPawnVelXYRot = 0x3c40; // FRotator
	//constexpr auto PreviousVelocityXY = 0x3c58; // FVector
	//constexpr auto OnReviveSound = 0x3c70; // USoundBase*
	//constexpr auto ReviveFromDBNOTime = 0x3c78; // float
	//constexpr auto DBNOStartTime = 0x3c7c; // float
	//constexpr auto DBNOInvulnerableTime = 0x3c80; // float
	//constexpr auto ConvertFromDBNOTime = 0x3c84; // float
	//constexpr auto ServerWorldTimeRevivalTime = 0x3c88; // float
	//constexpr auto bWasCrouchedBeforeDBNO = 0x3c98; // bool
	//constexpr auto ItemSpecialActorID = 0x3c9c; // FName
	//constexpr auto ItemSpecialActorCategoryTag = 0x3ca0; // FGameplayTag
	//constexpr auto BecameSpecialActorTime = 0x3ca8; // float
	//constexpr auto OnUIGameplayCue = 0x3cb0; // FMulticastInlineDelegate
	//constexpr auto bPlaytestWithNoMouse = 0x3cc0; // bool
	//constexpr auto CapsuleRadiusAthena = 0x3cc8; // float
	//constexpr auto CapsuleHalfHeightAthena = 0x3ccc; // float
	//constexpr auto MeshHeightAdjustAthena = 0x3cd0; // float
	//constexpr auto LandEmitterTemplate = 0x3cd8; // UParticleSystem*
	//constexpr auto IgnoreLandGhostModeTags = 0x3ce0; // FGameplayTagContainer
	//constexpr auto LandWindEmitterTemplate = 0x3d00; // UParticleSystem*
	//constexpr auto LandFXLocationOffset = 0x3d08; // FVector
	//constexpr auto LandFXRotateYawMaxDegrees = 0x3d20; // float
	//constexpr auto LandFXMaxDrawDistance = 0x3d24; // float
	//constexpr auto LandForceIntensityVelocityZFactor = 0x3d28; // float
	//constexpr auto MinLandForceIntensity = 0x3d2c; // float
	//constexpr auto MaxLandForceIntensity = 0x3d30; // float
	//constexpr auto MinLandForceDuration = 0x3d34; // float
	//constexpr auto MaxLandForceDuration = 0x3d38; // float
	//constexpr auto LandFXCoolDownTime = 0x3d3c; // float
	//constexpr auto LandFXPawnRecentRenderTolerance = 0x3d40; // float
	//constexpr auto bShouldPawnInstantDie = 0x3d58; // bool
	//constexpr auto bShouldPawnDBNODisplayOnKillFeed = 0x3d59; // bool
	//constexpr auto bShouldPawnDeathDisplayOnKillFeed = 0x3d5a; // bool
	//constexpr auto bShouldPawnLeaveEliminationIndicator = 0x3d5b; // bool
	//constexpr auto bShouldPawnAwardPoints = 0x3d5c; // bool
	//constexpr auto bShouldTriggerDeathAnalytics = 0x3d5d; // bool
	//constexpr auto bShouldDropItemsOnDeath = 0x3d5e; // bool
	//constexpr auto bShouldSkipMovementFullSimulation = 0x3d5f; // bool
	//constexpr auto bEnableRenderCustomDepth = 0x3d60; // char : 1
	//constexpr auto bEnableGroundInteractionEffects = 0x3d60; // char : 1
	//constexpr auto AttributeReplicationProxy = 0x3d64; // FFortPlayerAthenaAttributeReplicationProxy
	//constexpr auto GravityAttributeReplicationProxy = 0x3d7c; // FFortPlayerAthenaGravityAttributeReplicationProxy
	//constexpr auto ReplayRepAnimMontageInfo = 0x3d90; // FGameplayAbilityRepAnimMontage
	//constexpr auto SimulatedProxyActiveGameplayCues = 0x3dd0; // FMinimalGameplayCueReplicationProxy
	//constexpr auto SimulatedProxyMinimalReplicationGameplayCues = 0x40a0; // FMinimalGameplayCueReplicationProxy
	//constexpr auto FastReplicationMinimalReplicationTags = 0x4370; // FMinimalReplicationTagCountMap
	//constexpr auto CurrentQuickChatIcon = 0x43d8; // UTexture2D*
	//constexpr auto bADSWhileNotOnGround = 0x4525; // bool
	//constexpr auto DefaultCrouchedFootstepSound = 0x4528; // USoundBase*
	//constexpr auto DefaultCrouchSprintFootstepSound = 0x4530; // USoundBase*
	//constexpr auto OnFortPlayerDied = 0x4538; // FMulticastInlineDelegate
	//constexpr auto OnFortPlayerHitByVehicle = 0x4548; // FMulticastInlineDelegate
	//constexpr auto KillerForSpectatorRotation = 0x4558; // APawn*
	//constexpr auto bDelaySimProxyCollisionInAircraftPhase = 0x4561; // bool
	//constexpr auto TimeToDelaySkydiveCollision = 0x4564; // float
	//constexpr auto PositionCaptureIntervalForDistanceTraveledAccumulation = 0x4568; // float
	//constexpr auto SkydiveAudioMovementVolumeInterpSpeed = 0x4580; // float
	//constexpr auto SkydiveAudioForwardDotInterpSpeed = 0x4590; // float
	//constexpr auto SkydiveAudioRightDotInterpSpeed = 0x4594; // float
	//constexpr auto DamageFXSignificance = 0x459c; // FFortEffectDistanceQuality
	//constexpr auto ScreenEffectHealthDamage = 0x45c0; // AFortEmitterCameraLensEffectDirectional*
	//constexpr auto ScreenEffectShieldDamage = 0x45c8; // AFortEmitterCameraLensEffectDirectional*
	//constexpr auto AdditiveHitReactsMontage = 0x45d0; // UAnimMontage*
	//constexpr auto DamageTagsToNotDisplayDirectionDamage = 0x45d8; // FGameplayTagContainer
	//constexpr auto DamageTagsToNotAddCameraShake = 0x45f8; // FGameplayTagContainer
	//constexpr auto WeaponTagsToNotPlayCircleAndStreakFX = 0x4618; // FGameplayTagContainer
	//constexpr auto OnPlayerLootedContainer = 0x4638; // FMulticastInlineDelegate
	//constexpr auto bIsPlayerPawnReady = 0x4668; // bool
	//constexpr auto LastFiredLocation = 0x4670; // FVector
	//constexpr auto LastFiredDirection = 0x4688; // FVector
	//constexpr auto LastFiredTime = 0x46a0; // float
	//constexpr auto PrototypeShootingModel = 0x46b8; // UDataTable*
	//constexpr auto FallInstigator = 0x46c0; // AController*
	//constexpr auto FallDamageTags = 0x46c8; // FGameplayTagContainer
	//constexpr auto LastFloorBeforeFalling = 0x46e8; // ABuildingSMActor*
	//constexpr auto LastFallDistance = 0x46f0; // float
	//constexpr auto SkydiveDebugTimer = 0x46f4; // float
	//constexpr auto MeleeCombatSlowSpeedMultiplier = 0x46f8; // float
	//constexpr auto MeleeCombatSlowDuration = 0x46fc; // float
	//constexpr auto EncryptedPawnReplayData = 0x4700; // FAthenaPawnReplayData
	//constexpr auto InAirAudioComp = 0x4730; // UAudioComponent*
	//constexpr auto PSC_PlayerWalkLand = 0x4738; // UParticleSystemComponent*
	//constexpr auto PSC_PlayerRunLand = 0x4740; // UParticleSystemComponent*
	//constexpr auto PSC_PlayerSlideLand = 0x4748; // UParticleSystemComponent*
	//constexpr auto PSC_HitDamage = 0x4750; // UParticleSystemComponent*
	//constexpr auto SlidingAudioComp = 0x4758; // UAudioComponent*
	//constexpr auto MobileInteractionComponents = 0x4780; // TArray<UFortMobileInteractionComponent*>
	//constexpr auto MinimapIconColorFiftyFiftyPlayer = 0x4790; // FLinearColor
	//constexpr auto MaxIndicatorVisibilityDistForReplays = 0x47a0; // float
	//constexpr auto ConsumableUseAudio = 0x47a8; // UAudioComponent*
	//constexpr auto InAirAudioParameterValue = 0x47b0; // float
	//constexpr auto InAirAudioFallDistanceThreshold = 0x47b4; // float
	//constexpr auto bFXPlayDustOnMovement = 0x47b9; // bool
	//constexpr auto WalkDustActivateSpeed = 0x47bc; // float
	//constexpr auto WalkDustResetSpeed = 0x47c4; // float
	//constexpr auto RunParticleActivateSpeed = 0x47cc; // float
	//constexpr auto SlidingIntensitySound3P = 0x47e0; // USoundBase*
	//constexpr auto SlidingIntensitySound1P = 0x47e8; // USoundBase*
	//constexpr auto SlideAudioIntensity = 0x47f0; // float
	//constexpr auto LastHealthPostProcessWeight = 0x47f4; // float
	//constexpr auto HealthPostProcessStartTime = 0x47f8; // float
	//constexpr auto HealthPostProcessMuteTime = 0x47fc; // float
	//constexpr auto CustomDepthMatchedComponents = 0x4870; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
	//constexpr auto bIsCreativeGhostModeActivated = 0x4884; // bool
	//constexpr auto bIsCreativeModeratorModeActivated = 0x4885; // bool
	//constexpr auto SkinWeightManager = 0x48b0; // UFortSkinWeightOverrideManager*
	//constexpr auto InvulnerabilityTags = 0x48f0; // FGameplayTagContainer
	//constexpr auto UnicornPawnSampler = 0x4910; // UUnicornAthenaPawnSampler*
	//constexpr auto MarkerDisplay = 0x4918; // FMarkedActorDisplayInfo
	//constexpr auto DamageForceFeedback = 0x49c0; // UForceFeedbackEffect*
	//constexpr auto DamageCameraShakeClass = 0x49c8; // UMatineeCameraShake*
	//constexpr auto DamageTagsExcludedFromCameraShake = 0x49d0; // FGameplayTagContainer
	//constexpr auto UpdateSharedReplicationWhileAttachedCount = 0x4a08; // int32_t
	//constexpr auto BP_RotationSpeedWhenTurnedOffByAnim = 0x4a0c; // float
	//constexpr auto BP_RotationSpeedOnDetach = 0x4a10; // float
	//constexpr auto BP_MaxRotationSpeedWhenAttached = 0x4a14; // float
	//constexpr auto BP_TimeToReachMaxRotationSpeed = 0x4a18; // float
	//constexpr auto BP_AddedRotationInfluenceFromForwardVectorOnAttach = 0x4a1c; // float
	//constexpr auto YawNegative90 = 0x4a20; // FRotator
	//constexpr auto CallerID_update_mesh_rotation = 0x4a38; // FString
	//constexpr auto AttachPointNormalizeTolerance = 0x4a48; // float
	//constexpr auto ForwardProjectedNormalizeTolerance = 0x4a4c; // float
	//constexpr auto Swinging_AttachBGA = 0x4a50; // ABuildingGameplayActor*
	//constexpr auto Swinging_RightVec = 0x4a58; // FVector
	//constexpr auto Swinging_LastAttachTime = 0x4a70; // float
	//constexpr auto bSwingingShouldRotateMesh = 0x4a74; // bool
	//constexpr auto bSwinging_UseProgrammaticRotation = 0x4a75; // bool
	//constexpr auto bImprovedDBNOEnabled = 0x4a76; // bool
	//constexpr auto DBNORevivingActorsCount = 0x4a77; // char

constexpr auto OnInteractionFailedCallback = 0x3E80;
constexpr auto ItemInteractionActor = 0x3E90;
constexpr auto CurrentPawnSquaredSpeed = 0x3EA8;
constexpr auto CurrentPawnSquaredSpeedXY = 0x3EAC;
constexpr auto CurrentPawnVelXYRot = 0x3EB0;
constexpr auto PreviousVelocityXY = 0x3EC8;
constexpr auto OnReviveSound = 0x3EE0;
constexpr auto ReviveFromDBNOTime = 0x3EE8;
constexpr auto DBNOStartTime = 0x3EEC;
constexpr auto DBNOInvulnerableTime = 0x3EF0;
constexpr auto ConvertFromDBNOTime = 0x3EF4;
constexpr auto ServerWorldTimeRevivalTime = 0x3EF8;
constexpr auto bWasCrouchedBeforeDBNO = 0x3F08;
constexpr auto ItemSpecialActorID = 0x3F0C;
constexpr auto ItemSpecialActorCategoryTag = 0x3F10;
constexpr auto BecameSpecialActorTime = 0x3F18;
constexpr auto OnUIGameplayCue = 0x3F20;
constexpr auto bPlaytestWithNoMouse = 0x3F30;
constexpr auto CapsuleRadiusAthena = 0x3F38;
constexpr auto CapsuleHalfHeightAthena = 0x3F3C;
constexpr auto MeshHeightAdjustAthena = 0x3F40;
constexpr auto LandEmitterTemplate = 0x3F48;
constexpr auto IgnoreLandGhostModeTags = 0x3F50;
constexpr auto LandWindEmitterTemplate = 0x3F70;
constexpr auto LandFXLocationOffset = 0x3F78;
constexpr auto LandFXRotateYawMaxDegrees = 0x3F90;
constexpr auto LandFXMaxDrawDistance = 0x3F94;
constexpr auto LandForceIntensityVelocityZFactor = 0x3F98;
constexpr auto MinLandForceIntensity = 0x3F9C;
constexpr auto MaxLandForceIntensity = 0x3FA0;
constexpr auto MinLandForceDuration = 0x3FA4;
constexpr auto MaxLandForceDuration = 0x3FA8;
constexpr auto LandFXCoolDownTime = 0x3FAC;
constexpr auto LandFXPawnRecentRenderTolerance = 0x3FB0;
constexpr auto bShouldPawnInstantDie = 0x3FC8;
constexpr auto bShouldPawnDBNODisplayOnKillFeed = 0x3FC9;
constexpr auto bShouldPawnDeathDisplayOnKillFeed = 0x3FCA;
constexpr auto bShouldPawnLeaveEliminationIndicator = 0x3FCB;
constexpr auto bShouldPawnAwardPoints = 0x3FCC;
constexpr auto bShouldTriggerDeathAnalytics = 0x3FCD;
constexpr auto bShouldDropItemsOnDeath = 0x3FCE;
constexpr auto bShouldSkipMovementFullSimulation = 0x3FCF;
constexpr auto bEnableRenderCustomDepth = 0x3FD0;
constexpr auto bEnableGroundInteractionEffects = 0x3FD0;
constexpr auto AttributeReplicationProxy = 0x3FD4;
constexpr auto GravityAttributeReplicationProxy = 0x3FEC;
constexpr auto ReplayRepAnimMontageInfo = 0x4000;
constexpr auto SimulatedProxyActiveGameplayCues = 0x4040;
constexpr auto SimulatedProxyMinimalReplicationGameplayCues = 0x4310;
constexpr auto FastReplicationMinimalReplicationTags = 0x45E0;
constexpr auto CurrentQuickChatIcon = 0x4648;
constexpr auto bADSWhileNotOnGround = 0x4795;
constexpr auto DefaultCrouchedFootstepSound = 0x4798;
constexpr auto DefaultCrouchSprintFootstepSound = 0x47A0;
constexpr auto OnFortPlayerDied = 0x47A8;
constexpr auto OnFortPlayerHitByVehicle = 0x47B8;
constexpr auto KillerForSpectatorRotation = 0x47C8;
constexpr auto bDelaySimProxyCollisionInAircraftPhase = 0x47D1;
constexpr auto TimeToDelaySkydiveCollision = 0x47D4;
constexpr auto PositionCaptureIntervalForDistanceTraveledAccumulation = 0x47D8;
constexpr auto SkydiveAudioMovementVolumeInterpSpeed = 0x47F0;
constexpr auto SkydiveAudioForwardDotInterpSpeed = 0x4800;
constexpr auto SkydiveAudioRightDotInterpSpeed = 0x4804;
constexpr auto DamageFXSignificance = 0x480C;
constexpr auto ScreenEffectHealthDamage = 0x4830;
constexpr auto ScreenEffectShieldDamage = 0x4838;
constexpr auto AdditiveHitReactsMontage = 0x4840;
constexpr auto DamageTagsToNotDisplayDirectionDamage = 0x4848;
constexpr auto DamageTagsToNotAddCameraShake = 0x4868;
constexpr auto WeaponTagsToNotPlayCircleAndStreakFX = 0x4888;
constexpr auto OnPlayerLootedContainer = 0x48A8;
constexpr auto bIsPlayerPawnReady = 0x48D8;
constexpr auto LastFiredLocation = 0x48E0;
constexpr auto LastFiredDirection = 0x48F8;
constexpr auto LastFiredTime = 0x4910;
constexpr auto PrototypeShootingModel = 0x4928;
constexpr auto FallInstigator = 0x4930;
constexpr auto FallDamageTags = 0x4938;
constexpr auto LastFloorBeforeFalling = 0x4958;
constexpr auto LastFallDistance = 0x4960;
constexpr auto SkydiveDebugTimer = 0x4964;
constexpr auto MeleeCombatSlowSpeedMultiplier = 0x4968;
constexpr auto MeleeCombatSlowDuration = 0x496C;
constexpr auto EncryptedPawnReplayData = 0x4970;
constexpr auto InAirAudioComp = 0x49A0;
constexpr auto PSC_PlayerWalkLand = 0x49A8;
constexpr auto PSC_PlayerRunLand = 0x49B0;
constexpr auto PSC_PlayerSlideLand = 0x49B8;
constexpr auto PSC_HitDamage = 0x49C0;
constexpr auto SlidingAudioComp = 0x49C8;
constexpr auto ContrailsComponent = 0x49D0;
constexpr auto MobileInteractionComponents = 0x49F8;
constexpr auto MinimapIconColorFiftyFiftyPlayer = 0x4A08;
constexpr auto MaxIndicatorVisibilityDistForReplays = 0x4A18;
constexpr auto ConsumableUseAudio = 0x4A20;
constexpr auto InAirAudioParameterValue = 0x4A28;
constexpr auto InAirAudioFallDistanceThreshold = 0x4A2C;
constexpr auto bFXPlayDustOnMovement = 0x4A31;
constexpr auto WalkDustActivateSpeed = 0x4A34;
constexpr auto WalkDustResetSpeed = 0x4A3C;
constexpr auto RunParticleActivateSpeed = 0x4A44;
constexpr auto SlidingIntensitySound3P = 0x4A58;
constexpr auto SlidingIntensitySound1P = 0x4A60;
constexpr auto SlideAudioIntensity = 0x4A68;
constexpr auto LastHealthPostProcessWeight = 0x4A6C;
constexpr auto HealthPostProcessStartTime = 0x4A70;
constexpr auto HealthPostProcessMuteTime = 0x4A74;
constexpr auto CustomDepthMatchedComponents = 0x4AE8;
constexpr auto bIsCreativeGhostModeActivated = 0x4AFC;
constexpr auto bIsCreativeModeratorModeActivated = 0x4AFD;
constexpr auto SkinWeightManager = 0x4B28;
constexpr auto InvulnerabilityTags = 0x4B68;
constexpr auto UnicornPawnSampler = 0x4B88;
constexpr auto MarkerDisplay = 0x4B90;
constexpr auto DamageForceFeedback = 0x4C38;
constexpr auto DamageCameraShakeClass = 0x4C40;
constexpr auto DamageTagsExcludedFromCameraShake = 0x4C48;
constexpr auto UpdateSharedReplicationWhileAttachedCount = 0x4C80;
constexpr auto BP_RotationSpeedWhenTurnedOffByAnim = 0x4C84;
constexpr auto BP_RotationSpeedOnDetach = 0x4C88;
constexpr auto BP_MaxRotationSpeedWhenAttached = 0x4C8C;
constexpr auto BP_TimeToReachMaxRotationSpeed = 0x4C90;
constexpr auto BP_AddedRotationInfluenceFromForwardVectorOnAttach = 0x4C94;
constexpr auto YawNegative90 = 0x4C98;
constexpr auto CallerID_update_mesh_rotation = 0x4CB0;
constexpr auto AttachPointNormalizeTolerance = 0x4CC0;
constexpr auto ForwardProjectedNormalizeTolerance = 0x4CC4;
constexpr auto Swinging_AttachBGA = 0x4CC8;
constexpr auto Swinging_RightVec = 0x4CD0;
constexpr auto Swinging_LastAttachTime = 0x4CE8;
constexpr auto bSwingingShouldRotateMesh = 0x4CEC;
constexpr auto bSwinging_UseProgrammaticRotation = 0x4CED;
constexpr auto bImprovedDBNOEnabled = 0x4CEE;
constexpr auto DBNORevivingActorsCount = 0x4CEF;
}

namespace   WorldSettings {

	//constexpr auto VisibilityAggressiveness = 0x28c; // EVisibilityAggressiveness
	//constexpr auto bPrecomputeVisibility = 0x28d; // char : 1
	//constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x28d; // char : 1
	//constexpr auto bEnableWorldBoundsChecks = 0x28d; // char : 1
	//constexpr auto bEnableNavigationSystem = 0x28d; // char : 1
	//constexpr auto bEnableAISystem = 0x28d; // char : 1
	//constexpr auto bEnableWorldComposition = 0x28d; // char : 1
	//constexpr auto bUseClientSideLevelStreamingVolumes = 0x28d; // char : 1
	//constexpr auto bEnableWorldOriginRebasing = 0x28d; // char : 1
	//constexpr auto bGenerateSingleClusterForLevel = 0x28e; // char : 1
	//constexpr auto bOverrideDefaultBroadphaseSettings = 0x28e; // char : 1
	//constexpr auto bHighPriorityLoadingLocal = 0x28e; // char : 1
	//constexpr auto bForceNoPrecomputedLighting = 0x28e; // char : 1
	//constexpr auto bHighPriorityLoading = 0x28e; // char : 1
	//constexpr auto bMinimizeBSPSections = 0x28e; // char : 1
	//constexpr auto bGlobalGravitySet = 0x28e; // char : 1
	//constexpr auto bWorldGravitySet = 0x28e; // char : 1
	//constexpr auto AISystemClass = 0x290; // TSoftClassPtr<UObject>
	//constexpr auto LevelInstancePivotOffset = 0x2b8; // FVector
	//constexpr auto NavigationSystemConfig = 0x2d0; // UNavigationSystemConfig*
	//constexpr auto NavigationSystemConfigOverride = 0x2d8; // UNavigationSystemConfig*
	//constexpr auto WorldPartition = 0x2e0; // UWorldPartition*
	//constexpr auto WorldToMeters = 0x2e8; // float
	//constexpr auto KillZ = 0x2ec; // float
	//constexpr auto KillZDamageType = 0x2f0; // UDamageType*
	//constexpr auto WorldGravityZ = 0x2f8; // float
	//constexpr auto GlobalGravityZ = 0x2fc; // float
	//constexpr auto DefaultPhysicsVolumeClass = 0x300; // ADefaultPhysicsVolume*
	//constexpr auto PhysicsCollisionHandlerClass = 0x308; // UPhysicsCollisionHandler*
	//constexpr auto DefaultGameMode = 0x310; // AGameModeBase*
	//constexpr auto GameNetworkManagerClass = 0x318; // AGameNetworkManager*
	//constexpr auto PackedLightAndShadowMapTextureSize = 0x320; // int32_t
	//constexpr auto DefaultColorScale = 0x328; // FVector
	//constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x340; // float
	//constexpr auto GlobalDistanceFieldViewDistance = 0x344; // float
	//constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x348; // float
	//constexpr auto DefaultReverbSettings = 0x350; // FReverbSettings
	//constexpr auto DefaultAmbientZoneSettings = 0x370; // FInteriorSettings
	//constexpr auto DefaultBaseSoundMix = 0x398; // USoundMix*
	//constexpr auto TimeDilation = 0x3a0; // float
	//constexpr auto MatineeTimeDilation = 0x3a4; // float
	//constexpr auto DemoPlayTimeDilation = 0x3a8; // float
	//constexpr auto MinGlobalTimeDilation = 0x3ac; // float
	//constexpr auto MaxGlobalTimeDilation = 0x3b0; // float
	//constexpr auto MinUndilatedFrameTime = 0x3b4; // float
	//constexpr auto MaxUndilatedFrameTime = 0x3b8; // float
	//constexpr auto BroadphaseSettings = 0x3c0; // FBroadphaseSettings
	//constexpr auto ReplicationViewers = 0x440; // TArray<FNetViewer>
	//constexpr auto AssetUserData = 0x450; // TArray<UAssetUserData*>
	//constexpr auto PauserPlayerState = 0x460; // APlayerState*
	//constexpr auto MaxNumberOfBookmarks = 0x468; // int32_t
	//constexpr auto DefaultBookmarkClass = 0x470; // UBookmarkBase*
	//constexpr auto BookmarkArray = 0x478; // TArray<UBookmarkBase*>
	//constexpr auto LastBookmarkClass = 0x488; // UBookmarkBase*

	constexpr auto VisibilityCellSize = 0x278;
	constexpr auto VisibilityAggressiveness = 0x27C;
	constexpr auto bPrecomputeVisibility = 0x27D;
	constexpr auto bPlaceCellsOnlyAlongCameraTracks = 0x27D;
	constexpr auto bEnableWorldBoundsChecks = 0x27D;
	constexpr auto bEnableNavigationSystem = 0x27D;
	constexpr auto bEnableAISystem = 0x27D;
	constexpr auto bEnableWorldComposition = 0x27D;
	constexpr auto bUseClientSideLevelStreamingVolumes = 0x27D;
	constexpr auto bEnableWorldOriginRebasing = 0x27D;
	constexpr auto bWorldGravitySet = 0x27E;
	constexpr auto bGlobalGravitySet = 0x27E;
	constexpr auto bMinimizeBSPSections = 0x27E;
	constexpr auto bForceNoPrecomputedLighting = 0x27E;
	constexpr auto bHighPriorityLoading = 0x27E;
	constexpr auto bHighPriorityLoadingLocal = 0x27E;
	constexpr auto bOverrideDefaultBroadphaseSettings = 0x27E;
	constexpr auto bGenerateSingleClusterForLevel = 0x27E;
	constexpr auto AISystemClass = 0x280;
	constexpr auto LevelInstancePivotOffset = 0x2A8;
	constexpr auto NavigationSystemConfig = 0x2C0;
	constexpr auto NavigationSystemConfigOverride = 0x2C8;
	constexpr auto WorldPartition = 0x2D0;
	constexpr auto WorldToMeters = 0x2D8;
	constexpr auto KillZ = 0x2DC;
	constexpr auto KillZDamageType = 0x2E0;
	constexpr auto WorldGravityZ = 0x2E8;
	constexpr auto GlobalGravityZ = 0x2EC;
	constexpr auto DefaultPhysicsVolumeClass = 0x2F0;
	constexpr auto PhysicsCollisionHandlerClass = 0x2F8;
	constexpr auto DefaultGameMode = 0x300;
	constexpr auto GameNetworkManagerClass = 0x308;
	constexpr auto PackedLightAndShadowMapTextureSize = 0x310;
	constexpr auto DefaultColorScale = 0x318;
	constexpr auto DefaultMaxDistanceFieldOcclusionDistance = 0x330;
	constexpr auto GlobalDistanceFieldViewDistance = 0x334;
	constexpr auto DynamicIndirectShadowsSelfShadowingIntensity = 0x338;
	constexpr auto DefaultReverbSettings = 0x340;
	constexpr auto DefaultAmbientZoneSettings = 0x360;
	constexpr auto DefaultBaseSoundMix = 0x388;
	constexpr auto TimeDilation = 0x390;
	constexpr auto MatineeTimeDilation = 0x394;
	constexpr auto DemoPlayTimeDilation = 0x398;
	constexpr auto MinGlobalTimeDilation = 0x39C;
	constexpr auto MaxGlobalTimeDilation = 0x3A0;
	constexpr auto MinUndilatedFrameTime = 0x3A4;
	constexpr auto MaxUndilatedFrameTime = 0x3A8;
	constexpr auto BroadphaseSettings = 0x3B0;
	constexpr auto ReplicationViewers = 0x430;
	constexpr auto AssetUserData = 0x440;
	constexpr auto PauserPlayerState = 0x450;
	constexpr auto MaxNumberOfBookmarks = 0x458;
	constexpr auto DefaultBookmarkClass = 0x460;
	constexpr auto BookmarkArray = 0x468;
	constexpr auto LastBookmarkClass = 0x478;
}

namespace Actor {
	//constexpr auto PrimaryActorTick = 0x28; // FActorTickFunction
	//constexpr auto bCallPreReplication = 0x58; // char : 1
	//constexpr auto bHidden = 0x58; // char : 1
	//constexpr auto bCallPreReplicationForReplay = 0x58; // char : 1
	//constexpr auto bNetTemporary = 0x58; // char : 1
	//constexpr auto bReplicateMovement = 0x58; // char : 1
	//constexpr auto bAlwaysRelevant = 0x58; // char : 1
	//constexpr auto bOnlyRelevantToOwner = 0x58; // char : 1
	//constexpr auto bNetStartup = 0x58; // char : 1
	//constexpr auto bTearOff = 0x59; // char : 1
	//constexpr auto bExchangedRoles = 0x59; // char : 1
	//constexpr auto bNetLoadOnClient = 0x59; // char : 1
	//constexpr auto bNetUseOwnerRelevancy = 0x59; // char : 1
	//constexpr auto bRelevantForNetworkReplays = 0x59; // char : 1
	//constexpr auto bRelevantForLevelBounds = 0x59; // char : 1
	//constexpr auto bReplayRewindable = 0x59; // char : 1
	//constexpr auto bForceNetAddressable = 0x59; // char : 1
	//constexpr auto bFindCameraComponentWhenViewTarget = 0x5a; // char : 1
	//constexpr auto bIgnoresOriginShifting = 0x5a; // char : 1
	//constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5a; // char : 1
	//constexpr auto bCanBeDamaged = 0x5a; // char : 1
	//constexpr auto bCollideWhenPlacing = 0x5a; // char : 1
	//constexpr auto bAutoDestroyWhenFinished = 0x5a; // char : 1
	//constexpr auto bAllowTickBeforeBeginPlay = 0x5a; // char : 1
	//constexpr auto bBlockInput = 0x5a; // char : 1
	//constexpr auto bCanBeInCluster = 0x5b; // char : 1
	//constexpr auto bReplicateUsingRegisteredSubObjectList = 0x5b; // char : 1
	//constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5b; // char : 1
	//constexpr auto bReplicates = 0x5b; // char : 1
	//constexpr auto bActorSeamlessTraveled = 0x5b; // char : 1
	//constexpr auto bIsEditorOnlyActor = 0x5b; // char : 1
	//constexpr auto bEnableAutoLODGeneration = 0x5b; // char : 1
	//constexpr auto bActorEnableCollision = 0x5c; // char : 1
	//constexpr auto bActorIsBeingDestroyed = 0x5c; // char : 1
	//constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5e; // EActorUpdateOverlapsMethod
	//constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5f; // EActorUpdateOverlapsMethod
	//constexpr auto InitialLifeSpan = 0x60; // float
	//constexpr auto CustomTimeDilation = 0x64; // float
	//constexpr auto RemoteRole = 0x68; // ENetRole
	//constexpr auto RayTracingGroupId = 0x6c; // int32_t
	//constexpr auto AttachmentReplication = 0x70; // FRepAttachment
	//constexpr auto ReplicatedMovement = 0xd0; // FRepMovement
	//constexpr auto Owner = 0x138; // AActor*
	//constexpr auto NetDriverName = 0x140; // FName
	//constexpr auto Role = 0x144; // ENetRole
	//constexpr auto NetDormancy = 0x145; // ENetDormancy
	//constexpr auto SpawnCollisionHandlingMethod = 0x146; // ESpawnActorCollisionHandlingMethod
	//constexpr auto AutoReceiveInput = 0x147; // EAutoReceiveInput
	//constexpr auto InputPriority = 0x148; // int32_t
	//constexpr auto InputComponent = 0x150; // UInputComponent*
	//constexpr auto NetCullDistanceSquared = 0x158; // float
	//constexpr auto NetTag = 0x15c; // int32_t
	//constexpr auto NetUpdateFrequency = 0x160; // float
	//constexpr auto MinNetUpdateFrequency = 0x164; // float
	//constexpr auto NetPriority = 0x168; // float
	//constexpr auto Instigator = 0x170; // APawn*
	//constexpr auto Children = 0x178; // TArray<AActor*>
	//constexpr auto RootComponent = 0x188; // USceneComponent*
	//constexpr auto Layers = 0x198; // TArray<FName>
	//constexpr auto ParentComponent = 0x1a8; // TWeakObjectPtr<UChildActorComponent>
	//constexpr auto Tags = 0x1b0; // TArray<FName>
	//constexpr auto OnTakeAnyDamage = 0x1c0; // FMulticastSparseDelegate
	//constexpr auto OnTakePointDamage = 0x1c1; // FMulticastSparseDelegate
	//constexpr auto OnTakeRadialDamage = 0x1c2; // FMulticastSparseDelegate
	//constexpr auto OnActorBeginOverlap = 0x1c3; // FMulticastSparseDelegate
	//constexpr auto OnActorEndOverlap = 0x1c4; // FMulticastSparseDelegate
	//constexpr auto OnBeginCursorOver = 0x1c5; // FMulticastSparseDelegate
	//constexpr auto OnEndCursorOver = 0x1c6; // FMulticastSparseDelegate
	//constexpr auto OnClicked = 0x1c7; // FMulticastSparseDelegate
	//constexpr auto OnReleased = 0x1c8; // FMulticastSparseDelegate
	//constexpr auto OnInputTouchBegin = 0x1c9; // FMulticastSparseDelegate
	//constexpr auto OnInputTouchEnd = 0x1ca; // FMulticastSparseDelegate
	//constexpr auto OnInputTouchEnter = 0x1cb; // FMulticastSparseDelegate
	//constexpr auto OnInputTouchLeave = 0x1cc; // FMulticastSparseDelegate
	//constexpr auto OnActorHit = 0x1cd; // FMulticastSparseDelegate
	//constexpr auto OnDestroyed = 0x1ce; // FMulticastSparseDelegate
	//constexpr auto OnEndPlay = 0x1cf; // FMulticastSparseDelegate
	//constexpr auto InstanceComponents = 0x250; // TArray<UActorComponent*>
	//constexpr auto BlueprintCreatedComponents = 0x260; // TArray<UActorComponent*>

	constexpr auto PrimaryActorTick = 0x28;
	constexpr auto bNetTemporary = 0x58;
	constexpr auto bNetStartup = 0x58;
	constexpr auto bOnlyRelevantToOwner = 0x58;
	constexpr auto bAlwaysRelevant = 0x58;
	constexpr auto bReplicateMovement = 0x58;
	constexpr auto bCallPreReplication = 0x58;
	constexpr auto bCallPreReplicationForReplay = 0x58;
	constexpr auto bHidden = 0x58;
	constexpr auto bTearOff = 0x59;
	constexpr auto bForceNetAddressable = 0x59;
	constexpr auto bExchangedRoles = 0x59;
	constexpr auto bNetLoadOnClient = 0x59;
	constexpr auto bNetUseOwnerRelevancy = 0x59;
	constexpr auto bRelevantForNetworkReplays = 0x59;
	constexpr auto bRelevantForLevelBounds = 0x59;
	constexpr auto bReplayRewindable = 0x59;
	constexpr auto bAllowTickBeforeBeginPlay = 0x5A;
	constexpr auto bAutoDestroyWhenFinished = 0x5A;
	constexpr auto bCanBeDamaged = 0x5A;
	constexpr auto bBlockInput = 0x5A;
	constexpr auto bCollideWhenPlacing = 0x5A;
	constexpr auto bFindCameraComponentWhenViewTarget = 0x5A;
	constexpr auto bGenerateOverlapEventsDuringLevelStreaming = 0x5A;
	constexpr auto bIgnoresOriginShifting = 0x5A;
	constexpr auto bEnableAutoLODGeneration = 0x5B;
	constexpr auto bIsEditorOnlyActor = 0x5B;
	constexpr auto bActorSeamlessTraveled = 0x5B;
	constexpr auto bReplicates = 0x5B;
	constexpr auto bCanBeInCluster = 0x5B;
	constexpr auto bAllowReceiveTickEventOnDedicatedServer = 0x5B;
	constexpr auto bReplicateUsingRegisteredSubObjectList = 0x5B;
	constexpr auto bActorEnableCollision = 0x5C;
	constexpr auto bActorIsBeingDestroyed = 0x5C;
	constexpr auto UpdateOverlapsMethodDuringLevelStreaming = 0x5E;
	constexpr auto DefaultUpdateOverlapsMethodDuringLevelStreaming = 0x5F;
	constexpr auto InitialLifeSpan = 0x60;
	constexpr auto CustomTimeDilation = 0x64;
	constexpr auto RemoteRole = 0x68;
	constexpr auto RayTracingGroupId = 0x6C;
	constexpr auto AttachmentReplication = 0x70;
	constexpr auto ReplicatedMovement = 0xD0;
	constexpr auto Owner = 0x138;
	constexpr auto NetDriverName = 0x140;
	constexpr auto Role = 0x144;
	constexpr auto NetDormancy = 0x145;
	constexpr auto SpawnCollisionHandlingMethod = 0x146;
	constexpr auto AutoReceiveInput = 0x147;
	constexpr auto InputPriority = 0x148;
	constexpr auto InputComponent = 0x150;
	constexpr auto NetCullDistanceSquared = 0x158;
	constexpr auto NetTag = 0x15C;
	constexpr auto NetUpdateFrequency = 0x160;
	constexpr auto MinNetUpdateFrequency = 0x164;
	constexpr auto NetPriority = 0x168;
	constexpr auto Instigator = 0x170;
	constexpr auto Children = 0x178;
	constexpr auto RootComponent = 0x188;
	constexpr auto Layers = 0x198;
	constexpr auto ParentComponent = 0x1A8;
	constexpr auto Tags = 0x1B0;
	constexpr auto OnTakeAnyDamage = 0x1C0;
	constexpr auto OnTakePointDamage = 0x1C1;
	constexpr auto OnTakeRadialDamage = 0x1C2;
	constexpr auto OnActorBeginOverlap = 0x1C3;
	constexpr auto OnActorEndOverlap = 0x1C4;
	constexpr auto OnBeginCursorOver = 0x1C5;
	constexpr auto OnEndCursorOver = 0x1C6;
	constexpr auto OnClicked = 0x1C7;
	constexpr auto OnReleased = 0x1C8;
	constexpr auto OnInputTouchBegin = 0x1C9;
	constexpr auto OnInputTouchEnd = 0x1CA;
	constexpr auto OnInputTouchEnter = 0x1CB;
	constexpr auto OnInputTouchLeave = 0x1CC;
	constexpr auto OnActorHit = 0x1CD;
	constexpr auto OnDestroyed = 0x1CE;
	constexpr auto OnEndPlay = 0x1CF;
	constexpr auto InstanceComponents = 0x250;
	constexpr auto BlueprintCreatedComponents = 0x260;
}


namespace ActorComponent {
	constexpr auto PrimaryComponentTick = 0x30;
	constexpr auto ComponentTags = 0x60;
	constexpr auto AssetUserData = 0x70;
	constexpr auto UCSSerializationIndex = 0x84;
	constexpr auto bNetAddressable = 0x88;
	constexpr auto bReplicateUsingRegisteredSubObjectList = 0x88;
	constexpr auto bReplicates = 0x88;
	constexpr auto bAutoActivate = 0x8A;
	constexpr auto bIsActive = 0x8A;
	constexpr auto bEditableWhenInherited = 0x8A;
	constexpr auto bCanEverAffectNavigation = 0x8A;
	constexpr auto bIsEditorOnly = 0x8A;
	constexpr auto CreationMethod = 0x8C;
	constexpr auto OnComponentActivated = 0x8D;
	constexpr auto OnComponentDeactivated = 0x8E;
}



namespace FortWeapon {
	constexpr auto OnWeaponRateOfFireChanged = 0x298;
	constexpr auto OnPressTrigger = 0x2C0;
	constexpr auto OnReleaseTrigger = 0x2D0;
	constexpr auto TimeToEquip = 0x300;
	constexpr auto bIsEquippingWeapon = 0x310;
	constexpr auto bIsReloadingWeapon = 0x311;
	constexpr auto bIsChargingWeapon = 0x312;
	constexpr auto bDisableEquipAnimation = 0x313;
	constexpr auto bIsAimingConsumable = 0x315;
	constexpr auto OnLocalAmmoChanged = 0x338;
	constexpr auto OnLocalReloadStarted = 0x348;
	constexpr auto OnLocalReloadCancelled = 0x358;
	constexpr auto OnLocalTargetingChanged = 0x368;
	constexpr auto OnSecondaryAbilityToggled = 0x378;
	constexpr auto OnWeaponFireAudioVisuals = 0x388;
	constexpr auto OnReticleColorChanged = 0x3B0;
	constexpr auto bUseAttributeCaching = 0x3D4;
	constexpr auto WeaponData = 0x3D8;
	constexpr auto CosmeticOverrideWeaponData = 0x3E0;
	constexpr auto bImpactFXAttachedToHitActor = 0x3E8;
	constexpr auto GameplayAbilityBehaviorDistanceData = 0x3F0;
	constexpr auto HitNotifyAudioBank = 0x400;
	constexpr auto bRemoveAbilitiesWhenRemovedFromInventory = 0x420;
	constexpr auto GrantedAbilityRemovalPolicy = 0x421;
	constexpr auto EquippedWeaponDestroyWrapperRepCounter = 0x468;
	constexpr auto PersistentFXStartTime = 0x538;
	constexpr auto MinimumTimeForPersistentFX = 0x53C;
	constexpr auto OverrideItemWrapSoftPtr = 0x540;
	constexpr auto WeaponReduceMeshWorkSetting = 0x578;
	constexpr auto bWeaponSupportsQuartzGunfire = 0x579;
	constexpr auto QuartzGunfireComp = 0x580;
	constexpr auto bShouldDrawNativeReticle = 0x588;
	constexpr auto ReticleImage = 0x590;
	constexpr auto AutoFireReticleImage = 0x598;
	constexpr auto ReticleDefaultColor = 0x5A0;
	constexpr auto ReticleEnemyColor = 0x5A4;
	constexpr auto ReticleBuildingColor = 0x5A8;
	constexpr auto ReticleNoTargetColor = 0x5AC;
	constexpr auto HitNotifyReticleImage = 0x5B0;
	constexpr auto HitNotifyLocationReticleImage = 0x5B8;
	constexpr auto CriticalHitNotifyLocationReticleImage = 0x5C0;
	constexpr auto ReticleCenterImage = 0x5C8;
	constexpr auto ReticleCenterPerfectAimImage = 0x5D0;
	constexpr auto ReticleInvalidTargetImage = 0x5D8;
	constexpr auto MuzzleBlockedReticleImage = 0x5E0;
	constexpr auto ReticleAltCenterImage = 0x5E8;
	constexpr auto ReticleOuterImage = 0x5F0;
	constexpr auto ReticleAltOuterImage = 0x5F8;
	constexpr auto ReticleDefaultPrimaryStrikeAngle = 0x600;
	constexpr auto ReticleDefaultSecondaryStrikeAngle = 0x604;
	constexpr auto bSupportsAutofireAtReticleTarget = 0x608;
	constexpr auto CameraBase3PClass = 0x610;
	constexpr auto CameraTargeting3PClass = 0x618;
	constexpr auto CameraBase1PClass = 0x620;
	constexpr auto CameraTargeting1PClass = 0x628;
	constexpr auto DestroyedSound = 0x630;
	constexpr auto OutOfAmmoSound = 0x638;
	constexpr auto ReloadSounds = 0x640;
	constexpr auto PrimaryFireSound1P = 0x658;
	constexpr auto PrimaryFireSound = 0x660;
	constexpr auto PrimaryFireStopSound1P = 0x678;
	constexpr auto PrimaryFireStopSound = 0x680;
	constexpr auto SecondaryFireSound = 0x698;
	constexpr auto SecondaryFireStopSound = 0x6B0;
	constexpr auto ChargeFireSound1P = 0x6C8;
	constexpr auto ChargeFireSound = 0x6E0;
	constexpr auto TargetingStartSound = 0x6F8;
	constexpr auto TargetingEndSound = 0x700;
	constexpr auto PrimaryFireSoundFadeOutTime = 0x708;
	constexpr auto ImpactPhysicalSurfaceSounds = 0x710;
	constexpr auto ImpactPhysicalSurfaceEffects = 0x7F8;
	constexpr auto ImpactNiagaraPhysicalSurfaceEffectAssets = 0x8D8;
	constexpr auto ImpactCameraShake = 0x8E8;
	constexpr auto PrimaryForceFeedbackEffect = 0x8F0;
	constexpr auto SecondaryForceFeedbackEffect = 0x8F8;
	constexpr auto PrimaryImpactForceFeedbackEffect = 0x900;
	constexpr auto SecondaryImpactForceFeedbackEffect = 0x908;
	constexpr auto ImpactNiagaraPhysicalSurfaceEffectInstances = 0x910;
	constexpr auto DataStoreManager = 0x920;
	constexpr auto FireAudioChannels = 0x928;
	constexpr auto ReloadAudioChannels = 0x948;
	constexpr auto TargetingAudioChannels = 0x960;
	constexpr auto SoundIndicatorComponent = 0x970;
	constexpr auto CurrentGunFireIndex = 0x978;
	constexpr auto WeaponMesh = 0x980;
	constexpr auto AllWeaponMeshes = 0x988;
	constexpr auto DefaultWeaponMaterials = 0x998;
	constexpr auto OriginalMaterialMap = 0x9A8;
	constexpr auto FireAudioChannelWantsToPlay = 0x9F8;
	constexpr auto WrapSectionMask = 0xA08;
	constexpr auto bUsingSecondaryFireAudio = 0xA0C;
	constexpr auto bHasCachedAdditionalMeshes = 0xA0D;
	constexpr auto CurrentReticleColor = 0xA10;
	constexpr auto CurrentDamageStartLocation = 0xA18;
	constexpr auto CurrentAdjustedAimDirection = 0xA30;
	constexpr auto FireFXSignificance = 0xA48;
	constexpr auto LastFireTime = 0xA60;
	constexpr auto LastFireTimeVerified = 0xA64;
	constexpr auto bIsPlayingFireFX = 0xA68;
	constexpr auto bFireFXTriggered = 0xA69;
	constexpr auto TimerIntervalAdjustment = 0xA6C;
	constexpr auto InputQueueTimePercent = 0xA70;
	constexpr auto bAllowTargeting = 0xA74;
	constexpr auto bIsTargeting = 0xA75;
	constexpr auto LastTargetingTransitionTime = 0xA78;
	constexpr auto TargetSourceOffset = 0xA80;
	constexpr auto TargetSourceOffsetWhileCrouched = 0xA98;
	constexpr auto TargetSourceOffsetWhileTargeting = 0xAB0;
	constexpr auto bTraceThroughPawns = 0xAC8;
	constexpr auto bTraceThroughWorld = 0xAC9;
	constexpr auto TraceThroughPawnsLimit = 0xACC;
	constexpr auto TraceThroughBuildingsLimit = 0xAD0;
	constexpr auto TraceThroughLandscapeLimit = 0xAD4;
	constexpr auto bUseProjectileTrace = 0xAD8;
	constexpr auto bUseVariableFocalDistanceTargeting = 0xAD9;
	constexpr auto bUseWeaponTraceForReticle = 0xADA;
	constexpr auto ProjectilePitchOffset = 0xADC;
	constexpr auto LastReloadTime = 0xAE0;
	constexpr auto LastSuccessfulReloadTime = 0xAE4;
	constexpr auto CurrentReloadDuration = 0xAE8;
	constexpr auto ItemEntryGuid = 0xAF0;
	constexpr auto TrackerGuid = 0xB00;
	constexpr auto WeaponLevel = 0xB10;
	constexpr auto AmmoCount = 0xB14;
	constexpr auto PhantomReserveAmmo = 0xB18;
	constexpr auto BurstFireCounter = 0xB24;
	constexpr auto ChargeTime = 0xB28;
	constexpr auto AccumulatedChargeTime = 0xB2C;
	constexpr auto LastChargeTime = 0xB30;
	constexpr auto StartChargeGameplayCue = 0xB34;
	constexpr auto MaxChargeGameplayCue = 0xB38;
	constexpr auto OutOfAmmoTextOverrideFailTag = 0xB3C;
	constexpr auto NoSpareAmmoToReloadTextOverrideFailTag = 0xB40;
	constexpr auto CurrentShotLogIndex = 0xB44;
	constexpr auto ShotLogFlags = 0xB48;
	constexpr auto bInitializedWeaponItem = 0xB58;
	constexpr auto bPendingDestroyDueToDurabilityOrStackCount = 0xB58;
	constexpr auto bCompletedAppliedAlterationsLoad = 0xB59;
	constexpr auto bCompletedWeaponLoad = 0xB59;
	constexpr auto bIsCosmeticLimited = 0xB59;
	constexpr auto bReplicatedAppliedAlterationsWithNoInstigator = 0xB59;
	constexpr auto bShouldFullyApplyVariantsOnEquip = 0xB59;
	constexpr auto bSecondaryFireAlwaysCancelSwimSprint = 0xB59;
	constexpr auto ChargeStatusPack = 0xB5C;
	constexpr auto AttachedTrajectoryIndicator = 0xB6C;
	constexpr auto ActiveAbility = 0xB78;
	constexpr auto PrimaryAbilitySpecHandle = 0xB80;
	constexpr auto SecondaryAbilitySpecHandle = 0xB84;
	constexpr auto ReloadAbilitySpecHandle = 0xB88;
	constexpr auto ImpactAbilitySpecHandle = 0xB8C;
	constexpr auto ReticleTraceOverrideSpecHandle = 0xB90;
	constexpr auto EquippedAbilityHandles = 0xB98;
	constexpr auto EquippedAbilitySetHandles = 0xBA8;
	constexpr auto AppliedAlterations = 0xBB8;
	constexpr auto WeaponModSlots = 0xBC8;
	constexpr auto EquippedWeaponModSlots = 0xBD8;
	constexpr auto PreviousWeaponVariants = 0xBE8;
	constexpr auto AppliedItemWrap = 0xC20;
	constexpr auto CachedFXManager = 0xC28;
	constexpr auto CachedSignificanceManager = 0xC30;
	constexpr auto MuzzleSocketName = 0xC38;
	constexpr auto MuzzleFalloffSocketName = 0xC3C;
	constexpr auto WeaponHandSocketNameOverride = 0xC40;
	constexpr auto LeftHandWeaponHandSocketNameOverride = 0xC44;
	constexpr auto WeaponHandSocketPartOverrides = 0xC48;
	constexpr auto bForceOverrideGenerateOverlapEvents = 0xC60;
	constexpr auto MaxWeaponSwitchNetworkWaitTime = 0xD4C;
	constexpr auto LastFireAbilityTime = 0xD50;
	constexpr auto EquipAnimation = 0xD88;
	constexpr auto ReloadAnimation = 0xD90;
	constexpr auto CustomReloadAnimationPerAmmoToFill = 0xD98;
	constexpr auto PrimaryAbilityAnimation = 0xDA8;
	constexpr auto SecondaryAbilityAnimation = 0xDB0;
	constexpr auto WeaponEquipMontage = 0xDB8;
	constexpr auto WeaponReloadMontage = 0xDC0;
	constexpr auto CustomWeaponReloadMontagePerAmmoToFill = 0xDC8;
	constexpr auto WeaponPrimaryAbilityMontage = 0xDD8;
	constexpr auto WeaponSecondaryAbilityMontage = 0xDE0;
	constexpr auto PoseOffsetAnimSequence = 0xDE8;
	constexpr auto PoseOffsetAnimSequenceFemaleOverride = 0xDF0;
	constexpr auto WeaponCoreAnimation = 0xDF8;
	constexpr auto WeaponPawnAnimSet = 0xE00;
	constexpr auto WeaponPawnAnimLayerOverlayClass = 0xE08;
	constexpr auto WeaponAdditiveAnimSet = 0xE10;
	constexpr auto WeaponPawnAnimsetOverride = 0xE18;
	constexpr auto UnableToPerformActionMontageOverride = 0xE50;
	constexpr auto ActiveFireMode = 0xE58;
	constexpr auto FireModeData_HipFire = 0xE80;
	constexpr auto FireModeData_AimDownSight = 0xEA8;
	constexpr auto FireModeData_Override = 0xED0;
	constexpr auto ItemWrapModifier = 0xF08;
	constexpr auto LockOnTargetCandidate = 0xF28;
	constexpr auto bIgnoreTryToFireSlotCooldownRestriction = 0xF31;
	constexpr auto bFireConsumableAnalyticEvent = 0xF33;
	constexpr auto OnWeaponHudKeyActionUpdated = 0xF38;
	constexpr auto HudKeyActionData = 0xF48;
}


namespace SkeletalMeshComponent {
	//constexpr auto AnimBlueprintGeneratedClass = 0x810; // ClassPtrProperty
	//constexpr auto AnimClass = 0x818; // UAnimInstance*
	//constexpr auto AnimScriptInstance = 0x820; // UAnimInstance*
	//constexpr auto PostProcessAnimInstance = 0x828; // UAnimInstance*
	//constexpr auto AnimationData = 0x830; // FSingleAnimationPlayData
	//constexpr auto RootBoneTranslation = 0x858; // FVector
	//constexpr auto LineCheckBoundsScale = 0x870; // FVector
	//constexpr auto LinkedInstances = 0x8b8; // TArray<UAnimInstance*>
	//constexpr auto CachedBoneSpaceTransforms = 0x8c8; // TArray<FTransform>
	//constexpr auto CachedComponentSpaceTransforms = 0x8d8; // TArray<FTransform>
	//constexpr auto GlobalAnimRateScale = 0x998; // float
	//constexpr auto KinematicBonesUpdateType = 0x99c; // EKinematicBonesUpdateToPhysics
	//constexpr auto PhysicsTransformUpdateMode = 0x99d; // EPhysicsTransformUpdateMode
	//constexpr auto AnimationMode = 0x99f; // EAnimationMode
	//constexpr auto bEnablePhysicsOnDedicatedServer = 0x9a1; // char : 1
	//constexpr auto bUpdateJointsFromAnimation = 0x9a1; // char : 1
	//constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x9a1; // char : 1
	//constexpr auto bBlendPhysics = 0x9a1; // char : 1
	//constexpr auto bHasValidBodies = 0x9a1; // char : 1
	//constexpr auto bDisablePostProcessBlueprint = 0x9a1; // char : 1
	//constexpr auto bAllowClothActors = 0x9a2; // char : 1
	//constexpr auto bDisableClothSimulation = 0x9a2; // char : 1
	//constexpr auto bDisableRigidBodyAnimNode = 0x9a8; // char : 1
	//constexpr auto bAllowAnimCurveEvaluation = 0x9a8; // char : 1
	//constexpr auto bDisableAnimCurves = 0x9a8; // char : 1
	//constexpr auto bCollideWithEnvironment = 0x9a8; // char : 1
	//constexpr auto bCollideWithAttachedChildren = 0x9a8; // char : 1
	//constexpr auto bEnablePerPolyCollision = 0x9a9; // char : 1
	//constexpr auto bUseRefPoseOnInitAnim = 0x9a9; // char : 1
	//constexpr auto bPauseAnims = 0x9a9; // char : 1
	//constexpr auto bNoSkeletonUpdate = 0x9a9; // char : 1
	//constexpr auto bDeferKinematicBoneUpdate = 0x9a9; // char : 1
	//constexpr auto bLocalSpaceSimulation = 0x9a9; // char : 1
	//constexpr auto bResetAfterTeleport = 0x9a9; // char : 1
	//constexpr auto bForceRefpose = 0x9aa; // char : 1
	//constexpr auto bOnlyAllowAutonomousTickPose = 0x9aa; // char : 1
	//constexpr auto bIsAutonomousTickPose = 0x9aa; // char : 1
	//constexpr auto bOldForceRefPose = 0x9aa; // char : 1
	//constexpr auto bShowPrePhysBones = 0x9aa; // char : 1
	//constexpr auto bRequiredBonesUpToDate = 0x9aa; // char : 1
	//constexpr auto bAnimTreeInitialised = 0x9aa; // char : 1
	//constexpr auto bIncludeComponentLocationIntoBounds = 0x9aa; // char : 1
	//constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x9ab; // char : 1
	//constexpr auto bNeedsQueuedAnimEventsDispatched = 0x9ab; // char : 1
	//constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x9ab; // char : 1
	//constexpr auto bPropagateCurvesToSlaves = 0x9ab; // char : 1
	//constexpr auto bEnableLineCheckWithBounds = 0x9ab; // char : 1
	//constexpr auto CachedAnimCurveUidVersion = 0x9ac; // uint16_t
	//constexpr auto ClothBlendWeight = 0x9b0; // float
	//constexpr auto bWaitForParallelClothTask = 0x9b4; // bool
	//constexpr auto DisallowedAnimCurves = 0x9b8; // TArray<FName>
	//constexpr auto BodySetup = 0x9c8; // UBodySetup*
	//constexpr auto ClothMaxDistanceScale = 0x9d4; // float
	//constexpr auto OnConstraintBroken = 0x9d8; // FMulticastInlineDelegate
	//constexpr auto OnPlasticDeformation = 0x9e8; // FMulticastInlineDelegate
	//constexpr auto ClothingSimulationFactory = 0x9f8; // UClothingSimulationFactory*
	//constexpr auto TeleportDistanceThreshold = 0xaf8; // float
	//constexpr auto TeleportRotationThreshold = 0xafc; // float
	//constexpr auto LastPoseTickFrame = 0xb08; // uint32_t
	//constexpr auto ClothingInteractor = 0xba0; // UClothingSimulationInteractor*
	//constexpr auto OnAnimInitialized = 0xc70; // FMulticastInlineDelegate

	constexpr auto AnimBlueprintGeneratedClass = 0x810;
	constexpr auto AnimClass = 0x818;
	constexpr auto AnimScriptInstance = 0x820;
	constexpr auto PostProcessAnimInstance = 0x828;
	constexpr auto AnimationData = 0x830;
	constexpr auto RootBoneTranslation = 0x858;
	constexpr auto LineCheckBoundsScale = 0x870;
	constexpr auto LinkedInstances = 0x8B8;
	constexpr auto CachedBoneSpaceTransforms = 0x8C8;
	constexpr auto CachedComponentSpaceTransforms = 0x8D8;
	constexpr auto GlobalAnimRateScale = 0x998;
	constexpr auto KinematicBonesUpdateType = 0x99C;
	constexpr auto PhysicsTransformUpdateMode = 0x99D;
	constexpr auto AnimationMode = 0x99F;
	constexpr auto bDisablePostProcessBlueprint = 0x9A1;
	constexpr auto bUpdateOverlapsOnAnimationFinalize = 0x9A1;
	constexpr auto bHasValidBodies = 0x9A1;
	constexpr auto bBlendPhysics = 0x9A1;
	constexpr auto bEnablePhysicsOnDedicatedServer = 0x9A1;
	constexpr auto bUpdateJointsFromAnimation = 0x9A1;
	constexpr auto bAllowClothActors = 0x9A2;
	constexpr auto bDisableClothSimulation = 0x9A2;
	constexpr auto bDisableRigidBodyAnimNode = 0x9A8;
	constexpr auto bAllowAnimCurveEvaluation = 0x9A8;
	constexpr auto bDisableAnimCurves = 0x9A8;
	constexpr auto bCollideWithEnvironment = 0x9A8;
	constexpr auto bCollideWithAttachedChildren = 0x9A8;
	constexpr auto bLocalSpaceSimulation = 0x9A9;
	constexpr auto bResetAfterTeleport = 0x9A9;
	constexpr auto bDeferKinematicBoneUpdate = 0x9A9;
	constexpr auto bNoSkeletonUpdate = 0x9A9;
	constexpr auto bPauseAnims = 0x9A9;
	constexpr auto bUseRefPoseOnInitAnim = 0x9A9;
	constexpr auto bEnablePerPolyCollision = 0x9A9;
	constexpr auto bForceRefpose = 0x9AA;
	constexpr auto bOnlyAllowAutonomousTickPose = 0x9AA;
	constexpr auto bIsAutonomousTickPose = 0x9AA;
	constexpr auto bOldForceRefPose = 0x9AA;
	constexpr auto bShowPrePhysBones = 0x9AA;
	constexpr auto bRequiredBonesUpToDate = 0x9AA;
	constexpr auto bAnimTreeInitialised = 0x9AA;
	constexpr auto bIncludeComponentLocationIntoBounds = 0x9AA;
	constexpr auto bEnableLineCheckWithBounds = 0x9AB;
	constexpr auto bPropagateCurvesToSlaves = 0x9AB;
	constexpr auto bSkipKinematicUpdateWhenInterpolating = 0x9AB;
	constexpr auto bSkipBoundsUpdateWhenInterpolating = 0x9AB;
	constexpr auto bNeedsQueuedAnimEventsDispatched = 0x9AB;
	constexpr auto CachedAnimCurveUidVersion = 0x9AC;
	constexpr auto ClothBlendWeight = 0x9B0;
	constexpr auto bWaitForParallelClothTask = 0x9B4;
	constexpr auto DisallowedAnimCurves = 0x9B8;
	constexpr auto BodySetup = 0x9C8;
	constexpr auto ClothMaxDistanceScale = 0x9D4;
	constexpr auto OnConstraintBroken = 0x9D8;
	constexpr auto OnPlasticDeformation = 0x9E8;
	constexpr auto ClothingSimulationFactory = 0x9F8;
	constexpr auto TeleportDistanceThreshold = 0xAF8;
	constexpr auto TeleportRotationThreshold = 0xAFC;
	constexpr auto LastPoseTickFrame = 0xB08;
	constexpr auto ClothingInteractor = 0xBA0;
	constexpr auto OnAnimInitialized = 0xC70;
}

namespace   SceneComponent {
	//constexpr auto PhysicsVolume = 0xa8; // TWeakObjectPtr<APhysicsVolume>
	//constexpr auto AttachParent = 0xb0; // USceneComponent*
	//constexpr auto AttachSocketName = 0xb8; // FName
	//constexpr auto AttachChildren = 0xc0; // TArray<USceneComponent*>
	//constexpr auto ClientAttachedChildren = 0xd0; // TArray<USceneComponent*>
	//constexpr auto RelativeLocation = 0x128; // FVector
	//constexpr auto RelativeRotation = 0x140; // FRotator
	//constexpr auto RelativeScale3D = 0x158; // FVector
	//constexpr auto ComponentVelocity = 0x170; // FVector
	//constexpr auto bShouldSnapLocationWhenAttached = 0x188; // char : 1
	//constexpr auto bShouldBeAttached = 0x188; // char : 1
	//constexpr auto bVisible = 0x188; // char : 1
	//constexpr auto bAbsoluteScale = 0x188; // char : 1
	//constexpr auto bAbsoluteRotation = 0x188; // char : 1
	//constexpr auto bAbsoluteLocation = 0x188; // char : 1
	//constexpr auto bComponentToWorldUpdated = 0x188; // char : 1
	//constexpr auto bShouldSnapRotationWhenAttached = 0x189; // char : 1
	//constexpr auto bShouldUpdatePhysicsVolume = 0x189; // char : 1
	//constexpr auto bHiddenInGame = 0x189; // char : 1
	//constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x189; // char : 1
	//constexpr auto bUseAttachParentBound = 0x189; // char : 1
	//constexpr auto bComputeFastLocalBounds = 0x189; // char : 1
	//constexpr auto bComputeBoundsOnceForGame = 0x189; // char : 1
	//constexpr auto bComputedBoundsOnceForGame = 0x189; // char : 1
	//constexpr auto Mobility = 0x18b; // EComponentMobility
	//constexpr auto DetailMode = 0x18c; // EDetailMode
	//constexpr auto PhysicsVolumeChangedDelegate = 0x18d; // FMulticastSparseDelegate

	constexpr auto PhysicsVolume = 0xA8;
	constexpr auto AttachParent = 0xB0;
	constexpr auto AttachSocketName = 0xB8;
	constexpr auto AttachChildren = 0xC0;
	constexpr auto ClientAttachedChildren = 0xD0;
	constexpr auto RelativeLocation = 0x128;
	constexpr auto RelativeRotation = 0x140;
	constexpr auto RelativeScale3D = 0x158;
	constexpr auto ComponentVelocity = 0x170;
	constexpr auto bComponentToWorldUpdated = 0x188;
	constexpr auto bAbsoluteLocation = 0x188;
	constexpr auto bAbsoluteRotation = 0x188;
	constexpr auto bAbsoluteScale = 0x188;
	constexpr auto bVisible = 0x188;
	constexpr auto bShouldBeAttached = 0x188;
	constexpr auto bShouldSnapLocationWhenAttached = 0x188;
	constexpr auto bShouldSnapRotationWhenAttached = 0x189;
	constexpr auto bShouldUpdatePhysicsVolume = 0x189;
	constexpr auto bHiddenInGame = 0x189;
	constexpr auto bBoundsChangeTriggersStreamingDataRebuild = 0x189;
	constexpr auto bUseAttachParentBound = 0x189;
	constexpr auto bComputeFastLocalBounds = 0x189;
	constexpr auto bComputeBoundsOnceForGame = 0x189;
	constexpr auto bComputedBoundsOnceForGame = 0x189;
	constexpr auto Mobility = 0x18B;
	constexpr auto DetailMode = 0x18C;
	constexpr auto PhysicsVolumeChangedDelegate = 0x18D;
}


namespace  GameInstance
{
	//constexpr auto LocalPlayers = 0x38; // TArray<ULocalPlayer*>
	//constexpr auto OnlineSession = 0x48; // UOnlineSession*
	//constexpr auto ReferencedObjects = 0x50; // TArray<UObject*>
	//constexpr auto OnPawnControllerChangedDelegates = 0x78; // FMulticastInlineDelegate

	constexpr auto LocalPlayers = 0x38;
	constexpr auto OnlineSession = 0x48;
	constexpr auto ReferencedObjects = 0x50;
	constexpr auto OnPawnControllerChangedDelegates = 0x78;
}



namespace  Pawn {
	//constexpr auto bUseControllerRotationPitch = 0x288; // char : 1
	//constexpr auto bUseControllerRotationYaw = 0x288; // char : 1
	//constexpr auto bUseControllerRotationRoll = 0x288; // char : 1
	//constexpr auto bCanAffectNavigationGeneration = 0x288; // char : 1
	//constexpr auto bIsLocalViewTarget = 0x288; // char : 1
	//constexpr auto BaseEyeHeight = 0x28c; // float
	//constexpr auto AutoPossessPlayer = 0x290; // EAutoReceiveInput
	//constexpr auto AutoPossessAI = 0x291; // EAutoPossessAI
	//constexpr auto RemoteViewPitch = 0x292; // char
	//constexpr auto AIControllerClass = 0x298; // AController*
	//constexpr auto PlayerState = 0x2a0; // APlayerState*
	//constexpr auto LastHitBy = 0x2b0; // AController*
	//constexpr auto Controller = 0x2b8; // AController*
	//constexpr auto PreviousController = 0x2c0; // AController*
	//constexpr auto ReceiveControllerChangedDelegate = 0x2cc; // FMulticastSparseDelegate
	//constexpr auto ReceiveRestartedDelegate = 0x2cd; // FMulticastSparseDelegate
	//constexpr auto ControlInputVector = 0x2d0; // FVector
	//constexpr auto LastControlInputVector = 0x2e8; // FVector

	constexpr auto bUseControllerRotationPitch = 0x278;
	constexpr auto bUseControllerRotationYaw = 0x278;
	constexpr auto bUseControllerRotationRoll = 0x278;
	constexpr auto bCanAffectNavigationGeneration = 0x278;
	constexpr auto bIsLocalViewTarget = 0x278;
	constexpr auto BaseEyeHeight = 0x27C;
	constexpr auto AutoPossessPlayer = 0x280;
	constexpr auto AutoPossessAI = 0x281;
	constexpr auto RemoteViewPitch = 0x282;
	constexpr auto AIControllerClass = 0x288;
	constexpr auto PlayerState = 0x290;
	constexpr auto LastHitBy = 0x2A0;
	constexpr auto Controller = 0x2A8;
	constexpr auto PreviousController = 0x2B0;
	constexpr auto ReceiveControllerChangedDelegate = 0x2BC;
	constexpr auto ReceiveRestartedDelegate = 0x2BD;
	constexpr auto ControlInputVector = 0x2C0;
	constexpr auto LastControlInputVector = 0x2D8;
}

namespace  DefaultPawn {
	//constexpr auto BaseTurnRate = 0x300; // float
	//constexpr auto BaseLookUpRate = 0x304; // float
	//constexpr auto MovementComponent = 0x308; // UPawnMovementComponent*
	//constexpr auto CollisionComponent = 0x310; // USphereComponent*
	//constexpr auto MeshComponent = 0x318; // UStaticMeshComponent*
	//constexpr auto bAddDefaultMovementBindings = 0x320; // char : 1

	constexpr auto BaseTurnRate = 0x2F0;
	constexpr auto BaseLookUpRate = 0x2F4;
	constexpr auto MovementComponent = 0x2F8;
	constexpr auto CollisionComponent = 0x300;
	constexpr auto MeshComponent = 0x308;
	constexpr auto bAddDefaultMovementBindings = 0x310;
}
namespace  SkinnedMeshComponent {
	//constexpr auto SkeletalMesh = 0x570; // USkeletalMesh*
	//constexpr auto MasterPoseComponent = 0x578; // TWeakObjectPtr<USkinnedMeshComponent>
	//constexpr auto SkinCacheUsage = 0x580; // TArray<ESkinCacheUsage>
	//constexpr auto PhysicsAssetOverride = 0x698; // UPhysicsAsset*
	//constexpr auto ForcedLodModel = 0x6a0; // int32_t
	//constexpr auto MinLodModel = 0x6a4; // int32_t
	//constexpr auto StreamingDistanceMultiplier = 0x6b0; // float
	//constexpr auto LODInfo = 0x6c0; // TArray<FSkelMeshComponentLODInfo>
	//constexpr auto VisibilityBasedAnimTickOption = 0x6f4; // EVisibilityBasedAnimTickOption
	//constexpr auto bOverrideMinLOD = 0x6f6; // char : 1
	//constexpr auto bUseBoundsFromMasterPoseComponent = 0x6f6; // char : 1
	//constexpr auto bForceWireframe = 0x6f6; // char : 1
	//constexpr auto bDisplayBones = 0x6f6; // char : 1
	//constexpr auto bDisableMorphTarget = 0x6f6; // char : 1
	//constexpr auto bCanHighlightSelectedSections = 0x6f7; // char : 1
	//constexpr auto bCastCapsuleDirectShadow = 0x6f7; // char : 1
	//constexpr auto bRecentlyRendered = 0x6f7; // char : 1
	//constexpr auto bComponentUseFixedSkelBounds = 0x6f7; // char : 1
	//constexpr auto bSyncAttachParentLOD = 0x6f7; // char : 1
	//constexpr auto bConsiderAllBodiesForBounds = 0x6f7; // char : 1
	//constexpr auto bPerBoneMotionBlur = 0x6f7; // char : 1
	//constexpr auto bHideSkin = 0x6f7; // char : 1
	//constexpr auto bCastCapsuleIndirectShadow = 0x6f8; // char : 1
	//constexpr auto bCPUSkinning = 0x6f8; // char : 1
	//constexpr auto bEnableUpdateRateOptimizations = 0x6f8; // char : 1
	//constexpr auto bDisplayDebugUpdateRateOptimizations = 0x6f8; // char : 1
	//constexpr auto bRenderStatic = 0x6f8; // char : 1
	//constexpr auto bIgnoreMasterPoseComponentLOD = 0x6f8; // char : 1
	//constexpr auto bCachedLocalBoundsUpToDate = 0x6f9; // char : 1
	//constexpr auto bForceMeshObjectUpdate = 0x6f9; // char : 1
	//constexpr auto CapsuleIndirectShadowMinVisibility = 0x6fc; // float
	//constexpr auto CachedWorldSpaceBounds = 0x738; // FBoxSphereBounds
	//constexpr auto CachedWorldToLocalTransform = 0x770; // FMatrix

	constexpr auto SkeletalMesh = 0x570;
	constexpr auto MasterPoseComponent = 0x578;
	constexpr auto SkinCacheUsage = 0x580;
	constexpr auto PhysicsAssetOverride = 0x698;
	constexpr auto ForcedLodModel = 0x6A0;
	constexpr auto MinLodModel = 0x6A4;
	constexpr auto StreamingDistanceMultiplier = 0x6B0;
	constexpr auto LODInfo = 0x6C0;
	constexpr auto VisibilityBasedAnimTickOption = 0x6F4;
	constexpr auto bOverrideMinLOD = 0x6F6;
	constexpr auto bUseBoundsFromMasterPoseComponent = 0x6F6;
	constexpr auto bForceWireframe = 0x6F6;
	constexpr auto bDisplayBones = 0x6F6;
	constexpr auto bDisableMorphTarget = 0x6F6;
	constexpr auto bHideSkin = 0x6F7;
	constexpr auto bPerBoneMotionBlur = 0x6F7;
	constexpr auto bComponentUseFixedSkelBounds = 0x6F7;
	constexpr auto bConsiderAllBodiesForBounds = 0x6F7;
	constexpr auto bSyncAttachParentLOD = 0x6F7;
	constexpr auto bCanHighlightSelectedSections = 0x6F7;
	constexpr auto bRecentlyRendered = 0x6F7;
	constexpr auto bCastCapsuleDirectShadow = 0x6F7;
	constexpr auto bCastCapsuleIndirectShadow = 0x6F8;
	constexpr auto bCPUSkinning = 0x6F8;
	constexpr auto bEnableUpdateRateOptimizations = 0x6F8;
	constexpr auto bDisplayDebugUpdateRateOptimizations = 0x6F8;
	constexpr auto bRenderStatic = 0x6F8;
	constexpr auto bIgnoreMasterPoseComponentLOD = 0x6F8;
	constexpr auto bCachedLocalBoundsUpToDate = 0x6F9;
	constexpr auto bForceMeshObjectUpdate = 0x6F9;
	constexpr auto CapsuleIndirectShadowMinVisibility = 0x6FC;
	constexpr auto CachedWorldSpaceBounds = 0x738;
	constexpr auto CachedWorldToLocalTransform = 0x770;
}


namespace  AnimInstance {
	//constexpr auto CurrentSkeleton = 0x28; // USkeleton*
	//		constexpr auto RootMotionMode = 0x30; // ERootMotionMode
	//		constexpr auto bUseMultiThreadedAnimationUpdate = 0x31; // char : 1
	//		constexpr auto bUsingCopyPoseFromMesh = 0x31; // char : 1
	//		constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31; // char : 1
	//		constexpr auto bPropagateNotifiesToLinkedInstances = 0x31; // char : 1
	//		constexpr auto bUseMainInstanceMontageEvaluationData = 0x31; // char : 1
	//		constexpr auto bQueueMontageEvents = 0x31; // char : 1
	//		constexpr auto OnMontageBlendingOut = 0x38; // FMulticastInlineDelegate
	//		constexpr auto OnMontageStarted = 0x48; // FMulticastInlineDelegate
	//		constexpr auto OnMontageEnded = 0x58; // FMulticastInlineDelegate
	//		constexpr auto OnAllMontageInstancesEnded = 0x68; // FMulticastInlineDelegate
	//		constexpr auto NotifyQueue = 0x150; // FAnimNotifyQueue
	//		constexpr auto ActiveAnimNotifyState = 0x1c0; // TArray<FAnimNotifyEvent>
	//		constexpr auto ActiveAnimNotifyEventReference = 0x1d0; // TArray<FAnimNotifyEventReference>

	constexpr auto CurrentSkeleton = 0x28;
	constexpr auto RootMotionMode = 0x30;
	constexpr auto bUseMultiThreadedAnimationUpdate = 0x31;
	constexpr auto bUsingCopyPoseFromMesh = 0x31;
	constexpr auto bReceiveNotifiesFromLinkedInstances = 0x31;
	constexpr auto bPropagateNotifiesToLinkedInstances = 0x31;
	constexpr auto bUseMainInstanceMontageEvaluationData = 0x31;
	constexpr auto bQueueMontageEvents = 0x31;
	constexpr auto OnMontageBlendingOut = 0x38;
	constexpr auto OnMontageStarted = 0x48;
	constexpr auto OnMontageEnded = 0x58;
	constexpr auto OnAllMontageInstancesEnded = 0x68;
	constexpr auto NotifyQueue = 0x150;
	constexpr auto ActiveAnimNotifyState = 0x1C0;
	constexpr auto ActiveAnimNotifyEventReference = 0x1D0;
}

namespace  APlayerController {
	//constexpr auto Player = 0x318; // UPlayer*
	//constexpr auto AcknowledgedPawn = 0x320; // APawn*
	//constexpr auto ControllingDirTrackInst = 0x328; // UInterpTrackInstDirector*
	//constexpr auto MyHUD = 0x330; // AHUD*
	//constexpr auto PlayerCameraManager = 0x338; // APlayerCameraManager*
	//constexpr auto PlayerCameraManagerClass = 0x340; // APlayerCameraManager*
	//constexpr auto bAutoManageActiveCameraTarget = 0x348; // bool
	//constexpr auto TargetViewRotation = 0x350; // FRotator
	//constexpr auto SmoothTargetViewRotationSpeed = 0x380; // float
	//constexpr auto HiddenActors = 0x388; // TArray<AActor*>
	//constexpr auto HiddenPrimitiveComponents = 0x398; // TArray<TWeakObjectPtr<UPrimitiveComponent>>
	//constexpr auto LastSpectatorStateSynchTime = 0x3ac; // float
	//constexpr auto LastSpectatorSyncLocation = 0x3b0; // FVector
	//constexpr auto LastSpectatorSyncRotation = 0x3c8; // FRotator
	//constexpr auto ClientCap = 0x3e0; // int32_t
	//constexpr auto CheatManager = 0x3e8; // UCheatManager*
	//constexpr auto CheatClass = 0x3f0; // UCheatManager*
	//constexpr auto PlayerInput = 0x3f8; // UPlayerInput*
	//constexpr auto ActiveForceFeedbackEffects = 0x400; // TArray<FActiveForceFeedbackEffect>
	//constexpr auto bPlayerIsWaiting = 0x490; // char : 1
	//constexpr auto NetPlayerIndex = 0x494; // char
	//constexpr auto PendingSwapConnection = 0x4f0; // UNetConnection*
	//constexpr auto NetConnection = 0x4f8; // UNetConnection*
	//constexpr auto InputYawScale = 0x518; // float
	//constexpr auto InputPitchScale = 0x51c; // float
	//constexpr auto InputRollScale = 0x520; // float
	//constexpr auto bShowMouseCursor = 0x524; // char : 1
	//constexpr auto bEnableClickEvents = 0x524; // char : 1
	//constexpr auto bEnableTouchEvents = 0x524; // char : 1
	//constexpr auto bEnableMouseOverEvents = 0x524; // char : 1
	//constexpr auto bEnableTouchOverEvents = 0x524; // char : 1
	//constexpr auto bForceFeedbackEnabled = 0x524; // char : 1
	//constexpr auto bEnableStreamingSource = 0x524; // char : 1
	//constexpr auto bStreamingSourceShouldActivate = 0x524; // char : 1
	//constexpr auto ForceFeedbackScale = 0x528; // float
	//constexpr auto ClickEventKeys = 0x530; // TArray<FKey>
	//constexpr auto DefaultMouseCursor = 0x540; // EMouseCursor
	//constexpr auto CurrentMouseCursor = 0x541; // EMouseCursor
	//constexpr auto DefaultClickTraceChannel = 0x542; // ECollisionChannel
	//constexpr auto CurrentClickTraceChannel = 0x543; // ECollisionChannel
	//constexpr auto HitResultTraceDistance = 0x544; // float
	//constexpr auto SeamlessTravelCount = 0x548; // uint16_t
	//constexpr auto LastCompletedSeamlessTravelCount = 0x54a; // uint16_t
	//constexpr auto InactiveStateInputComponent = 0x5c0; // UInputComponent*
	//constexpr auto bShouldPerformFullTickWhenPaused = 0x5c8; // char : 1
	//constexpr auto CurrentTouchInterface = 0x5e0; // UTouchInterface*
	//constexpr auto SpectatorPawn = 0x660; // ASpectatorPawn*
	//constexpr auto bIsLocalPlayerController = 0x66c; // bool
	//constexpr auto SpawnLocation = 0x670; // FVector

	constexpr auto Player = 0x308;
	constexpr auto AcknowledgedPawn = 0x310;
	constexpr auto ControllingDirTrackInst = 0x318;
	constexpr auto MyHUD = 0x320;
	constexpr auto PlayerCameraManager = 0x328;
	constexpr auto PlayerCameraManagerClass = 0x330;
	constexpr auto bAutoManageActiveCameraTarget = 0x338;
	constexpr auto TargetViewRotation = 0x340;
	constexpr auto SmoothTargetViewRotationSpeed = 0x370;
	constexpr auto HiddenActors = 0x378;
	constexpr auto HiddenPrimitiveComponents = 0x388;
	constexpr auto LastSpectatorStateSynchTime = 0x39C;
	constexpr auto LastSpectatorSyncLocation = 0x3A0;
	constexpr auto LastSpectatorSyncRotation = 0x3B8;
	constexpr auto ClientCap = 0x3D0;
	constexpr auto CheatManager = 0x3D8;
	constexpr auto CheatClass = 0x3E0;
	constexpr auto PlayerInput = 0x3E8;
	constexpr auto ActiveForceFeedbackEffects = 0x3F0;
	constexpr auto bPlayerIsWaiting = 0x480;
	constexpr auto NetPlayerIndex = 0x484;
	constexpr auto PendingSwapConnection = 0x4E0;
	constexpr auto NetConnection = 0x4E8;
	constexpr auto InputYawScale = 0x508;
	constexpr auto InputPitchScale = 0x50C;
	constexpr auto InputRollScale = 0x510;
	constexpr auto bShowMouseCursor = 0x514;
	constexpr auto bEnableClickEvents = 0x514;
	constexpr auto bEnableTouchEvents = 0x514;
	constexpr auto bEnableMouseOverEvents = 0x514;
	constexpr auto bEnableTouchOverEvents = 0x514;
	constexpr auto bForceFeedbackEnabled = 0x514;
	constexpr auto bEnableStreamingSource = 0x514;
	constexpr auto bStreamingSourceShouldActivate = 0x514;
	constexpr auto ForceFeedbackScale = 0x518;
	constexpr auto ClickEventKeys = 0x520;
	constexpr auto DefaultMouseCursor = 0x530;
	constexpr auto CurrentMouseCursor = 0x531;
	constexpr auto DefaultClickTraceChannel = 0x532;
	constexpr auto CurrentClickTraceChannel = 0x533;
	constexpr auto HitResultTraceDistance = 0x534;
	constexpr auto SeamlessTravelCount = 0x538;
	constexpr auto LastCompletedSeamlessTravelCount = 0x53A;
	constexpr auto InactiveStateInputComponent = 0x5B0;
	constexpr auto bShouldPerformFullTickWhenPaused = 0x5B8;
	constexpr auto CurrentTouchInterface = 0x5D0;
	constexpr auto SpectatorPawn = 0x650;
	constexpr auto bIsLocalPlayerController = 0x65C;
	constexpr auto SpawnLocation = 0x660;
}
namespace FortPlayerController {
	//constexpr auto OnPlayerPawnPossessed = 0x828; // FMulticastInlineDelegate
	//constexpr auto OnPickupCreated = 0x838; // FMulticastInlineDelegate
	//constexpr auto OnViewTargetChanged = 0x878; // FMulticastInlineDelegate
	//constexpr auto OnInputFiltered = 0x888; // FMulticastInlineDelegate
	//constexpr auto bAllowPcbBenefits = 0x8b0; // bool
	//constexpr auto OnFortPawnChangedEvent = 0x8b8; // FMulticastInlineDelegate
	//constexpr auto OnControllerComponentAttachedEvent = 0x8c8; // FMulticastInlineDelegate
	//constexpr auto bInPossession = 0x971; // bool
	//constexpr auto AircraftInputComponent = 0x9c8; // UInputComponent*
	//constexpr auto MiniMapInputComponent = 0x9d0; // UFortMiniMapInputComponent*
	//constexpr auto SprintOverrideComponent = 0x9d8; // UActorComponent*
	//constexpr auto SkydiveMusicAudioComp = 0x9e0; // UAudioComponent*
	//constexpr auto bAssignedStartSpawn = 0x9e8; // char : 1
	//constexpr auto bReadyToStartMatch = 0x9e8; // char : 1
	//constexpr auto bClientPawnIsLoaded = 0x9e8; // char : 1
	//constexpr auto bHasInitiallySpawned = 0x9e8; // char : 1
	//constexpr auto bIsBeingKicked = 0x9e8; // char : 1
	//constexpr auto bIsDisconnecting = 0x9e8; // char : 1
	//constexpr auto bFailedToRespawn = 0x9e8; // char : 1
	//constexpr auto SpawnLoc = 0x9f0; // FVector
	//constexpr auto NumPreviousSpawns = 0xa08; // int32_t
	//constexpr auto bCanSpectateBot = 0xa0c; // bool
	//constexpr auto OnBlueprintReadyCheckCompleted = 0xa10; // FMulticastInlineDelegate
	//constexpr auto OnDelayForPreServerTransitionAnimationEvent = 0xa30; // FMulticastInlineDelegate
	//constexpr auto SimpleLoadingScreenSoundMix = 0xa58; // USoundMix*
	//constexpr auto RegisteredPartnerId = 0xa70; // FString
	//constexpr auto RegisteredPartnerTag = 0xa80; // FGameplayTag
	//constexpr auto SprintOverrideAbilityGameplayTag = 0xa84; // FGameplayTag
	//constexpr auto ManagedAIs = 0xa88; // TArray<AFortAIPawn*>
	//constexpr auto MyFortPawn = 0xa98; // AFortPlayerPawn*
	//constexpr auto MyFortPawnBeforeTakeoverOfScriptedPawn = 0xaa0; // AFortPlayerPawn*
	//constexpr auto ScriptedPawnControllerBeforeTakeover = 0xaa8; // AController*
	//constexpr auto bHasClientFinishedLoading = 0xab0; // bool
	//constexpr auto bHasServerFinishedLoading = 0xab1; // bool
	//constexpr auto TimeStartedWaiting = 0xab4; // float
	//constexpr auto TimeFinishedNavigationBuild = 0xab8; // float
	//constexpr auto MaterialParameterCollection = 0xac0; // UMaterialParameterCollection*
	//constexpr auto bLoadingScreenDropped = 0xad1; // bool
	//constexpr auto PendingSpectatorLocation = 0xad8; // FVector
	//constexpr auto ActorUnderReticle = 0xaf0; // TWeakObjectPtr<AActor>
	//constexpr auto AutoFireReticleTarget = 0xaf8; // TWeakObjectPtr<AActor>
	//constexpr auto AutofireTimerHandle = 0xb00; // FTimerHandle
	//constexpr auto WeakspotUnderReticle = 0xb10; // TWeakObjectPtr<ABuildingWeakSpot>
	//constexpr auto ActiveWeakSpots = 0xb18; // TArray<FBuildingWeakSpotData>
	//constexpr auto IdleKickLastTimeActive = 0xb28; // float
	//constexpr auto LastTimeActive = 0xb2c; // float
	//constexpr auto bRevertPlayerListenerChange = 0xb50; // bool
	//constexpr auto VehicleInputComponent = 0xb70; // UInputComponent*
	//constexpr auto bHoldingPrimaryFireFromTouch = 0xb78; // bool
	//constexpr auto bSupportNextPieceAssist = 0xb79; // bool
	//constexpr auto bAutoBuildForTrapPlacement = 0xb7a; // bool
	//constexpr auto bAutoBuildForFloorTrapPlacement = 0xb7b; // bool
	//constexpr auto bAutoBuildForWallTrapPlacement = 0xb7c; // bool
	//constexpr auto bAutoBuildForCeilingTrapPlacement = 0xb7d; // bool
	//constexpr auto bNoControllerLighting = 0xb7e; // bool
	//constexpr auto ReturnToMainMenuTimeoutDelay = 0xb80; // float
	//constexpr auto OnQuestObjectiveStateChanged = 0xb88; // FMulticastInlineDelegate
	//constexpr auto LastDamager = 0xbb0; // AFortPlayerController*
	//constexpr auto LastFallInstigator = 0xbc0; // AFortPlayerController*
	//constexpr auto LastDamagerCreditThresholdDropElim = 0xbcc; // float
	//constexpr auto LastDamagerCreditThresholdSelfElim = 0xbd0; // float
	//constexpr auto LastDamagerCreditThresholdStormElim = 0xbd4; // float
	//constexpr auto bGiveLastDamagerElimCreditOnDrop = 0xbd8; // bool
	//constexpr auto bGiveLastDamagerElimCreditOnSelfDamage = 0xbd9; // bool
	//constexpr auto bGiveLastDamagerElimCreditOnStormDamage = 0xbda; // bool
	//constexpr auto OnMcpProfilesInitializedEvent = 0xc28; // FMulticastInlineDelegate
	//constexpr auto OnEnterVehicleDriver = 0xdc8; // FMulticastInlineDelegate
	//constexpr auto OnEnterVehiclePassenger = 0xdd8; // FMulticastInlineDelegate
	//constexpr auto OnExitVehicle = 0xde8; // FMulticastInlineDelegate
	//constexpr auto OnFullyExitVehicle = 0xdf8; // FMulticastInlineDelegate
	//constexpr auto OnVehicleSeatChanged = 0xe08; // FMulticastInlineDelegate
	//constexpr auto OnVehicleAbilitiesRemoved = 0xe18; // FMulticastInlineDelegate
	//constexpr auto OnTetherChanged = 0xe28; // FMulticastInlineDelegate
	//constexpr auto bHoldingObject = 0xe70; // char : 1
	//constexpr auto DBNOCarryInputComponent = 0xe78; // UInputComponent*
	//constexpr auto HeldObjectsInputComponent = 0xe80; // UInputComponent*
	//constexpr auto bForceJogHeld = 0xed0; // char : 1
	//constexpr auto bSprintWasCanceledByReload = 0xed0; // char : 1
	//constexpr auto bForceBinaryForward = 0xed0; // char : 1
	//constexpr auto bShouldAttemptReloadOnEquip = 0xed0; // char : 1
	//constexpr auto bForcingJogFromToggle = 0xed0; // char : 1
	//constexpr auto bSprintToggleable = 0xed0; // char : 1
	//constexpr auto bHoldingSprint = 0xed0; // char : 1
	//constexpr auto bWantsToSprint = 0xed0; // char : 1
	//constexpr auto bSprintBehaviorIsOverridden = 0xed1; // char : 1
	//constexpr auto bSprintByDefaultWhenSprintIsOverridden = 0xed1; // char : 1
	//constexpr auto bSprintByDefault = 0xed1; // char : 1
	//constexpr auto bAutoRunOn = 0xed1; // char : 1
	//constexpr auto bUseHoldToSwapPickup = 0xed1; // char : 1
	//constexpr auto bTargetingToggleable = 0xed1; // char : 1
	//constexpr auto bTargetingToggleableWithTouch = 0xed1; // char : 1
	//constexpr auto bMovementDisabledDueToCancellableAction = 0xed1; // char : 1
	//constexpr auto bIsPlayerActivelyMoving = 0xed2; // char : 1
	//constexpr auto bPlaceHeldObjectPressed = 0xed2; // char : 1
	//constexpr auto InMovementCancellableAction = 0xed4; // int32_t
	//constexpr auto bAllowHoldForAmmoCrafting = 0xed8; // bool
	//constexpr auto bIsClientTimingOut = 0xed9; // bool
	//constexpr auto ClientTimeoutBlockInputTime = 0xedc; // float
	//constexpr auto LastMoveInputFrame = 0xee8; // uint64_t
	//constexpr auto LastPressGamepadSprintTime = 0xef0; // float
	//constexpr auto bAutoRunWasHoldingForward = 0xef4; // bool
	//constexpr auto bAtNameBaseScreen = 0xef5; // bool
	//constexpr auto OnSetFirstPersonCamera = 0xef8; // FMulticastInlineDelegate
	//constexpr auto CinematicCameraClassOverride = 0xf78; // UFortCinematicCamera*
	//constexpr auto bOnPressExecuteJetpack = 0xf80; // bool
	//constexpr auto bShowHitMarkersForFriendlyFire = 0xfa0; // bool
	//constexpr auto bServerSideHitMarkers = 0xfa1; // bool
	//constexpr auto OnUiChoiceCompleted = 0xfb8; // FMulticastInlineDelegate
	//constexpr auto OnRegainedFocus = 0xfc8; // FMulticastInlineDelegate
	//constexpr auto OnReloadCancelingSprint = 0xfd8; // FMulticastInlineDelegate
	//constexpr auto OnOpenVoteDialog = 0x1000; // FMulticastInlineDelegate
	//constexpr auto bGamepadAbilityPending = 0x12b4; // bool
	//constexpr auto bForceAllowCursorMode = 0x12b5; // bool
	//constexpr auto bForceAllowCameraMode = 0x12b6; // bool
	//constexpr auto bSuppressEventNotifications = 0x12b8; // bool
	//constexpr auto LastSpotTime = 0x1328; // float
	//constexpr auto CurrentMarks = 0x1340; // TArray<TWeakObjectPtr<AFortMarkActor>>
	//constexpr auto LoopingUIFeedbackComponents = 0x1350; // TMap<FName, UAudioComponent*>
	//constexpr auto PreviewAbility = 0x13a0; // UFortGameplayAbility*
	//constexpr auto IntensityGraphInfo = 0x13c0; // FAIDirectorDebugInfo
	//constexpr auto PIDValuesGraphInfo = 0x13e8; // FAIDirectorDebugInfo
	//constexpr auto PIDContributionsGraphInfo = 0x1410; // FAIDirectorDebugInfo
	//constexpr auto AIDirectorDataManager = 0x1438; // AFortAIDirectorDataManager*
	//constexpr auto MusicManager = 0x1440; // AFortMusicManager*
	//constexpr auto OnBuildPreviewMarkerVisibilityChanged = 0x1448; // FMulticastInlineDelegate
	//constexpr auto OnWeakSpotReset = 0x1458; // FMulticastInlineDelegate
	//constexpr auto bUsePredictedBuildingActors = 0x1478; // bool
	//constexpr auto bRegisterPredictedBuildingActorsWithGrid = 0x1479; // bool
	//constexpr auto bPredictedBuildingWallsHaveNoCollision = 0x147a; // bool
	//constexpr auto PredictedActorLifespan = 0x147c; // float
	//constexpr auto PredictedBuildingSMActors = 0x1480; // TArray<ABuildingSMActor*>
	//constexpr auto BuildPreviewModeInputComponent = 0x1610; // UInputComponent*
	//constexpr auto BuildPreviewMarker = 0x1618; // ABuildingPlayerPrimitivePreview*
	//constexpr auto BuildPreviewMarkerExtraPiece = 0x1620; // ABuildingPlayerPrimitivePreview*
	//constexpr auto bAllowBuildingPreviewAutoRotation = 0x1690; // bool
	//constexpr auto bRequireTraceToExistingBuildingToSetContext = 0x1691; // bool
	//constexpr auto bAllowTraceToExistingBuildingToSetContextToRedirectToBlockingBuilding = 0x1692; // bool
	//constexpr auto bRequireTraceToExistingBuildingToSetContextExcludeCurrentContext = 0x1693; // bool
	//constexpr auto TargetedBuilding = 0x1760; // ABuildingActor*
	//constexpr auto TargetedVehicle = 0x1768; // AActor*
	//constexpr auto ContextualConversionClass = 0x1770; // ABuildingSMActor*
	//constexpr auto StartUpgradeSound = 0x1778; // TSoftObjectPtr<USoundBase>
	//constexpr auto HighlightedPrimaryBuildings = 0x17a0; // TArray<ABuildingActor*>
	//constexpr auto HighlightedInteractionBuildings = 0x17b0; // TArray<ABuildingActor*>
	//constexpr auto HighlightedPrimaryBuilding = 0x17c0; // TWeakObjectPtr<ABuildingActor>
	//constexpr auto BuildPreviewMarkerParentMaterial = 0x17c8; // TSoftObjectPtr<UMaterialInterface>
	//constexpr auto BuildPreviewMarkerMIDs = 0x17f0; // TArray<UMaterialInstanceDynamic*>
	//constexpr auto BuildPreviewRotationIterations = 0x1800; // char
	//constexpr auto bBuildPreviewMirrored = 0x1804; // char : 1
	//constexpr auto BuildPreviewMarkerOptionalAdjustment = 0x1808; // EFortBuildPreviewMarkerOptionalAdjustment
	//constexpr auto bBuildFree = 0x180c; // char : 1
	//constexpr auto bCraftFree = 0x1844; // char : 1
	//constexpr auto CurrentCostInfoType = 0x1848; // EFortCostInfoTypes
	//constexpr auto CurrentBuildableClass = 0x1850; // ABuildingSMActor*
	//constexpr auto PreviousBuildableClass = 0x1858; // ABuildingSMActor*
	//constexpr auto CurrentResourceLevel = 0x1860; // EFortResourceLevel
	//constexpr auto CurrentResourceType = 0x1861; // EFortResourceType
	//constexpr auto LastBuildableStateData0xc = 0x1868; // FLastBuildableState
	//constexpr auto QueuedDamageNumbers = 0x1938; // TArray<FFortDamageNumberInfo>
	//constexpr auto DamageNumbersActor = 0x1948; // AFortDamageNumbersActor*
	//constexpr auto EditModeInputComponent = 0x1950; // UInputComponent*
	//constexpr auto EditBuildingActor = 0x1958; // ABuildingSMActor*
	//constexpr auto EditModeDistance = 0x1960; // float
	//constexpr auto LastBuildPreviewGridSnapLoc = 0x1968; // FVector
	//constexpr auto LastBuildPreviewGridSnapRot = 0x1980; // FRotator
	//constexpr auto LastBuildPreviewGridSnapCentroid = 0x1998; // FVector
	//constexpr auto PickerInputComponent = 0x19b0; // UInputComponent*
	//constexpr auto TrapPickerDecoHelper = 0x19b8; // AFortDecoHelper*
	//constexpr auto TouchEditResults = 0x19c0; // TArray<FHitResult>
	//constexpr auto bBuildingPlacementTraceSkipInitialPenetrationOfBuildingSMActor = 0x19d1; // bool
	//constexpr auto bBuildingPlacementTraceSkipInitialPenetrationOfStaticMesh = 0x19d2; // bool
	//constexpr auto ClientQuickBars = 0x1a18; // AFortQuickBars*
	//constexpr auto RecentlyRemovedQuickbarInfo = 0x1a28; // TArray<FRecentlyRemovedQuickbarInfo>
	//constexpr auto DelayedQuickBarActions = 0x1a88; // FDelayedQuickBarActionContainer
	//constexpr auto ClientProcessedQuickBarActions = 0x1ba8; // TSet<uint32_t>
	//constexpr auto bShouldForceDeleteDroppedItems = 0x1bf8; // bool
	//constexpr auto QueuedItemsToDrop = 0x1c20; // FQueuedItemsToDropViaPickup
	//constexpr auto bAutoEquipBetterItems = 0x1cc8; // char : 1
	//constexpr auto WorldInventory = 0x1cd0; // AFortInventory*
	//constexpr auto OutpostInventory = 0x1cd8; // AFortInventory*
	//constexpr auto ViewTargetInventory = 0x1ce0; // AFortInventory*
	//constexpr auto bIsSavingGadgetLoadout = 0x1d34; // char : 1
	//constexpr auto bForceWorldInventoryUpdate = 0x1d34; // char : 1
	//constexpr auto bAccountInventoryWasUpdated = 0x1d34; // char : 1
	//constexpr auto bHasInitializedHeroInventory = 0x1d34; // char : 1
	//constexpr auto bHasInitializedWorldInventory = 0x1d34; // char : 1
	//constexpr auto BotPilot = 0x1dd0; // UFortClientPilot_Base*
	//constexpr auto BotManager = 0x1df0; // UFortClientBotManager*
	//constexpr auto ClientBotManagerClass = 0x1e00; // UFortClientBotManager*
	//constexpr auto CosmeticLoadoutPC = 0x1e20; // FFortAthenaLoadout
	//constexpr auto LocalPawnCustomizationAssetLoader = 0x1f80; // UFortCustomizationAssetLoader*
	//constexpr auto bDropWeaponsDuringAllMissionStates = 0x1fa0; // bool
	//constexpr auto LatestRewardReport = 0x1fc0; // FFortRewardReport
	//constexpr auto MyPlayerInfo = 0x2030; // UFortRegisteredPlayerInfo*
	//constexpr auto UpdatedObjectiveStats = 0x2038; // TArray<FFortUpdatedObjectiveStat>
	//constexpr auto bHasUnsavedPrimaryMissionProgress = 0x2048; // bool
	//constexpr auto StatManager = 0x2088; // UStatManager*
	//constexpr auto HeartbeatManager = 0x2090; // UHeartbeatManager*
	//constexpr auto StatEventManager = 0x2098; // UFortStatEventManager*
	//constexpr auto CachedPersistentGameplayStats = 0x20a0; // FFortPersistentGameplayStatContainer
	//constexpr auto LastEmotePlayed = 0x20c0; // UFortMontageItemDefinitionBase*
	//constexpr auto EmoteUsageCounts = 0x20c8; // TMap<UFortMontageItemDefinitionBase*, int32_t>
	//constexpr auto AnalyticsBuildingWallTooLowLocations = 0x2118; // TArray<FVector>
	//constexpr auto NearbyEmotingPawns = 0x2128; // TSet<AFortPlayerPawn*>
	//constexpr auto NearbyEmotingPawnCount = 0x2178; // TMap<FName, int32_t>
	//constexpr auto McpProfileGroup = 0x21c8; // UMcpProfileGroup*
	//constexpr auto CommonPublicMcpProfile = 0x21d0; // UFortMcpProfileCommonPublic*
	//constexpr auto CommonCoreMcpProfile = 0x21d8; // UFortMcpProfileCommonCore*
	//constexpr auto MainMcpProfile = 0x21e0; // UFortMcpProfileCampaign*
	//constexpr auto AthenaProfile = 0x21e8; // UFortMcpProfileAthena*
	//constexpr auto MetadataProfile = 0x21f0; // UFortMcpProfileMetadata*
	//constexpr auto CreativeModeProfile = 0x21f8; // UFortMcpProfileCreative*
	//constexpr auto TutorialCompletedState = 0x2200; // EFortPCTutorialCompletedState
	//constexpr auto bShouldReceiveCriticalMatchBonus = 0x2238; // bool
	//constexpr auto OnPlayerChangedBuildMode = 0x2240; // FMulticastInlineDelegate
	//constexpr auto OnAutoRunEnabled = 0x2250; // FMulticastInlineDelegate
	//constexpr auto VoiceInputSourceEffectPresetChain = 0x23c0; // USoundEffectSourcePresetChain*
	//constexpr auto LocationUnderReticle = 0x2468; // FVector
	//constexpr auto bUsePickers = 0x2480; // char : 1
	//constexpr auto bInfiniteDurability = 0x2480; // char : 1
	//constexpr auto bNoCoolDown = 0x2480; // char : 1
	//constexpr auto bInfiniteConsumables = 0x2480; // char : 1
	//constexpr auto bInfiniteMagazine = 0x2480; // char : 1
	//constexpr auto bVoiceChatPTTTransmit = 0x2480; // char : 1
	//constexpr auto bEnableVoiceChatPTT = 0x2480; // char : 1
	//constexpr auto bInfiniteAmmo = 0x2480; // char : 1
	//constexpr auto bCheatFly = 0x2481; // char : 1
	//constexpr auto bEnableShotLogging = 0x2481; // char : 1
	//constexpr auto bIsNearActiveEncounters = 0x2481; // char : 1
	//constexpr auto bCheatGhost = 0x2481; // char : 1
	//constexpr auto bPickerEnabled = 0x2481; // char : 1
	//constexpr auto bPickerOpen = 0x2481; // char : 1
	//constexpr auto OverriddenBackpackSize = 0x2484; // int32_t
	//constexpr auto CurrentReplaySpotLight = 0x2488; // AFortReplayMovableSpotLight*
	//constexpr auto AimHelpMode = 0x2490; // uint32_t
	//constexpr auto JumpStaminaCost = 0x2494; // EFortJumpStaminaCost
	//constexpr auto CameraPrototypeName = 0x2498; // FName
	//constexpr auto bHideHudEnglishText = 0x24d8; // bool
	//constexpr auto bAutoChangeMaterial = 0x24d9; // bool
	//constexpr auto bServerAutoChangeMaterial = 0x24da; // bool
	//constexpr auto bPeripheralLightingEnabled = 0x24db; // bool
	//constexpr auto bRudderControlEnabled = 0x24dc; // bool
	//constexpr auto RudderDeadZone = 0x24e0; // float
	//constexpr auto RudderMaxThrottle = 0x24e4; // float
	//constexpr auto ActiveSprayInstances = 0x24e8; // TArray<AFortSprayDecalInstance*>
	//constexpr auto ActiveToyInstances = 0x24f8; // TArray<AActor*>
	//constexpr auto ToySummonCounts = 0x2508; // TMap<UObject*, int32_t>
	//constexpr auto bSyncPeripheralLightingWithEmoteMusic = 0x2558; // bool
	//constexpr auto bPushEmoteAudioDataToCosmeticMaterials = 0x2559; // bool
	//constexpr auto LastEmoteMusicFFT100hz = 0x255c; // float
	//constexpr auto LastEmoteMusicFFT2000hz = 0x2560; // float
	//constexpr auto EmoteMusicBeatThreshold = 0x2564; // float
	//constexpr auto EmoteMusicEnvelopeBeatCount = 0x2568; // float
	//constexpr auto bZeroingCameraRoll = 0x26d0; // bool
	//constexpr auto bTryPickupSwap = 0x26d1; // bool
	//constexpr auto bClientSideEditPrediction = 0x26d2; // bool
	//constexpr auto ClientSideEditPredictionTimeout = 0x26d4; // float
	//constexpr auto PendingEnterEditModeActor = 0x26e0; // ABuildingSMActor*
	//constexpr auto RandomCharacterIndex = 0x26e8; // int32_t
	//constexpr auto AntiAddictionPlayTimeMultiplier = 0x26ec; // float
	//constexpr auto bUsesWidgetForFPSDisplay = 0x26f0; // bool
	//constexpr auto bShowFPS = 0x26f1; // bool
	//constexpr auto OnShowFPSChange = 0x26f8; // FMulticastInlineDelegate
	//constexpr auto bShowTemperature = 0x2708; // bool
	//constexpr auto OnShowTemperatureChange = 0x2710; // FMulticastInlineDelegate
	//constexpr auto LockOnInfo = 0x2778; // FLockOnInfo
	//constexpr auto bLockPrimaryInputMethodToMouse = 0x27c8; // bool
	//constexpr auto IndicatorManager = 0x27e0; // UFortIndicatorManager*
	//constexpr auto bFinalXPUpdateFailed = 0x27f8; // bool
	//constexpr auto TestUserWidget = 0x2800; // UUserWidget*
	//constexpr auto PreviousStasisMode = 0x2808; // EFortPawnStasisMode
	//constexpr auto BattleMapSpectatorClass = 0x2810; // ABattleMapPawnLive*
	//constexpr auto bReleaseBuildingContextOnPlace = 0x2835; // bool
	//constexpr auto TurboPlaceFirstInterval = 0x2838; // float
	//constexpr auto TurboPlaceInterval = 0x283c; // float
	//constexpr auto bCreativeTurboDelete = 0x2840; // bool
	//constexpr auto TurboDeleteFirstInterval = 0x2844; // float
	//constexpr auto TurboDeleteInterval = 0x2848; // float
	//constexpr auto bTurboBuild = 0x284d; // bool
	//constexpr auto TurboBuildFirstInterval = 0x2850; // float
	//constexpr auto TurboBuildRequestFailedInterval = 0x2854; // float
	//constexpr auto TurboBuildInterval = 0x2858; // float
	//constexpr auto FortControllerComponent_Telemetry = 0x2868; // UFortControllerComponent_Telemetry*
	//constexpr auto InventoryNetworkManagementComponent = 0x2870; // UFortControllerComponent_InventoryNetworkManagement*
	//constexpr auto InteractionComponent = 0x2878; // UFortControllerComponent_Interaction*
	//constexpr auto QuickEditComponent = 0x2880; // UFortControllerComponent_QuickEdit*
	//constexpr auto SmartBuildComponent = 0x2888; // UFortControllerComponent_SmartBuild*
	//constexpr auto CollectionsComponent = 0x2890; // UFortControllerComponent_Collections*
	//constexpr auto PendingExecuteInventoryItemHandle = 0x2898; // FItemVariantHandle
	//constexpr auto QuickHealItemPickerClass = 0x28c8; // UQuickHealItemPicker*
	//constexpr auto OnPlayerSpawnedBuildingActor = 0x28d0; // FMulticastInlineDelegate
	//constexpr auto MeshParentIds = 0x28e0; // TArray<FString>
	//constexpr auto OnToggleFullscreenMap = 0x28f0; // FMulticastInlineDelegate
	//constexpr auto ForcedInputRotationSpeed = 0x29f8; // float
	//constexpr auto PendingClientRestartPawn = 0x2a00; // APawn*

constexpr auto OnPlayerPawnPossessed = 0x818;
constexpr auto OnPickupCreated = 0x828;
constexpr auto OnViewTargetChanged = 0x868;
constexpr auto OnInputFiltered = 0x878;
constexpr auto bAllowPcbBenefits = 0x8A0;
constexpr auto OnFortPawnChangedEvent = 0x8A8;
constexpr auto OnControllerComponentAttachedEvent = 0x8B8;
constexpr auto bInPossession = 0x961;
constexpr auto AircraftInputComponent = 0x9B8;
constexpr auto MiniMapInputComponent = 0x9C0;
constexpr auto SprintOverrideComponent = 0x9C8;
constexpr auto SkydiveMusicAudioComp = 0x9D0;
constexpr auto bFailedToRespawn = 0x9D8;
constexpr auto bIsDisconnecting = 0x9D8;
constexpr auto bIsBeingKicked = 0x9D8;
constexpr auto bHasInitiallySpawned = 0x9D8;
constexpr auto bAssignedStartSpawn = 0x9D8;
constexpr auto bReadyToStartMatch = 0x9D8;
constexpr auto bClientPawnIsLoaded = 0x9D8;
constexpr auto SpawnLoc = 0x9E0;
constexpr auto NumPreviousSpawns = 0x9F8;
constexpr auto bCanSpectateBot = 0x9FC;
constexpr auto OnBlueprintReadyCheckCompleted = 0xA00;
constexpr auto OnDelayForPreServerTransitionAnimationEvent = 0xA20;
constexpr auto SimpleLoadingScreenSoundMix = 0xA48;
constexpr auto RegisteredPartnerId = 0xA60;
constexpr auto RegisteredPartnerTag = 0xA70;
constexpr auto SprintOverrideAbilityGameplayTag = 0xA74;
constexpr auto ManagedAIs = 0xA78;
constexpr auto MyFortPawn = 0xA88;
constexpr auto MyFortPawnBeforeTakeoverOfScriptedPawn = 0xA90;
constexpr auto ScriptedPawnControllerBeforeTakeover = 0xA98;
constexpr auto bHasClientFinishedLoading = 0xAA0;
constexpr auto bHasServerFinishedLoading = 0xAA1;
constexpr auto TimeStartedWaiting = 0xAA4;
constexpr auto TimeFinishedNavigationBuild = 0xAA8;
constexpr auto MaterialParameterCollection = 0xAB0;
constexpr auto bLoadingScreenDropped = 0xAC1;
constexpr auto PendingSpectatorLocation = 0xAC8;
constexpr auto ActorUnderReticle = 0xAE0;
constexpr auto AutoFireReticleTarget = 0xAE8;
constexpr auto AutofireTimerHandle = 0xAF0;
constexpr auto WeakspotUnderReticle = 0xB00;
constexpr auto ActiveWeakSpots = 0xB08;
constexpr auto IdleKickLastTimeActive = 0xB18;
constexpr auto LastTimeActive = 0xB1C;
constexpr auto bRevertPlayerListenerChange = 0xB40;
constexpr auto VehicleInputComponent = 0xB60;
constexpr auto bHoldingPrimaryFireFromTouch = 0xB68;
constexpr auto bSupportNextPieceAssist = 0xB69;
constexpr auto bAutoBuildForTrapPlacement = 0xB6A;
constexpr auto bAutoBuildForFloorTrapPlacement = 0xB6B;
constexpr auto bAutoBuildForWallTrapPlacement = 0xB6C;
constexpr auto bAutoBuildForCeilingTrapPlacement = 0xB6D;
constexpr auto bNoControllerLighting = 0xB6E;
constexpr auto ReturnToMainMenuTimeoutDelay = 0xB70;
constexpr auto OnQuestObjectiveStateChanged = 0xB78;
constexpr auto LastDamager = 0xBA0;
constexpr auto LastFallInstigator = 0xBB0;
constexpr auto LastDamagerCreditThresholdDropElim = 0xBBC;
constexpr auto LastDamagerCreditThresholdSelfElim = 0xBC0;
constexpr auto LastDamagerCreditThresholdStormElim = 0xBC4;
constexpr auto bGiveLastDamagerElimCreditOnDrop = 0xBC8;
constexpr auto bGiveLastDamagerElimCreditOnSelfDamage = 0xBC9;
constexpr auto bGiveLastDamagerElimCreditOnStormDamage = 0xBCA;
constexpr auto OnMcpProfilesInitializedEvent = 0xC18;
constexpr auto OnEnterVehicleDriver = 0xDB8;
constexpr auto OnEnterVehiclePassenger = 0xDC8;
constexpr auto OnExitVehicle = 0xDD8;
constexpr auto OnFullyExitVehicle = 0xDE8;
constexpr auto OnVehicleSeatChanged = 0xDF8;
constexpr auto OnVehicleAbilitiesRemoved = 0xE08;
constexpr auto OnTetherChanged = 0xE18;
constexpr auto bHoldingObject = 0xE60;
constexpr auto DBNOCarryInputComponent = 0xE68;
constexpr auto HeldObjectsInputComponent = 0xE70;
constexpr auto bWantsToSprint = 0xEC0;
constexpr auto bHoldingSprint = 0xEC0;
constexpr auto bSprintToggleable = 0xEC0;
constexpr auto bForcingJogFromToggle = 0xEC0;
constexpr auto bForceJogHeld = 0xEC0;
constexpr auto bForceBinaryForward = 0xEC0;
constexpr auto bSprintWasCanceledByReload = 0xEC0;
constexpr auto bShouldAttemptReloadOnEquip = 0xEC0;
constexpr auto bSprintBehaviorIsOverridden = 0xEC1;
constexpr auto bSprintByDefaultWhenSprintIsOverridden = 0xEC1;
constexpr auto bSprintByDefault = 0xEC1;
constexpr auto bAutoRunOn = 0xEC1;
constexpr auto bUseHoldToSwapPickup = 0xEC1;
constexpr auto bTargetingToggleable = 0xEC1;
constexpr auto bTargetingToggleableWithTouch = 0xEC1;
constexpr auto bMovementDisabledDueToCancellableAction = 0xEC1;
constexpr auto bIsPlayerActivelyMoving = 0xEC2;
constexpr auto bPlaceHeldObjectPressed = 0xEC2;
constexpr auto InMovementCancellableAction = 0xEC4;
constexpr auto bAllowHoldForAmmoCrafting = 0xEC8;
constexpr auto bIsClientTimingOut = 0xEC9;
constexpr auto ClientTimeoutBlockInputTime = 0xECC;
constexpr auto LastMoveInputFrame = 0xED8;
constexpr auto LastPressGamepadSprintTime = 0xEE0;
constexpr auto bAutoRunWasHoldingForward = 0xEE4;
constexpr auto bAtNameBaseScreen = 0xEE5;
constexpr auto OnSetFirstPersonCamera = 0xEE8;
constexpr auto CinematicCameraClassOverride = 0xF68;
constexpr auto bOnPressExecuteJetpack = 0xF70;
constexpr auto bShowHitMarkersForFriendlyFire = 0xF90;
constexpr auto bServerSideHitMarkers = 0xF91;
constexpr auto OnUiChoiceCompleted = 0xFA8;
constexpr auto OnRegainedFocus = 0xFB8;
constexpr auto OnReloadCancelingSprint = 0xFC8;
constexpr auto OnOpenVoteDialog = 0xFF0;
constexpr auto bGamepadAbilityPending = 0x12A4;
constexpr auto bForceAllowCursorMode = 0x12A5;
constexpr auto bForceAllowCameraMode = 0x12A6;
constexpr auto bSuppressEventNotifications = 0x12A8;
constexpr auto LastSpotTime = 0x1318;
constexpr auto CurrentMarks = 0x1330;
constexpr auto LoopingUIFeedbackComponents = 0x1340;
constexpr auto PreviewAbility = 0x1390;
constexpr auto IntensityGraphInfo = 0x13B0;
constexpr auto PIDValuesGraphInfo = 0x13D8;
constexpr auto PIDContributionsGraphInfo = 0x1400;
constexpr auto AIDirectorDataManager = 0x1428;
constexpr auto MusicManager = 0x1430;
constexpr auto OnBuildPreviewMarkerVisibilityChanged = 0x1438;
constexpr auto OnWeakSpotReset = 0x1448;
constexpr auto bUsePredictedBuildingActors = 0x1468;
constexpr auto bRegisterPredictedBuildingActorsWithGrid = 0x1469;
constexpr auto bPredictedBuildingWallsHaveNoCollision = 0x146A;
constexpr auto PredictedActorLifespan = 0x146C;
constexpr auto PredictedBuildingSMActors = 0x1470;
constexpr auto BuildPreviewModeInputComponent = 0x1600;
constexpr auto BuildPreviewMarker = 0x1608;
constexpr auto BuildPreviewMarkerExtraPiece = 0x1610;
constexpr auto bAllowBuildingPreviewAutoRotation = 0x1680;
constexpr auto bRequireTraceToExistingBuildingToSetContext = 0x1681;
constexpr auto bAllowTraceToExistingBuildingToSetContextToRedirectToBlockingBuilding = 0x1682;
constexpr auto bRequireTraceToExistingBuildingToSetContextExcludeCurrentContext = 0x1683;
constexpr auto TargetedBuilding = 0x1750;
constexpr auto TargetedVehicle = 0x1758;
constexpr auto ContextualConversionClass = 0x1760;
constexpr auto StartUpgradeSound = 0x1768;
constexpr auto HighlightedPrimaryBuildings = 0x1790;
constexpr auto HighlightedInteractionBuildings = 0x17A0;
constexpr auto HighlightedPrimaryBuilding = 0x17B0;
constexpr auto BuildPreviewMarkerParentMaterial = 0x17B8;
constexpr auto BuildPreviewMarkerMIDs = 0x17E0;
constexpr auto BuildPreviewRotationIterations = 0x17F0;
constexpr auto bBuildPreviewMirrored = 0x17F4;
constexpr auto BuildPreviewMarkerOptionalAdjustment = 0x17F8;
constexpr auto bBuildFree = 0x17FC;
constexpr auto bCraftFree = 0x1834;
constexpr auto CurrentCostInfoType = 0x1838;
constexpr auto CurrentBuildableClass = 0x1840;
constexpr auto PreviousBuildableClass = 0x1848;
constexpr auto CurrentResourceLevel = 0x1850;
constexpr auto CurrentResourceType = 0x1851;
constexpr auto LastBuildableStateData = 0x1858;
constexpr auto QueuedDamageNumbers = 0x1928;
constexpr auto DamageNumbersActor = 0x1938;
constexpr auto EditModeInputComponent = 0x1940;
constexpr auto EditBuildingActor = 0x1948;
constexpr auto EditModeDistance = 0x1950;
constexpr auto LastBuildPreviewGridSnapLoc = 0x1958;
constexpr auto LastBuildPreviewGridSnapRot = 0x1970;
constexpr auto LastBuildPreviewGridSnapCentroid = 0x1988;
constexpr auto PickerInputComponent = 0x19A0;
constexpr auto TrapPickerDecoHelper = 0x19A8;
constexpr auto TouchEditResults = 0x19B0;
constexpr auto bBuildingPlacementTraceSkipInitialPenetrationOfBuildingSMActor = 0x19C1;
constexpr auto bBuildingPlacementTraceSkipInitialPenetrationOfStaticMesh = 0x19C2;
constexpr auto ClientQuickBars = 0x1A08;
constexpr auto RecentlyRemovedQuickbarInfo = 0x1A18;
constexpr auto DelayedQuickBarActions = 0x1A78;
constexpr auto ClientProcessedQuickBarActions = 0x1B98;
constexpr auto bShouldForceDeleteDroppedItems = 0x1BE8;
constexpr auto QueuedItemsToDrop = 0x1C10;
constexpr auto bAutoEquipBetterItems = 0x1CB8;
constexpr auto WorldInventory = 0x1CC0;
constexpr auto OutpostInventory = 0x1CC8;
constexpr auto ViewTargetInventory = 0x1CD0;
constexpr auto bHasInitializedWorldInventory = 0x1D24;
constexpr auto bHasInitializedHeroInventory = 0x1D24;
constexpr auto bAccountInventoryWasUpdated = 0x1D24;
constexpr auto bForceWorldInventoryUpdate = 0x1D24;
constexpr auto bIsSavingGadgetLoadout = 0x1D24;
constexpr auto BotPilot = 0x1DC0;
constexpr auto BotManager = 0x1DE0;
constexpr auto ClientBotManagerClass = 0x1DF0;
constexpr auto CosmeticLoadoutPC = 0x1E10;
constexpr auto LocalPawnCustomizationAssetLoader = 0x1F70;
constexpr auto bDropWeaponsDuringAllMissionStates = 0x1F90;
constexpr auto LatestRewardReport = 0x1FB0;
constexpr auto MyPlayerInfo = 0x2020;
constexpr auto UpdatedObjectiveStats = 0x2028;
constexpr auto bHasUnsavedPrimaryMissionProgress = 0x2038;
constexpr auto StatManager = 0x2078;
constexpr auto HeartbeatManager = 0x2080;
constexpr auto StatEventManager = 0x2088;
constexpr auto CachedPersistentGameplayStats = 0x2090;
constexpr auto LastEmotePlayed = 0x20B0;
constexpr auto EmoteUsageCounts = 0x20B8;
constexpr auto AnalyticsBuildingWallTooLowLocations = 0x2108;
constexpr auto NearbyEmotingPawns = 0x2118;
constexpr auto NearbyEmotingPawnCount = 0x2168;
constexpr auto McpProfileGroup = 0x21B8;
constexpr auto CommonPublicMcpProfile = 0x21C0;
constexpr auto CommonCoreMcpProfile = 0x21C8;
constexpr auto MainMcpProfile = 0x21D0;
constexpr auto AthenaProfile = 0x21D8;
constexpr auto MetadataProfile = 0x21E0;
constexpr auto CreativeModeProfile = 0x21E8;
constexpr auto TutorialCompletedState = 0x21F0;
constexpr auto bShouldReceiveCriticalMatchBonus = 0x2228;
constexpr auto OnPlayerChangedBuildMode = 0x2230;
constexpr auto OnAutoRunEnabled = 0x2240;
constexpr auto VoiceInputSourceEffectPresetChain = 0x23B0;
constexpr auto LocationUnderReticle = 0x2458;
constexpr auto bEnableVoiceChatPTT = 0x2470;
constexpr auto bVoiceChatPTTTransmit = 0x2470;
constexpr auto bInfiniteAmmo = 0x2470;
constexpr auto bInfiniteConsumables = 0x2470;
constexpr auto bInfiniteMagazine = 0x2470;
constexpr auto bNoCoolDown = 0x2470;
constexpr auto bInfiniteDurability = 0x2470;
constexpr auto bUsePickers = 0x2470;
constexpr auto bPickerOpen = 0x2471;
constexpr auto bPickerEnabled = 0x2471;
constexpr auto bCheatGhost = 0x2471;
constexpr auto bCheatFly = 0x2471;
constexpr auto bEnableShotLogging = 0x2471;
constexpr auto bIsNearActiveEncounters = 0x2471;
constexpr auto OverriddenBackpackSize = 0x2474;
constexpr auto CurrentReplaySpotLight = 0x2478;
constexpr auto AimHelpMode = 0x2480;
constexpr auto JumpStaminaCost = 0x2484;
constexpr auto CameraPrototypeName = 0x2488;
constexpr auto bHideHudEnglishText = 0x24C8;
constexpr auto bAutoChangeMaterial = 0x24C9;
constexpr auto bServerAutoChangeMaterial = 0x24CA;
constexpr auto bPeripheralLightingEnabled = 0x24CB;
constexpr auto bRudderControlEnabled = 0x24CC;
constexpr auto RudderDeadZone = 0x24D0;
constexpr auto RudderMaxThrottle = 0x24D4;
constexpr auto ActiveSprayInstances = 0x24D8;
constexpr auto ActiveToyInstances = 0x24E8;
constexpr auto ToySummonCounts = 0x24F8;
constexpr auto bSyncPeripheralLightingWithEmoteMusic = 0x2548;
constexpr auto bPushEmoteAudioDataToCosmeticMaterials = 0x2549;
constexpr auto LastEmoteMusicFFT100hz = 0x254C;
constexpr auto LastEmoteMusicFFT2000hz = 0x2550;
constexpr auto EmoteMusicBeatThreshold = 0x2554;
constexpr auto EmoteMusicEnvelopeBeatCount = 0x2558;
constexpr auto bZeroingCameraRoll = 0x26C0;
constexpr auto bTryPickupSwap = 0x26C1;
constexpr auto bClientSideEditPrediction = 0x26C2;
constexpr auto ClientSideEditPredictionTimeout = 0x26C4;
constexpr auto PendingEnterEditModeActor = 0x26D0;
constexpr auto RandomCharacterIndex = 0x26D8;
constexpr auto AntiAddictionPlayTimeMultiplier = 0x26DC;
constexpr auto bUsesWidgetForFPSDisplay = 0x26E0;
constexpr auto bShowFPS = 0x26E1;
constexpr auto OnShowFPSChange = 0x26E8;
constexpr auto bShowTemperature = 0x26F8;
constexpr auto OnShowTemperatureChange = 0x2700;
constexpr auto LockOnInfo = 0x2768;
constexpr auto bLockPrimaryInputMethodToMouse = 0x27B8;
constexpr auto IndicatorManager = 0x27D0;
constexpr auto bFinalXPUpdateFailed = 0x27E8;
constexpr auto TestUserWidget = 0x27F0;
constexpr auto PreviousStasisMode = 0x27F8;
constexpr auto BattleMapSpectatorClass = 0x2800;
constexpr auto bReleaseBuildingContextOnPlace = 0x2825;
constexpr auto TurboPlaceFirstInterval = 0x2828;
constexpr auto TurboPlaceInterval = 0x282C;
constexpr auto bCreativeTurboDelete = 0x2830;
constexpr auto TurboDeleteFirstInterval = 0x2834;
constexpr auto TurboDeleteInterval = 0x2838;
constexpr auto bTurboBuild = 0x283D;
constexpr auto TurboBuildFirstInterval = 0x2840;
constexpr auto TurboBuildRequestFailedInterval = 0x2844;
constexpr auto TurboBuildInterval = 0x2848;
constexpr auto FortControllerComponent_Telemetry = 0x2858;
constexpr auto InventoryNetworkManagementComponent = 0x2860;
constexpr auto InteractionComponent = 0x2868;
constexpr auto QuickEditComponent = 0x2870;
constexpr auto SmartBuildComponent = 0x2878;
constexpr auto CollectionsComponent = 0x2880;
constexpr auto PendingExecuteInventoryItemHandle = 0x2888;
constexpr auto QuickHealItemPickerClass = 0x28B8;
constexpr auto OnPlayerSpawnedBuildingActor = 0x28C0;
constexpr auto MeshParentIds = 0x28D0;
constexpr auto OnToggleFullscreenMap = 0x28E0;
constexpr auto ForcedInputRotationSpeed = 0x29E8;
constexpr auto PendingClientRestartPawn = 0x29F0;
}
namespace APlayerCameraManager
{
	//constexpr auto PCOwner = 0x280; // APlayerController*
	//constexpr auto TransformComponent = 0x288; // USceneComponent*
	//constexpr auto exceptcamera = 0x298; // float
	//constexpr auto DefaultFOV = 0x294; // float
	//constexpr auto DefaultOrthoWidth = 0x29c; // float
	//constexpr auto DefaultAspectRatio = 0x2a4; // float
	//constexpr auto CameraCache = 0x310; // FCameraCacheEntry
	//constexpr auto LastFrameCameraCache = 0xa90; // FCameraCacheEntry
	//constexpr auto ViewTarget = 0x1210; // FTViewTarget
	//constexpr auto PendingViewTarget = 0x19a0; // FTViewTarget
	//constexpr auto CameraCachePrivate = 0x2160; // FCameraCacheEntry
	//constexpr auto LastFrameCameraCachePrivate = 0x28e0; // FCameraCacheEntry
	//constexpr auto ModifierList = 0x3060; // TArray<UCameraModifier*>
	//constexpr auto DefaultModifiers = 0x3070; // TArray<UCameraModifier*>
	//constexpr auto FreeCamDistance = 0x3080; // float
	//constexpr auto FreeCamOffset = 0x3088; // FVector
	//constexpr auto ViewTargetOffset = 0x30a0; // FVector
	//constexpr auto OnAudioFadeChangeEvent = 0x30b8; // FMulticastInlineDelegate
	//constexpr auto CameraLensEffects = 0x30e0; // TArray<TScriptInterface<ICameraLensEffectInterface>>
	//constexpr auto CachedCameraShakeMod = 0x30f0; // UCameraModifier_CameraShake*
	//constexpr auto AnimInstPool0x8 = 0x30f8; // UCameraAnimInst*
	//constexpr auto PostProcessBlendCache = 0x3138; // TArray<FPostProcessSettings>
	//constexpr auto ActiveAnims = 0x3158; // TArray<UCameraAnimInst*>
	//constexpr auto FreeAnims = 0x3168; // TArray<UCameraAnimInst*>
	//constexpr auto AnimCameraActor = 0x3178; // ACameraActor*
	//constexpr auto bClientSimulatingViewTarget = 0x3180; // char : 1
	//constexpr auto bUseClientSideCameraUpdates = 0x3180; // char : 1
	//constexpr auto bDefaultConstrainAspectRatio = 0x3180; // char : 1
	//constexpr auto bIsOrthographic = 0x3180; // char : 1
	//constexpr auto bGameCameraCutThisFrame = 0x3181; // char : 1
	//constexpr auto ViewPitchMin = 0x3184; // float
	//constexpr auto ViewPitchMax = 0x3188; // float
	//constexpr auto ViewYawMin = 0x318c; // float
	//constexpr auto ViewYawMax = 0x3190; // float
	//constexpr auto ViewRollMin = 0x3194; // float
	//constexpr auto ViewRollMax = 0x3198; // float
	//constexpr auto ServerUpdateCameraTimeout = 0x31a0; // float

	constexpr auto PCOwner = 0x270;
	constexpr auto TransformComponent = 0x278;
	constexpr auto DefaultFOV = 0x284;
	constexpr auto DefaultOrthoWidth = 0x28C;
	constexpr auto DefaultAspectRatio = 0x294;
	constexpr auto CameraCache = 0x300;
	constexpr auto LastFrameCameraCache = 0xA80;
	constexpr auto ViewTarget = 0x1200;
	constexpr auto PendingViewTarget = 0x1990;
	constexpr auto CameraCachePrivate = 0x2150;
	constexpr auto LastFrameCameraCachePrivate = 0x28D0;
	constexpr auto ModifierList = 0x3050;
	constexpr auto DefaultModifiers = 0x3060;
	constexpr auto FreeCamDistance = 0x3070;
	constexpr auto FreeCamOffset = 0x3078;
	constexpr auto ViewTargetOffset = 0x3090;
	constexpr auto OnAudioFadeChangeEvent = 0x30A8;
	constexpr auto CameraLensEffects = 0x30D0;
	constexpr auto CachedCameraShakeMod = 0x30E0;
	constexpr auto AnimInstPool = 0x30E8;
	constexpr auto PostProcessBlendCache = 0x3128;
	constexpr auto ActiveAnims = 0x3148;
	constexpr auto FreeAnims = 0x3158;
	constexpr auto AnimCameraActor = 0x3168;
	constexpr auto bIsOrthographic = 0x3170;
	constexpr auto bDefaultConstrainAspectRatio = 0x3170;
	constexpr auto bClientSimulatingViewTarget = 0x3170;
	constexpr auto bUseClientSideCameraUpdates = 0x3170;
	constexpr auto bGameCameraCutThisFrame = 0x3171;
	constexpr auto ViewPitchMin = 0x3174;
	constexpr auto ViewPitchMax = 0x3178;
	constexpr auto ViewYawMin = 0x317C;
	constexpr auto ViewYawMax = 0x3180;
	constexpr auto ViewRollMin = 0x3184;
	constexpr auto ViewRollMax = 0x3188;
	constexpr auto ServerUpdateCameraTimeout = 0x3190;
}
namespace FCameraCacheEntry
{
	constexpr auto Timestamp = 0x0; // float
	constexpr auto POV = 0x10; // FMinimalViewInfo
}
namespace FMinimalViewInfo
{
	constexpr auto Location = 0x0; // FVector
	constexpr auto Rotation = 0x18; // FRotator
	constexpr auto FOV = 0x30; // float
	constexpr auto DesiredFOV = 0x34; // float
	constexpr auto OrthoWidth = 0x38; // float
	constexpr auto OrthoNearClipPlane = 0x3c; // float
	constexpr auto OrthoFarClipPlane = 0x40; // float
	constexpr auto AspectRatio = 0x44; // float
	constexpr auto bConstrainAspectRatio = 0x48; // char : 1
	constexpr auto bUseFieldOfViewForLOD = 0x48; // char : 1
	constexpr auto ProjectionMode = 0x4c; // ECameraProjectionMode
	constexpr auto PostProcessBlendWeight = 0x50; // float
	constexpr auto PostProcessSettings = 0x60; // FPostProcessSettings
	constexpr auto OffCenterProjectionOffset = 0x6f0; // FVector2D
}



namespace FortAthenaSKVehicle {

	//constexpr auto WheelOffsetFR = 0x1858; // float
	//constexpr auto WheelOffsetFL = 0x185c; // float
	//constexpr auto WheelOffsetLimitF = 0x1860; // float
	//constexpr auto WheelOffsetBR = 0x1864; // float
	//constexpr auto WheelOffsetBL = 0x1868; // float
	//constexpr auto WheelOffsetLimitB = 0x186c; // float
	//constexpr auto WheelOffsetLerpPerSecondUp = 0x1870; // float
	//constexpr auto WheelOffsetLerpPerSecondDown = 0x1874; // float
	//constexpr auto AxleOffsetZ = 0x1878; // float
	//constexpr auto AxleOffsetZ_B = 0x187c; // float
	//constexpr auto AxleCenterF = 0x1880; // float
	//constexpr auto AxleCenterB = 0x1884; // float
	//constexpr auto AxleRollF = 0x1888; // float
	//constexpr auto AxleRollB = 0x188c; // float
	//constexpr auto WheelRotationFR = 0x1890; // float
	//constexpr auto WheelRotationFL = 0x1894; // float
	//constexpr auto WheelRotationBR = 0x1898; // float
	//constexpr auto WheelRotationBL = 0x189c; // float
	//constexpr auto WheelRotationVelocityFR = 0x18a0; // float
	//constexpr auto WheelRotationVelocityFL = 0x18a4; // float
	//constexpr auto WheelRotationVelocityBR = 0x18a8; // float
	//constexpr auto WheelRotationVelocityBL = 0x18ac; // float
	//constexpr auto WheelSpinFR = 0x18b0; // float
	//constexpr auto WheelSpinFL = 0x18b4; // float
	//constexpr auto WheelSpinBR = 0x18b8; // float
	//constexpr auto WheelSpinBL = 0x18bc; // float
	//constexpr auto WheelSpinVelocityFR = 0x18c0; // float
	//constexpr auto WheelSpinVelocityFL = 0x18c4; // float
	//constexpr auto WheelSpinVelocityBR = 0x18c8; // float
	//constexpr auto WheelSpinVelocityBL = 0x18cc; // float
	//constexpr auto WheelSpinDampingPerSecond = 0x18d0; // float

	constexpr auto WheelOffsetFR = 0x1850;
	constexpr auto WheelOffsetFL = 0x1854;
	constexpr auto WheelOffsetLimitF = 0x1858;
	constexpr auto WheelOffsetBR = 0x185C;
	constexpr auto WheelOffsetBL = 0x1860;
	constexpr auto WheelOffsetLimitB = 0x1864;
	constexpr auto WheelOffsetLerpPerSecondUp = 0x1868;
	constexpr auto WheelOffsetLerpPerSecondDown = 0x186C;
	constexpr auto AxleOffsetZ = 0x1870;
	constexpr auto AxleOffsetZ_B = 0x1874;
	constexpr auto AxleCenterF = 0x1878;
	constexpr auto AxleCenterB = 0x187C;
	constexpr auto AxleRollF = 0x1880;
	constexpr auto AxleRollB = 0x1884;
	constexpr auto WheelRotationFR = 0x1888;
	constexpr auto WheelRotationFL = 0x188C;
	constexpr auto WheelRotationBR = 0x1890;
	constexpr auto WheelRotationBL = 0x1894;
	constexpr auto WheelRotationVelocityFR = 0x1898;
	constexpr auto WheelRotationVelocityFL = 0x189C;
	constexpr auto WheelRotationVelocityBR = 0x18A0;
	constexpr auto WheelRotationVelocityBL = 0x18A4;
	constexpr auto WheelSpinFR = 0x18A8;
	constexpr auto WheelSpinFL = 0x18AC;
	constexpr auto WheelSpinBR = 0x18B0;
	constexpr auto WheelSpinBL = 0x18B4;
	constexpr auto WheelSpinVelocityFR = 0x18B8;
	constexpr auto WheelSpinVelocityFL = 0x18BC;
	constexpr auto WheelSpinVelocityBR = 0x18C0;
	constexpr auto WheelSpinVelocityBL = 0x18C4;
	constexpr auto WheelSpinDampingPerSecond = 0x18C8;
}

namespace StaticMeshComponent {
	//constexpr auto ForcedLodModel = 0x568; // int32_t
	//constexpr auto PreviousLODLevel = 0x56c; // int32_t
	//constexpr auto MinLOD = 0x570; // int32_t
	//constexpr auto SubDivisionStepSize = 0x574; // int32_t
	//constexpr auto StaticMesh = 0x578; // UStaticMesh*
	//constexpr auto WireframeColorOverride = 0x580; // FColor
	//constexpr auto bForceNavigationObstacle = 0x584; // char : 1
	//constexpr auto bIgnoreInstanceForTextureStreaming = 0x584; // char : 1
	//constexpr auto bDisallowMeshPaintPerInstance = 0x584; // char : 1
	//constexpr auto bOverrideLightMapRes = 0x584; // char : 1
	//constexpr auto bOverrideNavigationExport = 0x584; // char : 1
	//constexpr auto bOverrideWireframeColor = 0x584; // char : 1
	//constexpr auto bEvaluateWorldPositionOffset = 0x584; // char : 1
	//constexpr auto bOverrideMinLOD = 0x584; // char : 1
	//constexpr auto bUseDefaultCollision = 0x585; // char : 1
	//constexpr auto bReverseCulling = 0x585; // char : 1
	//constexpr auto bSortTriangles = 0x585; // char : 1
	//constexpr auto bUseSubDivisions = 0x585; // char : 1
	//constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x585; // char : 1
	//constexpr auto bCastDistanceFieldIndirectShadow = 0x585; // char : 1
	//constexpr auto OverriddenLightMapRes = 0x588; // int32_t
	//constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x58c; // float
	//constexpr auto DistanceFieldSelfShadowBias = 0x590; // float
	//constexpr auto StreamingDistanceMultiplier = 0x594; // float
	//constexpr auto LODData = 0x598; // TArray<FStaticMeshComponentLODInfo>
	//constexpr auto StreamingTextureData = 0x5a8; // TArray<FStreamingTextureBuildInfo>
	//constexpr auto LightmassSettings = 0x5b8; // FLightmassPrimitiveSettings

	constexpr auto ForcedLodModel = 0x568;
	constexpr auto PreviousLODLevel = 0x56C;
	constexpr auto MinLOD = 0x570;
	constexpr auto SubDivisionStepSize = 0x574;
	constexpr auto StaticMesh = 0x578;
	constexpr auto WireframeColorOverride = 0x580;
	constexpr auto bEvaluateWorldPositionOffset = 0x584;
	constexpr auto bOverrideWireframeColor = 0x584;
	constexpr auto bOverrideMinLOD = 0x584;
	constexpr auto bOverrideNavigationExport = 0x584;
	constexpr auto bForceNavigationObstacle = 0x584;
	constexpr auto bDisallowMeshPaintPerInstance = 0x584;
	constexpr auto bIgnoreInstanceForTextureStreaming = 0x584;
	constexpr auto bOverrideLightMapRes = 0x584;
	constexpr auto bCastDistanceFieldIndirectShadow = 0x585;
	constexpr auto bOverrideDistanceFieldSelfShadowBias = 0x585;
	constexpr auto bUseSubDivisions = 0x585;
	constexpr auto bUseDefaultCollision = 0x585;
	constexpr auto bSortTriangles = 0x585;
	constexpr auto bReverseCulling = 0x585;
	constexpr auto OverriddenLightMapRes = 0x588;
	constexpr auto DistanceFieldIndirectShadowMinVisibility = 0x58C;
	constexpr auto DistanceFieldSelfShadowBias = 0x590;
	constexpr auto StreamingDistanceMultiplier = 0x594;
	constexpr auto LODData = 0x598;
	constexpr auto StreamingTextureData = 0x5A8;
	constexpr auto LightmassSettings = 0x5B8;
}

namespace FortCameraMode {


	//constexpr auto PlayerCamera = 0x28; // AFortPlayerCameraBase*
	//constexpr auto TransitionTime = 0x30; // float
	//constexpr auto TransitionOutTime = 0x34; // float
	//constexpr auto bOverrideTransitionOutTime = 0x38; // bool
	//constexpr auto TransitionParams = 0x3c; // FViewTargetTransitionParams
	//constexpr auto bResetInterpolation = 0x4c; // char : 1
	//constexpr auto bShouldAllowBlendingWhenActive = 0x4c; // char : 1
	//constexpr auto bShouldAllowBlendingWhenInactive = 0x4c; // char : 1
	//constexpr auto bShouldPassViewTargetCheckOnTransition = 0x4c; // char : 1

	constexpr auto PlayerCamera = 0x28;
	constexpr auto TransitionTime = 0x30;
	constexpr auto TransitionOutTime = 0x34;
	constexpr auto bOverrideTransitionOutTime = 0x38;
	constexpr auto TransitionParams = 0x3C;
	constexpr auto bResetInterpolation = 0x4C;
	constexpr auto bShouldAllowBlendingWhenActive = 0x4C;
	constexpr auto bShouldAllowBlendingWhenInactive = 0x4C;
	constexpr auto bShouldPassViewTargetCheckOnTransition = 0x4C;

}


namespace FortCameraMode_ThirdPerson {
	//constexpr auto FOV = 0x50; // float
	//constexpr auto CameraSpaceForwardDistance = 0x54; // float
	//constexpr auto bClampCameraPitch = 0x58; // bool
	//constexpr auto bClampCameraYaw = 0x59; // bool
	//constexpr auto CameraPitchMin = 0x5c; // float
	//constexpr auto CameraPitchMax = 0x60; // float
	//constexpr auto CameraYawMin = 0x64; // float
	//constexpr auto CameraYawMax = 0x68; // float
	//constexpr auto CameraOrigin = 0x6c; // ECameraOrigin
	//constexpr auto CameraOriginSocketName = 0x70; // FName
	//constexpr auto CameraOriginInterpSpeed = 0x78; // FVector
	//constexpr auto CameraLocationErrorConstraintBox = 0x90; // FBox
	//constexpr auto ViewTargetSpaceViewOffset = 0xc8; // FInterpOffset
	//constexpr auto ViewTargetSpaceViewOffset_Crouch = 0xd8; // FInterpOffset
	//constexpr auto ViewTargetSpaceViewOffseInterpSpeed = 0xe8; // FVector
	//constexpr auto CameraSpaceViewOffset = 0x100; // FInterpOffset
	//constexpr auto ViewTargetAlignmentFlipInterpDuration = 0x110; // float
	//constexpr auto bScaleViewOffsetByViewTargetScale = 0x114; // bool
	//constexpr auto bSupportsShoulderSwap = 0x115; // bool
	//constexpr auto LastCameraOrigin = 0x178; // FVector
	//constexpr auto CameraOriginLocalOffset = 0x190; // FVector
	//constexpr auto PenetrationBlendInTime = 0x1a8; // float
	//constexpr auto PenetrationBlendOutTime = 0x1ac; // float
	//constexpr auto bPreventPenetration = 0x1b0; // bool
	//constexpr auto bDoPredictiveAvoidance = 0x1b1; // bool
	//constexpr auto CollisionPushOutDistance = 0x1b4; // float
	//constexpr auto HidePawnPenetrationPercent = 0x1b8; // float
	//constexpr auto LastAttachSocketName = 0x220; // FName
	//constexpr auto LastBasePOV = 0x230; // FMinimalViewInfo
	//constexpr auto DeltaBasePOV = 0x9a0; // FMinimalViewInfo
	//constexpr auto BlendAlpha = 0x1110; // float
	//constexpr auto PenetrationAvoidanceFeelers = 0x1128; // TArray<FPenetrationAvoidanceFeeler>
	//constexpr auto SafeLocToAimLineBlockedPct = 0x1138; // float
	//constexpr auto AimLineToDesiredPosBlockedPct = 0x113c; // float
	//constexpr auto LastDrawDebugTime = 0x1140; // float
	//constexpr auto LastViewTargetSpaceViewOffset = 0x1148; // FVector
	//constexpr auto LastViewTargetAlignmentUp = 0x1160; // FVector
	//constexpr auto ViewTargetAlignmentFlipInterpTime = 0x1178; // float
	//constexpr auto LastCameraPivot = 0x1180; // FVector
	//constexpr auto CachedPitchLimitMin = 0x1198; // float
	//constexpr auto CachedPitchLimitMax = 0x119c; // float
	//constexpr auto CachedYawLimitMin = 0x11a0; // float
	//constexpr auto CachedYawLimitMax = 0x11a4; // float
	//constexpr auto bLastViewTargetValidGroupEmoteLookTarget = 0x11a8; // bool
	//constexpr auto IgnoreActorForCameraPenetration = 0x11b0; // AActor*
	//constexpr auto DebugActorsHitDuringCameraPenetration = 0x11b8; // TArray<AActor*>
	//constexpr auto bWasInVehicle = 0x11c8; // char : 1
	//constexpr auto PreviousIgnoreActorForCameraPenetration = 0x11d0; // AActor*

	constexpr auto FOV = 0x50;
	constexpr auto CameraSpaceForwardDistance = 0x54;
	constexpr auto bClampCameraPitch = 0x58;
	constexpr auto bClampCameraYaw = 0x59;
	constexpr auto CameraPitchMin = 0x5C;
	constexpr auto CameraPitchMax = 0x60;
	constexpr auto CameraYawMin = 0x64;
	constexpr auto CameraYawMax = 0x68;
	constexpr auto CameraOrigin = 0x6C;
	constexpr auto CameraOriginSocketName = 0x70;
	constexpr auto CameraOriginInterpSpeed = 0x78;
	constexpr auto CameraLocationErrorConstraintBox = 0x90;
	constexpr auto ViewTargetSpaceViewOffset = 0xC8;
	constexpr auto ViewTargetSpaceViewOffset_Crouch = 0xD8;
	constexpr auto ViewTargetSpaceViewOffseInterpSpeed = 0xE8;
	constexpr auto CameraSpaceViewOffset = 0x100;
	constexpr auto ViewTargetAlignmentFlipInterpDuration = 0x110;
	constexpr auto bScaleViewOffsetByViewTargetScale = 0x114;
	constexpr auto bSupportsShoulderSwap = 0x115;
	constexpr auto LastCameraOrigin = 0x178;
	constexpr auto CameraOriginLocalOffset = 0x190;
	constexpr auto PenetrationBlendInTime = 0x1A8;
	constexpr auto PenetrationBlendOutTime = 0x1AC;
	constexpr auto bPreventPenetration = 0x1B0;
	constexpr auto bDoPredictiveAvoidance = 0x1B1;
	constexpr auto CollisionPushOutDistance = 0x1B4;
	constexpr auto HidePawnPenetrationPercent = 0x1B8;
	constexpr auto LastAttachSocketName = 0x220;
	constexpr auto LastBasePOV = 0x230;
	constexpr auto DeltaBasePOV = 0x9A0;
	constexpr auto BlendAlpha = 0x1110;
	constexpr auto PenetrationAvoidanceFeelers = 0x1128;
	constexpr auto SafeLocToAimLineBlockedPct = 0x1138;
	constexpr auto AimLineToDesiredPosBlockedPct = 0x113C;
	constexpr auto LastDrawDebugTime = 0x1140;
	constexpr auto LastViewTargetSpaceViewOffset = 0x1148;
	constexpr auto LastViewTargetAlignmentUp = 0x1160;
	constexpr auto ViewTargetAlignmentFlipInterpTime = 0x1178;
	constexpr auto LastCameraPivot = 0x1180;
	constexpr auto CachedPitchLimitMin = 0x1198;
	constexpr auto CachedPitchLimitMax = 0x119C;
	constexpr auto CachedYawLimitMin = 0x11A0;
	constexpr auto CachedYawLimitMax = 0x11A4;
	constexpr auto bLastViewTargetValidGroupEmoteLookTarget = 0x11A8;
	constexpr auto IgnoreActorForCameraPenetration = 0x11B0;
	constexpr auto DebugActorsHitDuringCameraPenetration = 0x11B8;
	constexpr auto bWasInVehicle = 0x11C8;
	constexpr auto PreviousIgnoreActorForCameraPenetration = 0x11D0;


}


namespace FortVehicleConfigs {


	//constexpr auto NumWheelsTouchingGroundForWheelsOnGround = 0x28; // int32_t
	//constexpr auto TimeToIdleBrake = 0x2c; // float
	//constexpr auto ChangeDirBrakeDelta = 0x30; // float
	//constexpr auto VehicleSleepCounter = 0x34; // float
	//constexpr auto GasPedalDownMinSpeed = 0x38; // float
	//constexpr auto AcceleratingSpeedThresholdMin = 0x3c; // float
	//constexpr auto AcceleratingSpeedThresholdMax = 0x40; // float
	//constexpr auto VehicleMinFOV = 0x44; // float
	//constexpr auto VehicleMaxFOV = 0x48; // float
	//constexpr auto VehicleMinFOVSpeed = 0x4c; // float
	//constexpr auto VehicleMaxFOVSpeed = 0x50; // float
	//constexpr auto VehicleFOVInterpSpeed = 0x54; // float
	//constexpr auto VehicleFOVPassengerInterpSpeed = 0x58; // float
	//constexpr auto CameraSpaceForwardDistanceOverride = 0x5c; // float
	//constexpr auto DriverCameraShakeClass = 0x60; // UMatineeCameraShake*
	//constexpr auto OffroadCamShakeClass = 0x68; // UMatineeCameraShake*
	//constexpr auto OffroadCameraShakeOscillationYAmplitude = 0x70; // float
	//constexpr auto OffroadCameraShakeOscillationZAmplitude = 0x74; // float
	//constexpr auto OffroadCameraShakeMaxVehicleSpeed = 0x78; // float
	//constexpr auto OffroadCameraShakeOscillationRotationAmplitude = 0x7c; // float
	//constexpr auto OffroadCameraShakeOscillationMinFrequency = 0x80; // float
	//constexpr auto OffroadCameraShakeOscillationMaxFrequency = 0x84; // float
	//constexpr auto AcceleratingCamShakeClass = 0x88; // UMatineeCameraShake*
	//constexpr auto AcceleratingMaxSpeedForCameraShakeIntensity = 0x90; // float
	//constexpr auto AcceleratingMaxCameraShakeIntensity = 0x94; // float
	//constexpr auto AcceleratingCameraShakeIntensityFalloff = 0x98; // float
	//constexpr auto AcceleratingForceFeedbackDuration = 0x9c; // float
	//constexpr auto bAcceleratingAffectsLeftLarge = 0xa0; // bool
	//constexpr auto bAcceleratingAffectsLeftSmall = 0xa1; // bool
	//constexpr auto bAcceleratingAffectsRightLarge = 0xa2; // bool
	//constexpr auto bAcceleratingAffectsRightSmall = 0xa3; // bool
	//constexpr auto AcceleratingMaxSpeedForForceFeedbackIntensity = 0xa4; // float
	//constexpr auto AcceleratingMaxForceFeedbackIntensity = 0xa8; // float
	//constexpr auto AcceleratingForceFeedbackIntensityFalloff = 0xac; // float
	//constexpr auto InteractDistanceScalar = 0xb0; // float
	//constexpr auto MinFallDamageHeight = 0xb4; // float
	//constexpr auto MaxFallDamageHeight = 0xb8; // float
	//constexpr auto MinFallDamage = 0xbc; // float
	//constexpr auto MaxFallDamage = 0xc0; // float
	//constexpr auto PlayerFallDamageMultiplier = 0xc4; // float
	//constexpr auto bDamageFriendlyVehicles = 0xc8; // bool
	//constexpr auto bDamageOtherVehicles = 0xc9; // bool
	//constexpr auto bDamageOwnVehicle = 0xca; // bool
	//constexpr auto bDamageAllowedFromOtherVehicle = 0xcb; // bool
	//constexpr auto VehicleEjectCooldown = 0xcc; // float
	//constexpr auto PlayerToSocketSweepRadius = 0xd0; // float
	//constexpr auto VehicleGravity = 0xd4; // float
	//constexpr auto PlayerGravityMultiplier = 0xd8; // float
	//constexpr auto PassengerDamageOnDestruction = 0xdc; // float
	//constexpr auto MinFallDamageNormalScale = 0xe0; // float
	//constexpr auto DriverExitLaunchScalar = 0xe4; // float
	//constexpr auto DriverExitLaunchUpScalar = 0xe8; // float
	//constexpr auto DriverExitInAirLaunchScalar = 0xec; // float
	//constexpr auto DriverExitInAirLaunchUpScalar = 0xf0; // float
	//constexpr auto PassengerExitLaunchScalar = 0xf4; // float
	//constexpr auto PassengerExitLaunchUpScalar = 0xf8; // float
	//constexpr auto PassengerExitInAirLaunchScalar = 0xfc; // float
	//constexpr auto PassengerExitInAirLaunchUpScalar = 0x100; // float
	//constexpr auto bCanDoTricks = 0x104; // bool
	//constexpr auto bShouldDriverHaveReticle = 0x105; // bool
	//constexpr auto bSupportsWraps = 0x106; // bool
	//constexpr auto ExitVehicleCoolDown = 0x108; // float
	//constexpr auto bShouldProtectFromFireDamage = 0x10c; // bool
	//constexpr auto bInheritScale = 0x10d; // bool
	//constexpr auto HoldToExitTime = 0x110; // float
	//constexpr auto ForceExitZOffset = 0x114; // float
	//constexpr auto bBlockBuilding = 0x118; // bool
	//constexpr auto bPreferDriverSeatWhenEmpty = 0x119; // bool
	//constexpr auto bCanUseSkeletalMeshSimulationUpdatesChildTransforms = 0x11a; // bool
	//constexpr auto FireDamagePerSecond = 0x11c; // float
	//constexpr auto FireDamageTickRate = 0x120; // float
	//constexpr auto bCanBeOnFire = 0x124; // bool
	//constexpr auto DamageableParts = 0x128; // TArray<FVehicleDamageablePartConfig>
	//constexpr auto ToggleablePartNames = 0x138; // TArray<FName>
	//constexpr auto WeaponDynamicReticleData = 0x148; // TArray<FVehicleWeaponReticle3DConfig>
	//constexpr auto UnoccupiedAutoDestroyTime = 0x158; // FScalableFloat
	//constexpr auto HUDTopSpeed = 0x180; // float
	//constexpr auto PlayerFacingName = 0x188; // FString
	//constexpr auto WheelRotationRange = 0x198; // float
	//constexpr auto VehicleFrontLowLateralFrictionMultiplier = 0x19c; // float
	//constexpr auto VehicleRearLowLateralFrictionMultiplier = 0x1a0; // float
	//constexpr auto VehicleFrontHighLateralFrictionMultiplier = 0x1a4; // float
	//constexpr auto VehicleRearHighLateralFrictionMultiplier = 0x1a8; // float
	//constexpr auto LowToHighFrictionDuration = 0x1ac; // float
	//constexpr auto UphillIncline = 0x1b0; // float
	//constexpr auto ReverseToForwardFrontFriction = 0x1b4; // float
	//constexpr auto ReverseToForwardRearFriction = 0x1b8; // float
	//constexpr auto ReverseToForwardMaxSpeed = 0x1bc; // float
	//constexpr auto TireModDataMapping = 0x1c0; // TMap<FGameplayTag, FTireInfo>
	//constexpr auto HonkTimeMax = 0x210; // float
	//constexpr auto HonkCooldownMax = 0x214; // float
	//constexpr auto HonkTimePerHonk = 0x218; // float
	//constexpr auto ServerExtraHealth = 0x21c; // float
	//constexpr auto MaxTimeZeroHealth = 0x220; // float
	//constexpr auto MaxTimeExplosion = 0x224; // float
	//constexpr auto SelfDestructTime = 0x228; // float
	//constexpr auto MaxTimeSelfDestructCleanup = 0x22c; // float

constexpr auto NumWheelsTouchingGroundForWheelsOnGround = 0x28;
constexpr auto TimeToIdleBrake = 0x2C;
constexpr auto ChangeDirBrakeDelta = 0x30;
constexpr auto VehicleSleepCounter = 0x34;
constexpr auto GasPedalDownMinSpeed = 0x38;
constexpr auto AcceleratingSpeedThresholdMin = 0x3C;
constexpr auto AcceleratingSpeedThresholdMax = 0x40;
constexpr auto VehicleMinFOV = 0x44;
constexpr auto VehicleMaxFOV = 0x48;
constexpr auto VehicleMinFOVSpeed = 0x4C;
constexpr auto VehicleMaxFOVSpeed = 0x50;
constexpr auto VehicleFOVInterpSpeed = 0x54;
constexpr auto VehicleFOVPassengerInterpSpeed = 0x58;
constexpr auto CameraSpaceForwardDistanceOverride = 0x5C;
constexpr auto DriverCameraShakeClass = 0x60;
constexpr auto OffroadCamShakeClass = 0x68;
constexpr auto OffroadCameraShakeOscillationYAmplitude = 0x70;
constexpr auto OffroadCameraShakeOscillationZAmplitude = 0x74;
constexpr auto OffroadCameraShakeMaxVehicleSpeed = 0x78;
constexpr auto OffroadCameraShakeOscillationRotationAmplitude = 0x7C;
constexpr auto OffroadCameraShakeOscillationMinFrequency = 0x80;
constexpr auto OffroadCameraShakeOscillationMaxFrequency = 0x84;
constexpr auto AcceleratingCamShakeClass = 0x88;
constexpr auto AcceleratingMaxSpeedForCameraShakeIntensity = 0x90;
constexpr auto AcceleratingMaxCameraShakeIntensity = 0x94;
constexpr auto AcceleratingCameraShakeIntensityFalloff = 0x98;
constexpr auto AcceleratingForceFeedbackDuration = 0x9C;
constexpr auto bAcceleratingAffectsLeftLarge = 0xA0;
constexpr auto bAcceleratingAffectsLeftSmall = 0xA1;
constexpr auto bAcceleratingAffectsRightLarge = 0xA2;
constexpr auto bAcceleratingAffectsRightSmall = 0xA3;
constexpr auto AcceleratingMaxSpeedForForceFeedbackIntensity = 0xA4;
constexpr auto AcceleratingMaxForceFeedbackIntensity = 0xA8;
constexpr auto AcceleratingForceFeedbackIntensityFalloff = 0xAC;
constexpr auto InteractDistanceScalar = 0xB0;
constexpr auto MinFallDamageHeight = 0xB4;
constexpr auto MaxFallDamageHeight = 0xB8;
constexpr auto MinFallDamage = 0xBC;
constexpr auto MaxFallDamage = 0xC0;
constexpr auto PlayerFallDamageMultiplier = 0xC4;
constexpr auto bDamageFriendlyVehicles = 0xC8;
constexpr auto bDamageOtherVehicles = 0xC9;
constexpr auto bDamageOwnVehicle = 0xCA;
constexpr auto bDamageAllowedFromOtherVehicle = 0xCB;
constexpr auto VehicleEjectCooldown = 0xCC;
constexpr auto PlayerToSocketSweepRadius = 0xD0;
constexpr auto VehicleGravity = 0xD4;
constexpr auto PlayerGravityMultiplier = 0xD8;
constexpr auto PassengerDamageOnDestruction = 0xDC;
constexpr auto MinFallDamageNormalScale = 0xE0;
constexpr auto DriverExitLaunchScalar = 0xE4;
constexpr auto DriverExitLaunchUpScalar = 0xE8;
constexpr auto DriverExitInAirLaunchScalar = 0xEC;
constexpr auto DriverExitInAirLaunchUpScalar = 0xF0;
constexpr auto PassengerExitLaunchScalar = 0xF4;
constexpr auto PassengerExitLaunchUpScalar = 0xF8;
constexpr auto PassengerExitInAirLaunchScalar = 0xFC;
constexpr auto PassengerExitInAirLaunchUpScalar = 0x100;
constexpr auto bCanDoTricks = 0x104;
constexpr auto bShouldDriverHaveReticle = 0x105;
constexpr auto bSupportsWraps = 0x106;
constexpr auto ExitVehicleCoolDown = 0x108;
constexpr auto bShouldProtectFromFireDamage = 0x10C;
constexpr auto bInheritScale = 0x10D;
constexpr auto HoldToExitTime = 0x110;
constexpr auto ForceExitZOffset = 0x114;
constexpr auto bBlockBuilding = 0x118;
constexpr auto bPreferDriverSeatWhenEmpty = 0x119;
constexpr auto bCanUseSkeletalMeshSimulationUpdatesChildTransforms = 0x11A;
constexpr auto FireDamagePerSecond = 0x11C;
constexpr auto FireDamageTickRate = 0x120;
constexpr auto bCanBeOnFire = 0x124;
constexpr auto DamageableParts = 0x128;
constexpr auto ToggleablePartNames = 0x138;
constexpr auto WeaponDynamicReticleData = 0x148;
constexpr auto UnoccupiedAutoDestroyTime = 0x158;
constexpr auto HUDTopSpeed = 0x180;
constexpr auto PlayerFacingName = 0x188;
constexpr auto WheelRotationRange = 0x198;
constexpr auto VehicleFrontLowLateralFrictionMultiplier = 0x19C;
constexpr auto VehicleRearLowLateralFrictionMultiplier = 0x1A0;
constexpr auto VehicleFrontHighLateralFrictionMultiplier = 0x1A4;
constexpr auto VehicleRearHighLateralFrictionMultiplier = 0x1A8;
constexpr auto LowToHighFrictionDuration = 0x1AC;
constexpr auto UphillIncline = 0x1B0;
constexpr auto ReverseToForwardFrontFriction = 0x1B4;
constexpr auto ReverseToForwardRearFriction = 0x1B8;
constexpr auto ReverseToForwardMaxSpeed = 0x1BC;
constexpr auto TireModDataMapping = 0x1C0;
constexpr auto HonkTimeMax = 0x210;
constexpr auto HonkCooldownMax = 0x214;
constexpr auto HonkTimePerHonk = 0x218;
constexpr auto ServerExtraHealth = 0x21C;
constexpr auto MaxTimeZeroHealth = 0x220;
constexpr auto MaxTimeExplosion = 0x224;
constexpr auto SelfDestructTime = 0x228;
constexpr auto MaxTimeSelfDestructCleanup = 0x22C;

}

namespace Character {


	//constexpr auto Mesh = 0x300; // USkeletalMeshComponent*
	//constexpr auto CharacterMovement = 0x308; // UCharacterMovementComponent*
	//constexpr auto CapsuleComponent = 0x310; // UCapsuleComponent*
	//constexpr auto BasedMovement = 0x318; // FBasedMovementInfo
	//constexpr auto ReplicatedBasedMovement = 0x360; // FBasedMovementInfo
	//constexpr auto AnimRootMotionTranslationScale = 0x3a8; // float
	//constexpr auto BaseTranslationOffset = 0x3b0; // FVector
	//constexpr auto BaseRotationOffset = 0x3d0; // FQuat
	//constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x3f0; // float
	//constexpr auto ReplayLastTransformUpdateTimeStamp = 0x3f4; // float
	//constexpr auto ReplicatedMovementMode = 0x3f8; // char
	//constexpr auto bInBaseReplication = 0x3f9; // bool
	//constexpr auto CrouchedEyeHeight = 0x3fc; // float
	//constexpr auto bClientWasFalling = 0x400; // char : 1
	//constexpr auto bSimGravityDisabled = 0x400; // char : 1
	//constexpr auto bClientResimulateRootMotion = 0x400; // char : 1
	//constexpr auto bClientResimulateRootMotionSources = 0x400; // char : 1
	//constexpr auto bClientUpdating = 0x400; // char : 1
	//constexpr auto bPressedJump = 0x400; // char : 1
	//constexpr auto bProxyIsJumpForceApplied = 0x400; // char : 1
	//constexpr auto bIsCrouched = 0x400; // char : 1
	//constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x401; // char : 1
	//constexpr auto bServerMoveIgnoreRootMotion = 0x401; // char : 1
	//constexpr auto bWasJumping = 0x401; // char : 1
	//constexpr auto JumpKeyHoldTime = 0x404; // float
	//constexpr auto JumpForceTimeRemaining = 0x408; // float
	//constexpr auto ProxyJumpForceStartedTime = 0x40c; // float
	//constexpr auto JumpMaxHoldTime = 0x410; // float
	//constexpr auto JumpMaxCount = 0x414; // int32_t
	//constexpr auto JumpCurrentCount = 0x418; // int32_t
	//constexpr auto JumpCurrentCountPreJump = 0x41c; // int32_t
	//constexpr auto OnReachedJumpApex = 0x428; // FMulticastInlineDelegate
	//constexpr auto MovementModeChangedDelegate = 0x448; // FMulticastInlineDelegate
	//constexpr auto OnCharacterMovementUpdated = 0x458; // FMulticastInlineDelegate
	//constexpr auto SavedRootMotion = 0x468; // FRootMotionSourceGroup
	//constexpr auto ClientRootMotionParams = 0x4b0; // FRootMotionMovementParams
	//constexpr auto RootMotionRepMoves = 0x520; // TArray<FSimulatedRootMotionReplicatedMove>
	//constexpr auto RepRootMotion = 0x530; // FRepRootMotionMontage

	constexpr auto Mesh = 0x2F0;
	constexpr auto CharacterMovement = 0x2F8;
	constexpr auto CapsuleComponent = 0x300;
	constexpr auto BasedMovement = 0x308;
	constexpr auto ReplicatedBasedMovement = 0x350;
	constexpr auto AnimRootMotionTranslationScale = 0x398;
	constexpr auto BaseTranslationOffset = 0x3A0;
	constexpr auto BaseRotationOffset = 0x3C0;
	constexpr auto ReplicatedServerLastTransformUpdateTimeStamp = 0x3E0;
	constexpr auto ReplayLastTransformUpdateTimeStamp = 0x3E4;
	constexpr auto ReplicatedMovementMode = 0x3E8;
	constexpr auto bInBaseReplication = 0x3E9;
	constexpr auto CrouchedEyeHeight = 0x3EC;
	constexpr auto bIsCrouched = 0x3F0;
	constexpr auto bProxyIsJumpForceApplied = 0x3F0;
	constexpr auto bPressedJump = 0x3F0;
	constexpr auto bClientUpdating = 0x3F0;
	constexpr auto bClientWasFalling = 0x3F0;
	constexpr auto bClientResimulateRootMotion = 0x3F0;
	constexpr auto bClientResimulateRootMotionSources = 0x3F0;
	constexpr auto bSimGravityDisabled = 0x3F0;
	constexpr auto bClientCheckEncroachmentOnNetUpdate = 0x3F1;
	constexpr auto bServerMoveIgnoreRootMotion = 0x3F1;
	constexpr auto bWasJumping = 0x3F1;
	constexpr auto JumpKeyHoldTime = 0x3F4;
	constexpr auto JumpForceTimeRemaining = 0x3F8;
	constexpr auto ProxyJumpForceStartedTime = 0x3FC;
	constexpr auto JumpMaxHoldTime = 0x400;
	constexpr auto JumpMaxCount = 0x404;
	constexpr auto JumpCurrentCount = 0x408;
	constexpr auto JumpCurrentCountPreJump = 0x40C;
	constexpr auto OnReachedJumpApex = 0x418;
	constexpr auto MovementModeChangedDelegate = 0x438;
	constexpr auto OnCharacterMovementUpdated = 0x448;
	constexpr auto SavedRootMotion = 0x458;
	constexpr auto ClientRootMotionParams = 0x4A0;
	constexpr auto RootMotionRepMoves = 0x510;
	constexpr auto RepRootMotion = 0x520;

}

namespace FortPawn {


	//constexpr auto bMovingEmoteForwardOnly = 0x691; // char : 1
	//constexpr auto bUseLineTestForDamageZoneBoneDetection = 0x691; // char : 1
	//constexpr auto bCanCapsuleBeUsedForTargeting = 0x691; // char : 1
	//constexpr auto bIsStaggered = 0x691; // char : 1
	//constexpr auto bMovingEmoteSkipLandingFX = 0x692; // char : 1
	//constexpr auto bIsInvulnerable = 0x692; // char : 1
	//constexpr auto bSpotted = 0x692; // char : 1
	//constexpr auto bRegisterWithAISight = 0x692; // char : 1
	//constexpr auto bRegisterWithAimAssist = 0x692; // char : 1
	//constexpr auto bPrimaryInputHeld = 0x692; // char : 1
	//constexpr auto bSecondaryInputHeld = 0x692; // char : 1
	//constexpr auto bPrimaryInputQueued = 0x692; // char : 1
	//constexpr auto bIsSwinging = 0x693; // char : 1
	//constexpr auto bIsSynchedAction = 0x693; // char : 1
	//constexpr auto bSwingingAttached = 0x693; // char : 1
	//constexpr auto bIsSliding = 0x693; // char : 1
	//constexpr auto bIsInGoop = 0x693; // char : 1
	//constexpr auto bWeaponActivated = 0x693; // char : 1
	//constexpr auto bReplicatedIsInGoop = 0x693; // char : 1
	//constexpr auto SwingAttachLocation = 0x698; // FVector
	//constexpr auto SwingAttachLocationUpdateDistanceThreshold = 0x6b0; // float
	//constexpr auto SynchedActionLocation = 0x6b8; // FVector
	//constexpr auto SynchedActionRotator = 0x6d0; // FRotator
	//constexpr auto bSkipAnalogJump = 0x6e8; // char : 1
	//constexpr auto FootstepTraceTypeQuery = 0x6e9; // ETraceTypeQuery
	//constexpr auto FootstepSurfaceType = 0x6ea; // EFortFootstepSurfaceType
	//constexpr auto SoundIndicatorComponent = 0x6f0; // UFortSoundIndicatorComponent*
	//constexpr auto UroShiftBucket = 0x700; // EUpdateRateShiftBucket
	//constexpr auto bWeaponHolstered = 0x701; // char : 1
	//constexpr auto bPrioritizePawnCollisionsOnAbilityTargetSelectionVisibilityTest = 0x701; // char : 1
	//constexpr auto bSkipReticleColorTrace = 0x701; // char : 1
	//constexpr auto bPostProcessNavLocation = 0x701; // char : 1
	//constexpr auto bHealthSynced = 0x701; // char : 1
	//constexpr auto bUROCanTieToLODs = 0x701; // char : 1
	//constexpr auto bUpdateMeshComponentUpdateFlagOnServer = 0x701; // char : 1
	//constexpr auto bTreatAsPawnForHitMarkers = 0x702; // char : 1
	//constexpr auto bDisplayPawnHitMarkersForChildActors = 0x702; // char : 1
	//constexpr auto bUsesStats = 0x702; // char : 1
	//constexpr auto bAllowBuildingActorTeleport = 0x702; // char : 1
	//constexpr auto bIsDBNO = 0x702; // char : 1
	//constexpr auto bWasDBNOOnDeath = 0x702; // char : 1
	//constexpr auto bCachedIsInAthena = 0x702; // char : 1
	//constexpr auto bShouldUseCharacterMovementIdleFastPath = 0x702; // char : 1
	//constexpr auto CurrentMovementStyle = 0x703; // EFortMovementStyle
	//constexpr auto ControlRecoveryBehavior = 0x704; // EFortControlRecoveryBehavior
	//constexpr auto TeleportCounter = 0x705; // char
	//constexpr auto PawnStatHandle = 0x708; // FDataTableRowHandle
	//constexpr auto SlidingFriction = 0x718; // float
	//constexpr auto SlidingBrakingDeceleration = 0x71c; // float
	//constexpr auto StormShieldComponent = 0x720; // UFortStormShieldComponent*
	//constexpr auto OnStormShieldComponentCreated = 0x728; // FMulticastInlineDelegate
	//constexpr auto PushSize = 0x738; // EFortPawnPushSize
	//constexpr auto LastSurfaceTraceTime = 0x744; // float
	//constexpr auto LastSurfaceTraceLocation = 0x748; // FVector
	//constexpr auto OnPawnJumped = 0x788; // FMulticastInlineDelegate
	//constexpr auto PawnUniqueID = 0x798; // int32_t
	//constexpr auto CurrentWeapon = 0x7a0; // AFortWeapon*
	//constexpr auto PreviousWeapon = 0x7a8; // AFortWeapon*
	//constexpr auto CurrentWeaponList = 0x7b0; // TArray<AFortWeapon*>
	//constexpr auto PreviousAbilityWeaponNameForTelemetry = 0x7c0; // FString
	//constexpr auto WeaponHandSocketName = 0x7d0; // FName
	//constexpr auto LeftHandWeaponHandSocketName = 0x7d4; // FName
	//constexpr auto SpawnSpot = 0x7d8; // AActor*
	//constexpr auto DeathTags = 0x7e0; // FGameplayTagContainer
	//constexpr auto SpawnImmunityTime = 0x800; // float
	//constexpr auto CurrentWaterBody = 0x808; // AFortWaterBodyActor*
	//constexpr auto bShouldSupportSurfaceSwimming = 0x810; // bool
	//constexpr auto ReplicatedWaterBody = 0x818; // AFortWaterBodyActor*
	//constexpr auto IncomingPickups = 0x820; // TArray<AFortPickup*>
	//constexpr auto PickupDirectionData = 0x830; // TArray<FFortPickupEntryData>
	//constexpr auto bIsStunned = 0x840; // bool
	//constexpr auto VortexParams = 0x850; // FVortexParams
	//constexpr auto bIsInVortex = 0x8d0; // char : 1
	//constexpr auto bReplicatedIsInVortex = 0x8d0; // char : 1
	//constexpr auto CurrentSkyTube = 0x8d8; // AFortSkyTube*
	//constexpr auto ReplicatedSkyTube = 0x8e0; // AFortSkyTube*
	//constexpr auto OverlappedSkyTubes = 0x8e8; // TArray<AFortSkyTube*>
	//constexpr auto bPrioritizeEarlierTubes = 0x8f8; // FScalableFloat
	//constexpr auto OnSkyTubeChanged = 0x920; // FMulticastInlineDelegate
	//constexpr auto AdditiveCringeCount = 0x930; // int32_t
	//constexpr auto AdditiveCringeDuration = 0x934; // float
	//constexpr auto bSupportsDamageNumbersAtHitLocation = 0x938; // bool
	//constexpr auto PushMomentum = 0x940; // FVector_NetQuantize
	//constexpr auto LocalSpin = 0x95c; // float
	//constexpr auto bTurnTransitionActiveAndControllingRotation = 0x961; // bool
	//constexpr auto DeathCueTag = 0x9bc; // FGameplayCueTag
	//constexpr auto DeathStatTags = 0x9c0; // TArray<FFortStatManagerTag>
	//constexpr auto DeathHitSocket = 0x9d0; // USkeletalMeshSocket*
	//constexpr auto OnPlayerStartDBNO = 0x9d8; // FMulticastInlineDelegate
	//constexpr auto OnDBNOStateChanged = 0x9e8; // FMulticastInlineDelegate
	//constexpr auto DefaultLifespanAfterDeath = 0x9f8; // float
	//constexpr auto TeamBeaconMaxDist = 0x9fc; // float
	//constexpr auto TeamBeaconTextColor = 0xa00; // FColor
	//constexpr auto LastTakeHitTimeTimeout = 0xa04; // float
	//constexpr auto LastDamagedTime = 0xa08; // float
	//constexpr auto CurrentlyAttachedWeapon = 0xa10; // AFortWeapon*
	//constexpr auto CachedNavFloor = 0xa18; // UPrimitiveComponent*
	//constexpr auto MaxFootstepDistance = 0xa20; // float
	//constexpr auto DBNOLandingSound = 0xa28; // USoundBase*
	//constexpr auto DefaultFootstepSound = 0xa30; // USoundBase*
	//constexpr auto DefaultFastFootstepSound = 0xa38; // USoundBase*
	//constexpr auto DefaultLandingSound = 0xa40; // USoundBase*
	//constexpr auto DefaultHardLandingSound = 0xa48; // USoundBase*
	//constexpr auto DefaultJumpSound = 0xa50; // USoundBase*
	//constexpr auto DefaultHitNotifyAudioBank = 0xa58; // UWeaponHitNotifyAudioBank*
	//constexpr auto DefaultSwimmingAudioBank = 0xa60; // UFortSwimmingAudioBank*
	//constexpr auto LineTestForDamageZoneBoneDetectionRadius = 0xa68; // float
	//constexpr auto DamageZones0x4 = 0xa70; // FPawnDamageZones
	//constexpr auto DamageZoneActiveBitMask = 0xad0; // char
	//constexpr auto TargettingZOffset = 0xad4; // float
	//constexpr auto JumpFlashCountPacked = 0xad8; // char
	//constexpr auto LandingFlashCountPacked = 0xad9; // char
	//constexpr auto EmoteAudioComps = 0xae0; // TMap<FName, FEmoteAudioComponentData>
	//constexpr auto FrontEndEmoteAudioAttenuation = 0xb30; // USoundAttenuation*
	//constexpr auto InGameEmoteAudioAttenuation = 0xb38; // USoundAttenuation*
	//constexpr auto InGameEmoteSoundEffectSoundPresetChain = 0xb40; // USoundEffectSourcePresetChain*
	//constexpr auto EmoteMeshComps = 0xb48; // TMap<int32_t, UMeshComponent*>
	//constexpr auto EmotePropActors = 0xb98; // TMap<int32_t, AActor*>
	//constexpr auto EmoteParticleSystemComps = 0xbe8; // TMap<int32_t, UParticleSystemComponent*>
	//constexpr auto EmoteCount = 0xc38; // int32_t
	//constexpr auto LastEmoteTime = 0xc3c; // float
	//constexpr auto LastEmoteEndTime = 0xc40; // float
	//constexpr auto LastEmoteItemDef = 0xc48; // UFortItemDefinition*
	//constexpr auto LastReplicatedEmoteExecuted = 0xc50; // UFortItemDefinition*
	//constexpr auto bFireBlockedByEmoteCooldown = 0xc58; // bool
	//constexpr auto EmoteToFireCooldownTime = 0xc5c; // float
	//constexpr auto EmoteWalkSpeed = 0xc60; // float
	//constexpr auto AdditionalModifierDefinitions = 0xc68; // TArray<UFortGameplayModifierItemDefinition*>
	//constexpr auto OnPawnTeleported = 0xc78; // FMulticastInlineDelegate
	//constexpr auto OnPawnLanded = 0xc88; // FMulticastInlineDelegate
	//constexpr auto OnPawnStartedEmote = 0xc98; // FMulticastInlineDelegate
	//constexpr auto OnPawnStoppedEmote = 0xca8; // FMulticastInlineDelegate
	//constexpr auto OnHitPawn = 0xcb8; // FMulticastInlineDelegate
	//constexpr auto OnDied = 0xcc8; // FMulticastInlineDelegate
	//constexpr auto OnDeathEffects = 0xcd8; // FMulticastInlineDelegate
	//constexpr auto OnDamaged = 0xd18; // FMulticastInlineDelegate
	//constexpr auto OnDidDamage = 0xd28; // FMulticastInlineDelegate
	//constexpr auto FootstepBank = 0xd38; // UFortFootstepAudioBank*
	//constexpr auto CachedStepSurfaceNormal = 0xd50; // FVector
	//constexpr auto FoleyFootstepContext = 0xd68; // UFortFoleyFootstepContext*
	//constexpr auto FoleyHitContext = 0xd70; // UFortFoleyHitContext*
	//constexpr auto FortFootstepComponent = 0xd78; // UFortFootstepComponent*
	//constexpr auto OnWeaponEquippedDelegate = 0xd80; // FMulticastInlineDelegate
	//constexpr auto OnWeaponUnEquippedDelegate = 0xd90; // FMulticastInlineDelegate
	//constexpr auto OnWeaponAttachmentChangedDelegate = 0xda0; // FMulticastInlineDelegate
	//constexpr auto HealthRegenDelayGameplayEffect = 0xdb0; // UGameplayEffect*
	//constexpr auto HealthRegenGameplayEffect = 0xdb8; // UGameplayEffect*
	//constexpr auto ShieldRegenDelayGameplayEffect = 0xdc0; // UGameplayEffect*
	//constexpr auto ShieldRegenGameplayEffect = 0xdc8; // UGameplayEffect*
	//constexpr auto CurrentWeaponAnimLayerOverlayClass = 0xdd0; // UAnimInstance*
	//constexpr auto OnHolsteredEvent = 0xdd8; // FMulticastInlineDelegate
	//constexpr auto OnUnholsteredEvent = 0xde8; // FMulticastInlineDelegate
	//constexpr auto WeaponHolsterCounter = 0xe10; // int32_t
	//constexpr auto WeaponHolsterIds = 0xe18; // TArray<FName>
	//constexpr auto StaySpottedTime = 0xe28; // float
	//constexpr auto SpottedEvent = 0xe2c; // FName
	//constexpr auto DefaultFeedback = 0xe30; // UFortFeedbackBank*
	//constexpr auto ActiveSoundIndicators = 0xe38; // TArray<AFortEmitterCameraLensEffectDirectional*>
	//constexpr auto DefaultSoundTrackingVisual = 0xe48; // AFortEmitterCameraLensEffectDirectional*
	//constexpr auto SoundTrackingVisibilityTags = 0xe50; // FGameplayTagContainer
	//constexpr auto PriorityModifiers = 0xe70; // TMap<EFortSoundIndicatorTypes, float>
	//constexpr auto VocalChords = 0xec0; // TArray<FFortPawnVocalChord>
	//constexpr auto bIsDisconnectedPawn = 0xf28; // bool
	//constexpr auto MaxHealthApplicationHandle = 0xf2c; // FActiveGameplayEffectHandle
	//constexpr auto MaxHealthApplicationGameplayEffect = 0xf38; // UGameplayEffect*
	//constexpr auto HealthSet = 0xf40; // UFortHealthSet*
	//constexpr auto ControlResistanceSet = 0xf48; // UFortControlResistanceSet*
	//constexpr auto DamageSet = 0xf50; // UFortDamageSet*
	//constexpr auto MovementSet = 0xf58; // UFortMovementSet*
	//constexpr auto AdvancedMovementSet = 0xf60; // UFortAdvancedMovementSet*
	//constexpr auto OnAbilityDecisionWindowStackUpdated = 0xf70; // FMulticastInlineDelegate
	//constexpr auto AbilitySystemComponent = 0xf80; // UFortAbilitySystemComponent*
	//constexpr auto DecisionWindowStack = 0xf88; // TArray<FFortActiveMontageDecisionWindow>
	//constexpr auto GameplayTags = 0xf98; // FGameplayTagContainer
	//constexpr auto DisplayName = 0xfb8; // FText
	//constexpr auto Damagers = 0xfd0; // TArray<FDamagerInfo>
	//constexpr auto DamageDone = 0xfe0; // TArray<FDamageDoneInfo>
	//constexpr auto TotalDamageDoneTrackers = 0xff0; // TArray<FDamageDoneSourceInfo>
	//constexpr auto TargetDamageDoneTrackers = 0x1000; // TArray<FDamageDoneTargetInfo>
	//constexpr auto TotalDamageTakenTrackers = 0x1010; // TArray<FDamageDoneSourceInfo>
	//constexpr auto TargetDamageTakenTrackers = 0x1020; // TArray<FDamageDoneTargetInfo>
	//constexpr auto DamageDoneLastAtTime = 0x1030; // float
	//constexpr auto DamageTakenLastAtTime = 0x1034; // float
	//constexpr auto LastHitTime = 0x1038; // float
	//constexpr auto TotalPlayerDamageDealt = 0x103c; // float
	//constexpr auto HealthBarIndicator = 0x1040; // UFortHealthBarIndicator*
	//constexpr auto CurrentCalloutTag = 0x1048; // FGameplayTag
	//constexpr auto CalloutEntries = 0x1050; // TArray<FCalloutEntry>
	//constexpr auto HealthBarWidth = 0x1060; // float
	//constexpr auto HealthBarHeightMultiplier = 0x1064; // float
	//constexpr auto SpottedBrush = 0x1070; // FSlateBrush
	//constexpr auto SpottedIconOffset = 0x1130; // FVector
	//constexpr auto ClientNonRenderedAnimUpdateRate = 0x1148; // int32_t
	//constexpr auto MaxEvalRateForInterpolation = 0x114c; // int32_t
	//constexpr auto AnimUpdateRateVisibleMaxDistanceFactor = 0x1150; // TArray<float>
	//constexpr auto LODToFrameSkipMap = 0x1160; // TMap<int32_t, int32_t>
	//constexpr auto CurrentSentence = 0x11c0; // FFortConversationSentence
	//constexpr auto OnPawnHealthChanged = 0x1298; // FMulticastInlineDelegate
	//constexpr auto OnPawnMaxOvershieldChanged = 0x12a8; // FMulticastInlineDelegate
	//constexpr auto AccumulatedBatchData_Shared = 0x12b8; // FAthenaBatchedDamageGameplayCues_Shared
	//constexpr auto AccumulatedBatchData_NonShared = 0x1330; // FAthenaBatchedDamageGameplayCues_NonShared
	//constexpr auto BatchedGameplayCueParameters = 0x1348; // FGameplayCueParameters
	//constexpr auto ReplayItemActions = 0x1418; // FGameplayTagContainer
	//constexpr auto HidingVisibilityTags = 0x1458; // FGameplayTagContainer
	//constexpr auto HidingTransitionVisibilityTags = 0x1478; // FGameplayTagContainer
	//constexpr auto PegasusTimelineCollector = 0x1498; // UPegasusGameEventCollector*
	//constexpr auto AILODComponent = 0x14a0; // UFortAthenaAILODComponent*
	//constexpr auto ClientAILODSettings = 0x14c8; // FClientAILODSettings
	//constexpr auto FallbackTag = 0x1550; // FGameplayTag
	//constexpr auto DebugType = 0x1558; // FString
	//constexpr auto RecordedGunshots = 0x1568; // TMap<uint32_t, FRecordedGunshot>
	//constexpr auto OnPawnComponentAttachedEvent = 0x15f8; // FMulticastInlineDelegate
	//constexpr auto OverlappingBuildings = 0x1620; // TArray<ABuildingActor*>

constexpr auto bUseBaseChanged = 0x680;
constexpr auto bIgnoreNextFallingDamage = 0x680;
constexpr auto bAllowDeathFromFallingDamage = 0x680;
constexpr auto bIsDying = 0x680;
constexpr auto bPlayedDying = 0x680;
constexpr auto bIsHiddenForDeath = 0x680;
constexpr auto bIsKnockedback = 0x680;
constexpr auto bIsStaggered = 0x681;
constexpr auto bCanCapsuleBeUsedForTargeting = 0x681;
constexpr auto bUseLineTestForDamageZoneBoneDetection = 0x681;
constexpr auto bMovingEmote = 0x681;
constexpr auto bMovingEmoteForwardOnly = 0x681;
constexpr auto bMovingEmoteFollowingOnly = 0x681;
constexpr auto bMovingEmoteSkipLandingFX = 0x682;
constexpr auto bIsInvulnerable = 0x682;
constexpr auto bSpotted = 0x682;
constexpr auto bRegisterWithAISight = 0x682;
constexpr auto bRegisterWithAimAssist = 0x682;
constexpr auto bPrimaryInputHeld = 0x682;
constexpr auto bSecondaryInputHeld = 0x682;
constexpr auto bPrimaryInputQueued = 0x682;
constexpr auto bWeaponActivated = 0x683;
constexpr auto bIsInGoop = 0x683;
constexpr auto bReplicatedIsInGoop = 0x683;
constexpr auto bIsSliding = 0x683;
constexpr auto bIsSwinging = 0x683;
constexpr auto bIsSynchedAction = 0x683;
constexpr auto bSwingingAttached = 0x683;
constexpr auto SwingAttachLocation = 0x688;
constexpr auto SwingAttachLocationUpdateDistanceThreshold = 0x6A0;
constexpr auto SynchedActionLocation = 0x6A8;
constexpr auto SynchedActionRotator = 0x6C0;
constexpr auto bSkipAnalogJump = 0x6D8;
constexpr auto FootstepTraceTypeQuery = 0x6D9;
constexpr auto FootstepSurfaceType = 0x6DA;
constexpr auto SoundIndicatorComponent = 0x6E0;
constexpr auto UroShiftBucket = 0x6F0;
constexpr auto bUpdateMeshComponentUpdateFlagOnServer = 0x6F1;
constexpr auto bUROCanTieToLODs = 0x6F1;
constexpr auto bPostProcessNavLocation = 0x6F1;
constexpr auto bHealthSynced = 0x6F1;
constexpr auto bWeaponHolstered = 0x6F1;
constexpr auto bSkipReticleColorTrace = 0x6F1;
constexpr auto bPrioritizePawnCollisionsOnAbilityTargetSelectionVisibilityTest = 0x6F1;
constexpr auto bTreatAsPawnForHitMarkers = 0x6F2;
constexpr auto bDisplayPawnHitMarkersForChildActors = 0x6F2;
constexpr auto bUsesStats = 0x6F2;
constexpr auto bAllowBuildingActorTeleport = 0x6F2;
constexpr auto bIsDBNO = 0x6F2;
constexpr auto bWasDBNOOnDeath = 0x6F2;
constexpr auto bCachedIsInAthena = 0x6F2;
constexpr auto bShouldUseCharacterMovementIdleFastPath = 0x6F2;
constexpr auto CurrentMovementStyle = 0x6F3;
constexpr auto ControlRecoveryBehavior = 0x6F4;
constexpr auto TeleportCounter = 0x6F5;
constexpr auto PawnStatHandle = 0x6F8;
constexpr auto SlidingFriction = 0x708;
constexpr auto SlidingBrakingDeceleration = 0x70C;
constexpr auto StormShieldComponent = 0x710;
constexpr auto OnStormShieldComponentCreated = 0x718;
constexpr auto PushSize = 0x728;
constexpr auto LastSurfaceTraceTime = 0x734;
constexpr auto LastSurfaceTraceLocation = 0x738;
constexpr auto OnPawnJumped = 0x778;
constexpr auto PawnUniqueID = 0x788;
constexpr auto CurrentWeapon = 0x790;
constexpr auto PreviousWeapon = 0x798;
constexpr auto CurrentWeaponList = 0x7A0;
constexpr auto PreviousAbilityWeaponNameForTelemetry = 0x7B0;
constexpr auto WeaponHandSocketName = 0x7C0;
constexpr auto LeftHandWeaponHandSocketName = 0x7C4;
constexpr auto SpawnSpot = 0x7C8;
constexpr auto DeathTags = 0x7D0;
constexpr auto SpawnImmunityTime = 0x7F0;
constexpr auto CurrentWaterBody = 0x7F8;
constexpr auto bShouldSupportSurfaceSwimming = 0x800;
constexpr auto ReplicatedWaterBody = 0x808;
constexpr auto IncomingPickups = 0x810;
constexpr auto PickupDirectionData = 0x820;
constexpr auto bIsStunned = 0x830;
constexpr auto VortexParams = 0x840;
constexpr auto bIsInVortex = 0x8C0;
constexpr auto bReplicatedIsInVortex = 0x8C0;
constexpr auto CurrentSkyTube = 0x8C8;
constexpr auto ReplicatedSkyTube = 0x8D0;
constexpr auto OverlappedSkyTubes = 0x8D8;
constexpr auto bPrioritizeEarlierTubes = 0x8E8;
constexpr auto OnSkyTubeChanged = 0x910;
constexpr auto AdditiveCringeCount = 0x920;
constexpr auto AdditiveCringeDuration = 0x924;
constexpr auto bSupportsDamageNumbersAtHitLocation = 0x928;
constexpr auto PushMomentum = 0x930;
constexpr auto LocalSpin = 0x94C;
constexpr auto bTurnTransitionActiveAndControllingRotation = 0x951;
constexpr auto DeathCueTag = 0x9AC;
constexpr auto DeathStatTags = 0x9B0;
constexpr auto DeathHitSocket = 0x9C0;
constexpr auto OnPlayerStartDBNO = 0x9C8;
constexpr auto OnDBNOStateChanged = 0x9D8;
constexpr auto DefaultLifespanAfterDeath = 0x9E8;
constexpr auto TeamBeaconMaxDist = 0x9EC;
constexpr auto TeamBeaconTextColor = 0x9F0;
constexpr auto LastTakeHitTimeTimeout = 0x9F4;
constexpr auto LastDamagedTime = 0x9F8;
constexpr auto CurrentlyAttachedWeapon = 0xA00;
constexpr auto CachedNavFloor = 0xA08;
constexpr auto MaxFootstepDistance = 0xA10;
constexpr auto DBNOLandingSound = 0xA18;
constexpr auto DefaultFootstepSound = 0xA20;
constexpr auto DefaultFastFootstepSound = 0xA28;
constexpr auto DefaultLandingSound = 0xA30;
constexpr auto DefaultHardLandingSound = 0xA38;
constexpr auto DefaultJumpSound = 0xA40;
constexpr auto DefaultHitNotifyAudioBank = 0xA48;
constexpr auto DefaultSwimmingAudioBank = 0xA50;
constexpr auto LineTestForDamageZoneBoneDetectionRadius = 0xA58;
constexpr auto DamageZones = 0xA60;
constexpr auto DamageZoneActiveBitMask = 0xAC0;
constexpr auto TargettingZOffset = 0xAC4;
constexpr auto JumpFlashCountPacked = 0xAC8;
constexpr auto LandingFlashCountPacked = 0xAC9;
constexpr auto EmoteAudioComps = 0xAD0;
constexpr auto FrontEndEmoteAudioAttenuation = 0xB20;
constexpr auto InGameEmoteAudioAttenuation = 0xB28;
constexpr auto InGameEmoteSoundEffectSoundPresetChain = 0xB30;
constexpr auto EmoteMeshComps = 0xB38;
constexpr auto EmotePropActors = 0xB88;
constexpr auto EmoteParticleSystemComps = 0xBD8;
constexpr auto EmoteCount = 0xC28;
constexpr auto LastEmoteTime = 0xC2C;
constexpr auto LastEmoteEndTime = 0xC30;
constexpr auto LastEmoteItemDef = 0xC38;
constexpr auto LastReplicatedEmoteExecuted = 0xC40;
constexpr auto bFireBlockedByEmoteCooldown = 0xC48;
constexpr auto EmoteToFireCooldownTime = 0xC4C;
constexpr auto EmoteWalkSpeed = 0xC50;
constexpr auto AdditionalModifierDefinitions = 0xC58;
constexpr auto OnPawnTeleported = 0xC68;
constexpr auto OnPawnLanded = 0xC78;
constexpr auto OnPawnStartedEmote = 0xC88;
constexpr auto OnPawnStoppedEmote = 0xC98;
constexpr auto OnHitPawn = 0xCA8;
constexpr auto OnDied = 0xCB8;
constexpr auto OnDeathEffects = 0xCC8;
constexpr auto OnDamaged = 0xD08;
constexpr auto OnDidDamage = 0xD18;
constexpr auto FootstepBank = 0xD28;
constexpr auto CachedStepSurfaceNormal = 0xD40;
constexpr auto FoleyFootstepContext = 0xD58;
constexpr auto FoleyHitContext = 0xD60;
constexpr auto FortFootstepComponent = 0xD68;
constexpr auto OnWeaponEquippedDelegate = 0xD70;
constexpr auto OnWeaponUnEquippedDelegate = 0xD80;
constexpr auto OnWeaponAttachmentChangedDelegate = 0xD90;
constexpr auto HealthRegenDelayGameplayEffect = 0xDA0;
constexpr auto HealthRegenGameplayEffect = 0xDA8;
constexpr auto ShieldRegenDelayGameplayEffect = 0xDB0;
constexpr auto ShieldRegenGameplayEffect = 0xDB8;
constexpr auto CurrentWeaponAnimLayerOverlayClass = 0xDC0;
constexpr auto OnHolsteredEvent = 0xDC8;
constexpr auto OnUnholsteredEvent = 0xDD8;
constexpr auto WeaponHolsterCounter = 0xE00;
constexpr auto WeaponHolsterIds = 0xE08;
constexpr auto StaySpottedTime = 0xE18;
constexpr auto SpottedEvent = 0xE1C;
constexpr auto DefaultFeedback = 0xE20;
constexpr auto ActiveSoundIndicators = 0xE28;
constexpr auto DefaultSoundTrackingVisual = 0xE38;
constexpr auto SoundTrackingVisibilityTags = 0xE40;
constexpr auto PriorityModifiers = 0xE60;
constexpr auto VocalChords = 0xEB0;
constexpr auto bIsDisconnectedPawn = 0xF18;
constexpr auto MaxHealthApplicationHandle = 0xF1C;
constexpr auto MaxHealthApplicationGameplayEffect = 0xF28;
constexpr auto HealthSet = 0xF30;
constexpr auto ControlResistanceSet = 0xF38;
constexpr auto DamageSet = 0xF40;
constexpr auto MovementSet = 0xF48;
constexpr auto AdvancedMovementSet = 0xF50;
constexpr auto OnAbilityDecisionWindowStackUpdated = 0xF60;
constexpr auto AbilitySystemComponent = 0xF70;
constexpr auto DecisionWindowStack = 0xF78;
constexpr auto GameplayTags = 0xF88;
constexpr auto DisplayName = 0xFA8;
constexpr auto Damagers = 0xFC0;
constexpr auto DamageDone = 0xFD0;
constexpr auto TotalDamageDoneTrackers = 0xFE0;
constexpr auto TargetDamageDoneTrackers = 0xFF0;
constexpr auto TotalDamageTakenTrackers = 0x1000;
constexpr auto TargetDamageTakenTrackers = 0x1010;
constexpr auto DamageDoneLastAtTime = 0x1020;
constexpr auto DamageTakenLastAtTime = 0x1024;
constexpr auto LastHitTime = 0x1028;
constexpr auto TotalPlayerDamageDealt = 0x102C;
constexpr auto HealthBarIndicator = 0x1030;
constexpr auto CurrentCalloutTag = 0x1038;
constexpr auto CalloutEntries = 0x1040;
constexpr auto HealthBarWidth = 0x1050;
constexpr auto HealthBarHeightMultiplier = 0x1054;
constexpr auto SpottedBrush = 0x1060;
constexpr auto SpottedIconOffset = 0x1120;
constexpr auto ClientNonRenderedAnimUpdateRate = 0x1138;
constexpr auto MaxEvalRateForInterpolation = 0x113C;
constexpr auto AnimUpdateRateVisibleMaxDistanceFactor = 0x1140;
constexpr auto LODToFrameSkipMap = 0x1150;
constexpr auto CurrentSentence = 0x11B0;
constexpr auto OnPawnHealthChanged = 0x1288;
constexpr auto OnPawnMaxOvershieldChanged = 0x1298;
constexpr auto AccumulatedBatchData_Shared = 0x12A8;
constexpr auto AccumulatedBatchData_NonShared = 0x1320;
constexpr auto BatchedGameplayCueParameters = 0x1338;
constexpr auto ReplayItemActions = 0x1408;
constexpr auto HidingVisibilityTags = 0x1448;
constexpr auto HidingTransitionVisibilityTags = 0x1468;
constexpr auto PegasusTimelineCollector = 0x1488;
constexpr auto AILODComponent = 0x1490;
constexpr auto ClientAILODSettings = 0x14B8;
constexpr auto FallbackTag = 0x1778;
constexpr auto DebugType = 0x1780;
constexpr auto RecordedGunshots = 0x1790;
constexpr auto OnPawnComponentAttachedEvent = 0x1820;
constexpr auto OverlappingBuildings = 0x1848;

}

namespace FortPlayerPawn {
	//constexpr auto VehicleInputStateReliable = 0x1668; // FFortAthenaVehicleInputStateReliable
	//constexpr auto bHasDisableSprintTag = 0x166a; // char : 1
	//constexpr auto bIsWaterJump = 0x166a; // char : 1
	//constexpr auto bDisableSwimSprintCancel = 0x166a; // char : 1
	//constexpr auto bIsNearSafeZoneEdge = 0x166a; // char : 1
	//constexpr auto bIsSprintJump = 0x166a; // char : 1
	//constexpr auto bIsSwimmingAnimLayerLinked = 0x166a; // char : 1
	//constexpr auto bDoSafeZoneCleanup = 0x166a; // char : 1
	//constexpr auto bPlayingSafeZoneEffects = 0x166a; // char : 1
	//constexpr auto bIsWaterSprintBoost = 0x166b; // char : 1
	//constexpr auto bIsWaterSprintBoostPending = 0x166b; // char : 1
	//constexpr auto bPlayingPassengerToPassengerAnimation = 0x166b; // char : 1
	//constexpr auto bPlayingDriverToPassengerAnimation = 0x166b; // char : 1
	//constexpr auto bIsTargeting = 0x166b; // char : 1
	//constexpr auto bIsTargetingConsumableThrow = 0x166b; // char : 1
	//constexpr auto bIsSwappingCharacterParts = 0x166c; // char : 1
	//constexpr auto bBalloonMovementActivated = 0x166c; // char : 1
	//constexpr auto bIsScriptedBot = 0x166c; // char : 1
	//constexpr auto bBuildHotfix = 0x166c; // char : 1
	//constexpr auto FortPlayerPawnLightingChannels = 0x166d; // FLightingChannels
	//constexpr auto StasisMode = 0x166f; // EFortPawnStasisMode
	//constexpr auto BuildingState = 0x1671; // EFortBuildingState
	//constexpr auto AccelerationZPack = 0x1672; // int8_t
	//constexpr auto ParachuteDirectionalSpeedMultiplierCurve = 0x1690; // UCurveFloat*
	//constexpr auto SkydivingDirectionalSpeedMultiplierCurve = 0x1698; // UCurveFloat*
	//constexpr auto BallooningDirectionalSpeedMultiplierCurve = 0x16a0; // UCurveFloat*
	//constexpr auto DirectionalSpeedMultiplierCurve = 0x16a8; // UCurveFloat*
	//constexpr auto LastCustomizationTimestamp = 0x16b0; // float
	//constexpr auto MinimumTimeBetweenSteps = 0x16b4; // float
	//constexpr auto LastStepTime = 0x16b8; // float
	//constexpr auto OnFootstepEvent = 0x16c0; // FMulticastInlineDelegate
	//constexpr auto OnPawnEnterWater = 0x16d0; // FMulticastInlineDelegate
	//constexpr auto OnPawnExitWater = 0x16e0; // FMulticastInlineDelegate
	//constexpr auto OnPawnExitSwinging = 0x1708; // FMulticastInlineDelegate
	//constexpr auto bIsInWaterVolume = 0x1718; // bool
	//constexpr auto bNotifyBlueprintWhenLandscapeTeleporting = 0x1719; // bool
	//constexpr auto CachedTeamControllingRC = 0x171a; // char
	//constexpr auto BalloonActiveCount = 0x171b; // char
	//constexpr auto bParachuteDeployFixedVerticalDistance = 0x171c; // char : 1
	//constexpr auto bIsSkydiving = 0x171d; // bool
	//constexpr auto bIsParachuteOpen = 0x171e; // bool
	//constexpr auto bIsSkydivingFromLaunchPad = 0x171f; // char : 1
	//constexpr auto bIsInSlipperyMovement = 0x171f; // char : 1
	//constexpr auto bPendingSkydiveLaunch = 0x171f; // char : 1
	//constexpr auto bIsSkydivingFromBus = 0x171f; // char : 1
	//constexpr auto bLocalIsParachuteForcedOpen = 0x171f; // char : 1
	//constexpr auto bLocalIsSkydiving = 0x171f; // char : 1
	//constexpr auto bIsParachuteForcedOpen = 0x171f; // char : 1
	//constexpr auto bIsPedestalHero = 0x1720; // char : 1
	//constexpr auto bInGliderRedeploy = 0x1720; // char : 1
	//constexpr auto bLocalInGliderRedeploy = 0x1720; // char : 1
	//constexpr auto bIsProxySimulationTimedOut = 0x1720; // char : 1
	//constexpr auto bIsSlopeSliding = 0x1720; // char : 1
	//constexpr auto bIsBelowAutoDeployTestHeight = 0x1720; // char : 1
	//constexpr auto bReplicatedIsInSlipperyMovement = 0x1720; // char : 1
	//constexpr auto bBeingRepossessed = 0x1721; // char : 1
	//constexpr auto bInitAbilitySystemComponentFromPlayerState = 0x1721; // char : 1
	//constexpr auto bStartedInteractSearch = 0x1721; // char : 1
	//constexpr auto bPawnLODDirty = 0x1721; // char : 1
	//constexpr auto bIsUsingJetpack = 0x1721; // char : 1
	//constexpr auto bIsPlayingEmote = 0x1721; // char : 1
	//constexpr auto bShowingOverdriveEffect = 0x1721; // char : 1
	//constexpr auto bIsRespawning = 0x1721; // char : 1
	//constexpr auto bCanShowDefaultSkin = 0x1722; // char : 1
	//constexpr auto bDisabledTetheringSupport = 0x1722; // char : 1
	//constexpr auto bIsInFrontEndHologram = 0x1722; // char : 1
	//constexpr auto bHasWaterParticleSystem = 0x1722; // char : 1
	//constexpr auto bInitializedPostRepPlayerState = 0x1722; // char : 1
	//constexpr auto bIsRespawningInAir = 0x1722; // char : 1
	//constexpr auto HeldObject = 0x1774; // TWeakObjectPtr<AActor>
	//constexpr auto bForceMoveRelativeToCameraRotation = 0x1790; // char : 1
	//constexpr auto bIsWaitingForEmoteInteraction = 0x1790; // char : 1
	//constexpr auto bIsEmoteLeader = 0x1790; // char : 1
	//constexpr auto bShouldSyncAnimationWithEmoteLeader = 0x1790; // char : 1
	//constexpr auto bShouldJitterAnimationSyncWithEmoteLeader = 0x1790; // char : 1
	//constexpr auto bDoubleFileEmoteSecondLine = 0x1790; // char : 1
	//constexpr auto bEmoteUsesSecondaryFire = 0x1790; // char : 1
	//constexpr auto bLockGroupEmoteLeaderRotation = 0x1790; // char : 1
	//constexpr auto GroupEmoteLookTarget = 0x1798; // AFortPlayerPawn*
	//constexpr auto GroupEmoteTailTarget = 0x17a0; // AFortPlayerPawn*
	//constexpr auto GroupEmoteFollowers = 0x17a8; // TArray<AFortPlayerPawn*>
	//constexpr auto GroupEmoteAnimOffset = 0x1814; // float
	//constexpr auto GroupEmoteLeaderRotationYawOffset = 0x1818; // float
	//constexpr auto GroupEmoteLookTargetRotationLeader = 0x1820; // FRotator
	//constexpr auto GroupEmoteMaximumZDifference = 0x1850; // float
	//constexpr auto OnGroupEmoteSyncValueChanged = 0x1858; // FMulticastInlineDelegate
	//constexpr auto OnGroupEmoteFollowerJoined = 0x1868; // FMulticastInlineDelegate
	//constexpr auto OnGroupEmoteFollowerLeft = 0x1878; // FMulticastInlineDelegate
	//constexpr auto OnGroupEmoteSecondaryFirePressed = 0x1888; // FMulticastInlineDelegate
	//constexpr auto GroupEmoteSyncValue = 0x1898; // char
	//constexpr auto GroupEmoteSoundValue = 0x1899; // char
	//constexpr auto GroupEmoteParticleValue = 0x189a; // char
	//constexpr auto TransformationMontage = 0x18a0; // UAnimMontage*
	//constexpr auto TransformationMontageStartTime = 0x18a8; // float
	//constexpr auto CurrentMontagerLeader = 0x1908; // UAnimMontage*
	//constexpr auto CurrentSyncedMontage = 0x1910; // UAnimMontage*
	//constexpr auto bCharacterPartsCastIndirectShadows = 0x1918; // char : 1
	//constexpr auto CharacterGender = 0x191a; // EFortCustomGender
	//constexpr auto CharacterBodyType = 0x191b; // EFortCustomBodyType
	//constexpr auto JumpLastActivatedTime = 0x192c; // float
	//constexpr auto PreviousPosition = 0x1930; // FVector
	//constexpr auto PreviousVelocity = 0x1948; // FVector
	//constexpr auto ReplicatedCustomMeshHeightAdjustTarget = 0x19a8; // uint16_t
	//constexpr auto UnburrowLaunchXYSpeed = 0x19ac; // float
	//constexpr auto UnburrowLaunchZSpeed = 0x19b0; // float
	//constexpr auto VehicleInputStateUnreliable = 0x19f8; // FFortAthenaVehicleInputStateUnreliable
	//constexpr auto bIsInAnyStorm = 0x1a78; // char : 1
	//constexpr auto bIsInsideSafeZone = 0x1a78; // char : 1
	//constexpr auto SafeZoneAppliedGE = 0x1a88; // UGameplayEffect*
	//constexpr auto DisableSlideGameplayEffectClass = 0x1ab8; // UGameplayEffect*
	//constexpr auto SelfReviveGameplayEffect = 0x1ac0; // UGameplayEffect*
	//constexpr auto TeammateReviveGameplayEffect = 0x1ac8; // UGameplayEffect*
	//constexpr auto SetByCallerReviveHealth = 0x1ad0; // FScalableFloat
	//constexpr auto DBNOInteractionCollisionProfile = 0x1af8; // FName
	//constexpr auto DBNOInteractionBoxExtent = 0x1b00; // FVector
	//constexpr auto DBNODeferTime = 0x1b18; // float
	//constexpr auto DBNOInteractCollisionComponent = 0x1b20; // UBoxComponent*
	//constexpr auto EventReviveTag = 0x1b28; // FGameplayTag
	//constexpr auto AggroRangeOverride = 0x1b2c; // float
	//constexpr auto SetByCallerReviveSignalInStorm = 0x1b30; // float
	//constexpr auto ArmoredInterface = 0x1b38; // TScriptInterface<IFortArmoredInterface>
	//constexpr auto LastBuildingMetadata = 0x1b48; // UBuildingEditModeMetadata*
	//constexpr auto SprintCancelTime = 0x1b58; // float
	//constexpr auto WaterSprintBoostAllowedTimer = 0x1b60; // float
	//constexpr auto bHasStartedFloating = 0x1bec; // bool
	//constexpr auto ZiplineState = 0x1bf0; // FZiplinePawnState
	//constexpr auto ZiplineJumpDampening = 0x1c30; // FCurveTableRowHandle
	//constexpr auto ZiplineJumpStrength = 0x1c40; // FCurveTableRowHandle
	//constexpr auto ZiplineJumpActivateDelay = 0x1c50; // FScalableFloat
	//constexpr auto ZiplineRentryProtectionDelay = 0x1c78; // FScalableFloat
	//constexpr auto ZiplineSocketZOffset = 0x1ca0; // float
	//constexpr auto ZiplineStateChanged = 0x1ca8; // FMulticastInlineDelegate
	//constexpr auto ZiplineSpeedFactorTarget = 0x1cb8; // float
	//constexpr auto ZiplineSpeedFactor = 0x1cbc; // float
	//constexpr auto EnableSwimSprintDiveCooldown = 0x1cc8; // FScalableFloat
	//constexpr auto SwimSprintDiveCooldown = 0x1cf0; // FScalableFloat
	//constexpr auto SwimDiveBoostTimeThreshold = 0x1d18; // FScalableFloat
	//constexpr auto ClientSwimDiveInputTime = 0x1d40; // float
	//constexpr auto bCanPredictJumpApex = 0x1d44; // bool
	//constexpr auto AbilityAITargets = 0x1d50; // TArray<AFortAIPawn*>
	//constexpr auto UnableToPerformActionMontage = 0x1d78; // UAnimMontage*
	//constexpr auto UnableToPerformActionSound = 0x1d80; // USoundBase*
	//constexpr auto MoveSoundStimulusBroadcastInterval = 0x1d88; // float
	//constexpr auto EmoteStartTime = 0x1e6c; // float
	//constexpr auto EmoteRandomNum = 0x1e70; // float
	//constexpr auto bPlayingPassengerToDriverAnimation = 0x1e88; // bool
	//constexpr auto VehicleSpeedAtTimeOfJump = 0x1ea0; // float
	//constexpr auto VehicleStateRep = 0x1ea8; // FVehiclePawnState
	//constexpr auto InteractingPCRep = 0x1ed8; // AFortPlayerControllerGameplay*
	//constexpr auto VehicleStateLocal = 0x1ee0; // FVehiclePawnState
	//constexpr auto VehicleLastTick = 0x1f10; // AActor*
	//constexpr auto OnVehicleStateChangedEvent = 0x1f30; // FMulticastInlineDelegate
	//constexpr auto TetherComponent = 0x1f40; // UFortPawnComponent_Tether*
	//constexpr auto PendingTetherLaunch = 0x1f48; // float
	//constexpr auto TetherJumpLastTime = 0x1f98; // float
	//constexpr auto bSupportsTetheredMovement = 0x1f9c; // bool
	//constexpr auto BalloonRope = 0x1fa0; // ABuildingGameplayActor*
	//constexpr auto OnPossessedProp = 0x1fa8; // FMulticastInlineDelegate
	//constexpr auto PossessedProp = 0x1fb8; // ABuildingGameplayActorPlayerPropAttachment*
	//constexpr auto SlopeCameraOffsetFrameCounter = 0x1ff0; // int64_t
	//constexpr auto SlopeCameraOffsetInterpolator = 0x1ff8; // FVectorRK4SpringInterpolator
	//constexpr auto LargeBodyTypeTargetingOffset = 0x2058; // FVector
	//constexpr auto VehicleInputComponent = 0x2158; // UInputComponent*
	//constexpr auto BluePrintPlaceAnimation = 0x2168; // UAnimMontage*
	//constexpr auto BluePrintEditAnimation = 0x2170; // UAnimMontage*
	//constexpr auto OnStartedInteractSearch = 0x2180; // FMulticastInlineDelegate
	//constexpr auto OnEndedInteractSearch = 0x2190; // FMulticastInlineDelegate
	//constexpr auto OnAttemptedInstantInteractSearch = 0x21a0; // FMulticastInlineDelegate
	//constexpr auto EmoteInteractionCollisionProfile = 0x21b0; // FName
	//constexpr auto EmoteInteractionBoxExtent = 0x21b8; // FVector
	//constexpr auto EmoteInteractCollisionComponent = 0x21d0; // UBoxComponent*
	//constexpr auto OnPartChanged = 0x21d8; // FMulticastInlineDelegate
	//constexpr auto BlueprintPaperMID = 0x2218; // UMaterialInstanceDynamic*
	//constexpr auto BlueprintPaperPulseTimeline = 0x2220; // FTimeline
	//constexpr auto AccessoryColorSwatchHandler0x7 = 0x22b0; // UCustomColorComponent*
	//constexpr auto Hero = 0x22e8; // UFortHero*
	//constexpr auto OvrHeroType = 0x22f0; // TWeakObjectPtr<UFortHeroType>
	//constexpr auto DisplayContext = 0x22f8; // EFortPawnDisplayContext
	//constexpr auto HACK_CustomPRIComponent = 0x2318; // UCustomPlayerComponent*
	//constexpr auto CharacterParts0x7 = 0x2320; // UCustomCharacterPart*
	//constexpr auto CharacterColorSwatches0x2 = 0x2358; // UCustomColorSwatch*
	//constexpr auto CharacterPartColorSwatches0x7 = 0x2368; // UCustomColorSwatch*
	//constexpr auto CharacterCharms0x4 = 0x23a0; // UAthenaCharmItemDefinition*
	//constexpr auto RequiredVariantParts = 0x23c0; // TArray<UCustomCharacterPart*>
	//constexpr auto CharacterPartSkeletalMeshComponents0x7 = 0x23d8; // USkeletalMeshComponentBudgeted*
	//constexpr auto CharacterCharmActors = 0x2410; // TArray<AFortPlayerCharm*>
	//constexpr auto CharacterPartSMHiddenRefCount0x7 = 0x2420; // int8_t
	//constexpr auto BaseCosmeticLoadout = 0x2428; // FFortAthenaLoadout
	//constexpr auto AppliedCosmeticLoadout = 0x2588; // FFortAthenaLoadout
	//constexpr auto AppliedSwaps = 0x26e8; // TArray<FFortAppliedSwapItemAndVariantData>
	//constexpr auto CosmeticLoadout = 0x2748; // FFortAthenaLoadout
	//constexpr auto ServerLoadoutChangeSync = 0x28a8; // uint32_t
	//constexpr auto bAllowClientLoadoutChangeSync = 0x28b0; // bool
	//constexpr auto OnMaterialOverrideApplied = 0x28d8; // FMulticastInlineDelegate
	//constexpr auto OnMaterialOverrideCleared = 0x28e8; // FMulticastInlineDelegate
	//constexpr auto MaterialOverrides = 0x28f8; // TArray<FFortPawnMaterialOverride>
	//constexpr auto LocalMaterialOverrides = 0x2908; // TArray<FFortPawnMaterialOverride>
	//constexpr auto MaterialOverrideStateMap = 0x2918; // TMap<USceneComponent*, FFortPawnMaterialOverrideState>
	//constexpr auto PreviousCharacterParts0x7 = 0x2968; // UCustomCharacterPart*
	//constexpr auto CharacterPartModifiers0x7 = 0x29a0; // ACustomCharacterPartModifier*
	//constexpr auto RepCharPartAnimMontageInfo = 0x29d8; // FFortCharacterPartsRepMontageInfo
	//constexpr auto ClientObservedStats = 0x29f8; // FFortClientObservedStatArray
	//constexpr auto AnimBPOverride = 0x2b48; // UAnimInstance*
	//constexpr auto OriginalAnimBP = 0x2b50; // UAnimInstance*
	//constexpr auto OnCrouchStartSound = 0x2b58; // USoundBase*
	//constexpr auto OnCrouchEndSound = 0x2b60; // USoundBase*
	//constexpr auto FootstepBankOverride = 0x2b68; // UFortFootstepAudioBank*
	//constexpr auto OriginalFootstepBank = 0x2b70; // UFortFootstepAudioBank*
	//constexpr auto CachedFootStepIndex = 0x2b78; // int32_t
	//constexpr auto AnimSetOverride = 0x2b80; // UFortWeaponAnimSet*
	//constexpr auto AnimLayersOverride = 0x2b88; // TArray<UAnimInstance*>
	//constexpr auto PreviousAnimLayersOverride = 0x2b98; // TArray<UAnimInstance*>
	//constexpr auto QueuedAutoPickups = 0x2ba8; // TArray<AFortPickup*>
	//constexpr auto IgnoreActors = 0x2bb8; // TArray<FIgnoreCollisionActor>
	//constexpr auto AutoPickupDropRepickupDelay = 0x2bd0; // FScalableFloat
	//constexpr auto CarriedObjectAttachmentSocket = 0x2c08; // FName
	//constexpr auto PickupSpeedMultiplier = 0x2c0c; // float
	//constexpr auto MiniMapIconBrush = 0x2c10; // FSlateBrush
	//constexpr auto AboveBelowMiniMapIconBrush = 0x2cd0; // FSlateBrush
	//constexpr auto FarOffMiniMapIconBrush = 0x2d90; // FSlateBrush
	//constexpr auto DBNOMiniMapIconBrush = 0x2e50; // FSlateBrush
	//constexpr auto MinimapIconColorSelf = 0x2f10; // FLinearColor
	//constexpr auto MinimapIconColorTeammate = 0x2f20; // FLinearColor
	//constexpr auto MinimapIconColorEnemy = 0x2f30; // FLinearColor
	//constexpr auto MaxIndicatorVisibilityDistForEnemies = 0x2f40; // float
	//constexpr auto MaxIndicatorVisibilityDistForAllies = 0x2f44; // float
	//constexpr auto DBNOHoisterData = 0x2fc8; // FFortDBNOCarryHoisterData
	//constexpr auto DBNOHoistee = 0x2fd8; // AFortPlayerPawn*
	//constexpr auto DBNOHoisterAnimSet = 0x2fe0; // UFortWeaponAnimSet*
	//constexpr auto DBNOHoisteeAnimClass = 0x2fe8; // UAnimInstance*
	//constexpr auto ThrowCarriedPlayerStrengthXY = 0x2ff0; // float
	//constexpr auto ThrowCarriedPlayerStrengthZ = 0x2ff4; // float
	//constexpr auto DropCarriedPlayerForwardOffset = 0x2ff8; // float
	//constexpr auto DropCarriedPlayerHeightOffset = 0x2ffc; // float
	//constexpr auto DropCarriedPlayerTraceHeight = 0x3000; // float
	//constexpr auto bAllowDBNOCarry = 0x3004; // bool
	//constexpr auto bAllowDBNOCarryEnemies = 0x3005; // bool
	//constexpr auto bIsBeingDBNOCarried = 0x3006; // bool
	//constexpr auto bIsDBNOCarrying = 0x3007; // bool
	//constexpr auto bRequestedThrowCarriedPlayer = 0x3008; // bool
	//constexpr auto PackedReplicatedSlopeAngles = 0x3018; // uint16_t
	//constexpr auto OnDBNOHoisterChangedDelegate = 0x3020; // FMulticastInlineDelegate
	//constexpr auto OnRevivedFromDBNODelegate = 0x3030; // FMulticastInlineDelegate
	//constexpr auto OnNewPlayerState = 0x3040; // FMulticastInlineDelegate
	//constexpr auto OnAbilitySystemComponentInitialized = 0x3050; // FMulticastInlineDelegate
	//constexpr auto OnPreInvalidateAbilitySystemComponent = 0x3060; // FMulticastInlineDelegate
	//constexpr auto OnFinishedCharacterCustomization = 0x3090; // FMulticastInlineDelegate
	//constexpr auto OnCrouchInputJustPressed = 0x30a0; // FMulticastInlineDelegate
	//constexpr auto CustomizationAssetLoader = 0x30b0; // UFortCustomizationAssetLoader*
	//constexpr auto bEnableUpdateCharacterCustomizationPostLoad = 0x30f0; // bool
	//constexpr auto SpawnParticles = 0x3100; // UParticleSystem*
	//constexpr auto SpawnSound = 0x3108; // USoundBase*
	//constexpr auto bIsLocalPlayer = 0x3114; // char : 1
	//constexpr auto bDamagedEnemy = 0x311c; // char : 1
	//constexpr auto OnDamageComboIncrement = 0x3138; // FMulticastInlineDelegate
	//constexpr auto OnDamageComboReset = 0x3148; // FMulticastInlineDelegate
	//constexpr auto PlayerStatus = 0x3160; // uint32_t
	//constexpr auto AccelerationPack = 0x3164; // uint16_t
	//constexpr auto RepAnimMontageInfo = 0x3168; // FGameplayAbilityRepAnimMontage
	//constexpr auto RepAnimMontageStartSection = 0x31a0; // int32_t
	//constexpr auto bNetMovementPrioritized = 0x31a4; // char : 1
	//constexpr auto LandingMontagePair = 0x31a8; // FReplicatedMontagePair
	//constexpr auto PriorVariantData = 0x31c8; // FPreviouslyAppliedVariantData
	//constexpr auto TempWeaponsStack = 0x3250; // TArray<UFortWorldItemDefinition*>
	//constexpr auto RootMotionInterruptNotifyStack = 0x3260; // TArray<UFortAnimNotifyState_RootMotionInterrupt*>
	//constexpr auto RootMotionInterruptMontageStack = 0x3270; // TArray<UAnimMontage*>
	//constexpr auto VisibilityComponent = 0x32b8; // UFortVisibilityComponent*
	//constexpr auto BlendablesPostProcessComp = 0x32c0; // UPostProcessComponent*
	//constexpr auto bUseControllerRotationYawToRestore = 0x32cc; // char : 1
	//constexpr auto OnBeginSkydivingEvent = 0x32d0; // FMulticastInlineDelegate
	//constexpr auto OnEndSkydivingEvent = 0x32e0; // FMulticastInlineDelegate
	//constexpr auto OnBeginParachuteMovementEvent = 0x32f0; // FMulticastInlineDelegate
	//constexpr auto OnParachuteSpawned = 0x3300; // FMulticastInlineDelegate
	//constexpr auto OnEndParachuteMovementEvent = 0x3310; // FMulticastInlineDelegate
	//constexpr auto OnBallooningGravityCeilingChanged = 0x3320; // FMulticastInlineDelegate
	//constexpr auto OnEnteredAircraft = 0x3330; // FMulticastInlineDelegate
	//constexpr auto OnPawnPossessed = 0x3340; // FMulticastInlineDelegate
	//constexpr auto OnPawnUnpossessed = 0x3350; // FMulticastInlineDelegate
	//constexpr auto OnEmoteInteracted = 0x3360; // FMulticastInlineDelegate
	//constexpr auto OnSafeZoneOccupancyChangedEvent = 0x3370; // FMulticastInlineDelegate
	//constexpr auto OnHeldObjectPickedUp = 0x3380; // FMulticastInlineDelegate
	//constexpr auto OnHeldObjectDropped = 0x3390; // FMulticastInlineDelegate
	//constexpr auto CustomMovementIndicators = 0x33a0; // TMap<EFortCustomMovement, UTexture*>
	//constexpr auto CurrentGliderOpenSound = 0x3400; // USoundBase*
	//constexpr auto CurrentGliderOpenAudioComponent = 0x3408; // TWeakObjectPtr<UAudioComponent>
	//constexpr auto CurrentGliderCloseSound = 0x3410; // USoundBase*
	//constexpr auto CurrentGliderCloseAudioComponent = 0x3418; // TWeakObjectPtr<UAudioComponent>
	//constexpr auto bParachuteLockedOpen = 0x342c; // bool
	//constexpr auto bLocalParachuteLockedOpen = 0x342d; // bool
	//constexpr auto AttachmentMesh = 0x3430; // FRepFortMeshAttachment
	//constexpr auto AttachmentMeshComponent = 0x3440; // USkeletalMeshComponentBudgeted*
	//constexpr auto BotScriptedBehavior = 0x3448; // UFortPawnScriptedBehavior*
	//constexpr auto IgnoredWaterBodies = 0x3468; // TArray<AFortWaterBodyActor*>
	//constexpr auto UnderwaterDamageComponent = 0x3478; // UFortUnderwaterDamageComponent*
	//constexpr auto SlipperySlopeParams = 0x3480; // FSlipperySlopeParams
	//constexpr auto GliderClass = 0x3638; // UAthenaGliderItemDefinition*
	//constexpr auto PetState = 0x3650; // AFortPlayerPetRepState*
	//constexpr auto CosmeticPetInstance = 0x3658; // AFortPlayerPet*
	//constexpr auto GliderSpawnComponent = 0x3670; // UFortGliderSpawnComponent*
	//constexpr auto ParachuteAttachment = 0x3678; // AFortPlayerParachute*
	//constexpr auto GliderOverrideStack = 0x3688; // TArray<UAthenaGliderItemDefinition*>
	//constexpr auto bResetGliderOverrideOnLanding = 0x36a8; // bool
	//constexpr auto ParachuteDeployTraceForGroundDistance = 0x36b0; // FScalableFloat
	//constexpr auto LaunchPadParachuteDeployTraceForGroundDistance = 0x36d8; // FScalableFloat
	//constexpr auto LaunchPadParachuteDeployTraceForDownwardSpeed = 0x3700; // FScalableFloat
	//constexpr auto ParachuteDeployVelocityBlend = 0x3728; // FScalableFloat
	//constexpr auto ParachuteCooldownToOpen = 0x3750; // float
	//constexpr auto ParachuteCooldownToClose = 0x3754; // float
	//constexpr auto GliderRedeployAllowedRow = 0x3758; // FScalableFloat
	//constexpr auto GliderRedeployLateralVelocityMultiplierRow = 0x3780; // FScalableFloat
	//constexpr auto GliderRedeployHeighLimitRow = 0x37a8; // FScalableFloat
	//constexpr auto BalloonFallDamageThresholdVelocityZ = 0x37d0; // FScalableFloat
	//constexpr auto PreDrivingAnimBP = 0x37f8; // UAnimInstance*
	//constexpr auto CurrentVehicleAnimLayerOverlayClass = 0x3800; // UAnimInstance*
	//constexpr auto CurrentSwimmingAnimLayerOverlayClass = 0x3808; // UAnimInstance*
	//constexpr auto DefaultSwimmingAnimLayerOverlayClass = 0x3810; // UAnimInstance*
	//constexpr auto TimeBeforeSwimmingLayerDeactivated = 0x3820; // float
	//constexpr auto LinkedAnimGraphComponent = 0x3828; // UFortLinkedAnimGraphComponent*
	//constexpr auto ParachuteAudioLoop = 0x3830; // UAudioComponent*
	//constexpr auto ParachuteAndSkydiveAudioFadeInTime = 0x3838; // float
	//constexpr auto ParachuteAndSkydiveAudioFadeOutTime = 0x383c; // float
	//constexpr auto SkydiveAudioLoop = 0x3840; // UAudioComponent*
	//constexpr auto SoundOnParachuteForcedOpen = 0x3848; // USoundBase*
	//constexpr auto SkydivingLoop1P = 0x3850; // USoundBase*
	//constexpr auto SkydivingLoop3P = 0x3858; // USoundBase*
	//constexpr auto ParachuteOpenLoop1P = 0x3860; // USoundBase*
	//constexpr auto ParachuteOpenLoop3P = 0x3868; // USoundBase*
	//constexpr auto SwimmingAudioLoop = 0x3870; // UAudioComponent*
	//constexpr auto SwimmingAudioFadeOutTime = 0x3878; // float
	//constexpr auto SwimmingAudioInterpSpeed = 0x387c; // float
	//constexpr auto SoundOnSwimmingLoop = 0x3880; // USoundBase*
	//constexpr auto RemoteViewData32 = 0x38d8; // uint32_t
	//constexpr auto LastQuickBarSwitchRequestTime = 0x38f0; // float
	//constexpr auto CrouchStartTime = 0x38f4; // float
	//constexpr auto CrouchEndTime = 0x38f8; // float
	//constexpr auto CrouchLerpTime = 0x38fc; // float
	//constexpr auto MeleeAbilityCooldown = 0x3900; // float
	//constexpr auto bDisallowInterrogation = 0x3904; // bool
	//constexpr auto bDisallowInterrogationOnNPC = 0x3905; // bool
	//constexpr auto bDisallowInterrogationCreative = 0x3906; // bool
	//constexpr auto bHideBodyOnDeathRequested = 0x3907; // char : 1
	//constexpr auto ControlledRCPawn = 0x3908; // TWeakObjectPtr<AFortRemoteControlledPawnAthena>
	//constexpr auto StoredControlRotation = 0x3910; // FRotator
	//constexpr auto FacialTypeOverride = 0x392c; // EFortFacialAnimTypes
	//constexpr auto GhostModeExitStartTime = 0x3930; // float
	//constexpr auto GhostModeExitDuration = 0x3934; // float
	//constexpr auto CachedReferencesByName = 0x3a70; // TMap<FName, FFortPlayerPawnObjectReference>
	//constexpr auto PSC_PlayerInWater = 0x3ac0; // UParticleSystemComponent*
	//constexpr auto PSC_PlayerInWaterSurfaceSwimming = 0x3ac8; // UParticleSystemComponent*
	//constexpr auto NiagaraPlayerInWaterBasicAsset = 0x3ad0; // UNiagaraSystem*
	//constexpr auto NiagaraPlayerInWaterSwimmingAsset = 0x3ad8; // UNiagaraSystem*
	//constexpr auto NiagaraPlayerWaterHandSplashAsset = 0x3ae0; // UNiagaraSystem*
	//constexpr auto NiagaraPlayerWaterFootSplashAsset = 0x3ae8; // UNiagaraSystem*
	//constexpr auto NiagaraPlayerWaterLargePlayerSplashAsset = 0x3af0; // UNiagaraSystem*
	//constexpr auto NiagaraPlayerWaterBoostAsset = 0x3af8; // UNiagaraSystem*
	//constexpr auto FootSplashLeftSocketName = 0x3b00; // FName
	//constexpr auto FootSplashRightSocketName = 0x3b04; // FName
	//constexpr auto NiagaraPlayerStandingInWater = 0x3b08; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerSwimmingInWater = 0x3b10; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerHandSplashInWater = 0x3b18; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerFootSplashInWaterLeft = 0x3b20; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerFootSplashInWaterRight = 0x3b28; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerJumpSplashInWater = 0x3b30; // UFXSystemComponent*
	//constexpr auto NiagaraPlayerWaterBoost = 0x3b38; // UFXSystemComponent*
	//constexpr auto bWaterFootSplashActive = 0x3b40; // char : 1
	//constexpr auto bEnableWaterInteractionEffects = 0x3b40; // char : 1
	//constexpr auto OnActivateAbility = 0x3b48; // FMulticastInlineDelegate
	//constexpr auto OnFiringRangedWeapon = 0x3b58; // FMulticastInlineDelegate
	//constexpr auto ConsecutiveWeakSpotResourceBonus = 0x3b68; // FScalableFloat
	//constexpr auto LastHitWeakSpotResourceBonus = 0x3b90; // FScalableFloat
	//constexpr auto CustomInteractionWidget = 0x3bc0; // UWidget*
	//constexpr auto ConvertComponent = 0x3be0; // UFortPawnComponent_Convert*
	//constexpr auto AffiliationComponent = 0x3be8; // UFortActorComponent_Affiliation*
	//constexpr auto bUseViewRotationForCameraOrigin = 0x3bf1; // char : 1

constexpr auto VehicleInputStateReliable = 0x1890;
constexpr auto bIsNearSafeZoneEdge = 0x1892;
constexpr auto bPlayingSafeZoneEffects = 0x1892;
constexpr auto bDoSafeZoneCleanup = 0x1892;
constexpr auto bIsSwimmingAnimLayerLinked = 0x1892;
constexpr auto bIsSprintJump = 0x1892;
constexpr auto bHasDisableSprintTag = 0x1892;
constexpr auto bDisableSwimSprintCancel = 0x1892;
constexpr auto bIsWaterJump = 0x1892;
constexpr auto bIsWaterSprintBoost = 0x1893;
constexpr auto bIsWaterSprintBoostPending = 0x1893;
constexpr auto bPlayingPassengerToPassengerAnimation = 0x1893;
constexpr auto bPlayingDriverToPassengerAnimation = 0x1893;
constexpr auto bIsTargeting = 0x1893;
constexpr auto bIsTargetingConsumableThrow = 0x1893;
constexpr auto bIsSwappingCharacterParts = 0x1894;
constexpr auto bBalloonMovementActivated = 0x1894;
constexpr auto bIsScriptedBot = 0x1894;
constexpr auto bBuildHotfix = 0x1894;
constexpr auto FortPlayerPawnLightingChannels = 0x1895;
constexpr auto StasisMode = 0x1897;
constexpr auto BuildingState = 0x1899;
constexpr auto AccelerationZPack = 0x189A;
constexpr auto ParachuteDirectionalSpeedMultiplierCurve = 0x18B8;
constexpr auto SkydivingDirectionalSpeedMultiplierCurve = 0x18C0;
constexpr auto BallooningDirectionalSpeedMultiplierCurve = 0x18C8;
constexpr auto DirectionalSpeedMultiplierCurve = 0x18D0;
constexpr auto LastCustomizationTimestamp = 0x18D8;
constexpr auto MinimumTimeBetweenSteps = 0x18DC;
constexpr auto LastStepTime = 0x18E0;
constexpr auto OnFootstepEvent = 0x18E8;
constexpr auto OnPawnEnterWater = 0x18F8;
constexpr auto OnPawnExitWater = 0x1908;
constexpr auto OnPawnExitSwinging = 0x1930;
constexpr auto bIsInWaterVolume = 0x1940;
constexpr auto bNotifyBlueprintWhenLandscapeTeleporting = 0x1941;
constexpr auto CachedTeamControllingRC = 0x1942;
constexpr auto BalloonActiveCount = 0x1943;
constexpr auto bParachuteDeployFixedVerticalDistance = 0x1944;
constexpr auto bIsSkydiving = 0x1945;
constexpr auto bIsParachuteOpen = 0x1946;
constexpr auto bLocalIsSkydiving = 0x1947;
constexpr auto bLocalIsParachuteForcedOpen = 0x1947;
constexpr auto bIsParachuteForcedOpen = 0x1947;
constexpr auto bIsSkydivingFromBus = 0x1947;
constexpr auto bIsSkydivingFromLaunchPad = 0x1947;
constexpr auto bPendingSkydiveLaunch = 0x1947;
constexpr auto bIsInSlipperyMovement = 0x1947;
constexpr auto bReplicatedIsInSlipperyMovement = 0x1948;
constexpr auto bIsBelowAutoDeployTestHeight = 0x1948;
constexpr auto bIsSlopeSliding = 0x1948;
constexpr auto bIsProxySimulationTimedOut = 0x1948;
constexpr auto bIsPedestalHero = 0x1948;
constexpr auto bInGliderRedeploy = 0x1948;
constexpr auto bLocalInGliderRedeploy = 0x1948;
constexpr auto bBeingRepossessed = 0x1949;
constexpr auto bInitAbilitySystemComponentFromPlayerState = 0x1949;
constexpr auto bStartedInteractSearch = 0x1949;
constexpr auto bPawnLODDirty = 0x1949;
constexpr auto bIsUsingJetpack = 0x1949;
constexpr auto bIsPlayingEmote = 0x1949;
constexpr auto bShowingOverdriveEffect = 0x1949;
constexpr auto bIsRespawning = 0x1949;
constexpr auto bIsRespawningInAir = 0x194A;
constexpr auto bInitializedPostRepPlayerState = 0x194A;
constexpr auto bHasWaterParticleSystem = 0x194A;
constexpr auto bCanShowDefaultSkin = 0x194A;
constexpr auto bDisabledTetheringSupport = 0x194A;
constexpr auto bIsInFrontEndHologram = 0x194A;
constexpr auto HeldObject = 0x199C;
constexpr auto bForceMoveRelativeToCameraRotation = 0x19B8;
constexpr auto bIsWaitingForEmoteInteraction = 0x19B8;
constexpr auto bIsEmoteLeader = 0x19B8;
constexpr auto bShouldSyncAnimationWithEmoteLeader = 0x19B8;
constexpr auto bShouldJitterAnimationSyncWithEmoteLeader = 0x19B8;
constexpr auto bDoubleFileEmoteSecondLine = 0x19B8;
constexpr auto bEmoteUsesSecondaryFire = 0x19B8;
constexpr auto bLockGroupEmoteLeaderRotation = 0x19B8;
constexpr auto GroupEmoteLookTarget = 0x19C0;
constexpr auto GroupEmoteTailTarget = 0x19C8;
constexpr auto GroupEmoteFollowers = 0x19D0;
constexpr auto GroupEmoteAnimOffset = 0x1A3C;
constexpr auto GroupEmoteLeaderRotationYawOffset = 0x1A40;
constexpr auto GroupEmoteLookTargetRotationLeader = 0x1A48;
constexpr auto GroupEmoteMaximumZDifference = 0x1A78;
constexpr auto OnGroupEmoteSyncValueChanged = 0x1A80;
constexpr auto OnGroupEmoteFollowerJoined = 0x1A90;
constexpr auto OnGroupEmoteFollowerLeft = 0x1AA0;
constexpr auto OnGroupEmoteSecondaryFirePressed = 0x1AB0;
constexpr auto GroupEmoteSyncValue = 0x1AC0;
constexpr auto GroupEmoteSoundValue = 0x1AC1;
constexpr auto GroupEmoteParticleValue = 0x1AC2;
constexpr auto TransformationMontage = 0x1AC8;
constexpr auto TransformationMontageStartTime = 0x1AD0;
constexpr auto CurrentMontagerLeader = 0x1B30;
constexpr auto CurrentSyncedMontage = 0x1B38;
constexpr auto bCharacterPartsCastIndirectShadows = 0x1B40;
constexpr auto CharacterGender = 0x1B42;
constexpr auto CharacterBodyType = 0x1B43;
constexpr auto JumpLastActivatedTime = 0x1B54;
constexpr auto PreviousPosition = 0x1B58;
constexpr auto PreviousVelocity = 0x1B70;
constexpr auto ReplicatedCustomMeshHeightAdjustTarget = 0x1BD0;
constexpr auto UnburrowLaunchXYSpeed = 0x1BD4;
constexpr auto UnburrowLaunchZSpeed = 0x1BD8;
constexpr auto VehicleInputStateUnreliable = 0x1C20;
constexpr auto bIsInAnyStorm = 0x1CA0;
constexpr auto bIsInsideSafeZone = 0x1CA0;
constexpr auto SafeZoneAppliedGE = 0x1CB0;
constexpr auto DisableSlideGameplayEffectClass = 0x1CE0;
constexpr auto SelfReviveGameplayEffect = 0x1CE8;
constexpr auto TeammateReviveGameplayEffect = 0x1CF0;
constexpr auto SetByCallerReviveHealth = 0x1CF8;
constexpr auto DBNOInteractionCollisionProfile = 0x1D20;
constexpr auto DBNOInteractionBoxExtent = 0x1D28;
constexpr auto DBNODeferTime = 0x1D40;
constexpr auto DBNOInteractCollisionComponent = 0x1D48;
constexpr auto EventReviveTag = 0x1D50;
constexpr auto AggroRangeOverride = 0x1D54;
constexpr auto SetByCallerReviveSignalInStorm = 0x1D58;
constexpr auto ArmoredInterface = 0x1D60;
constexpr auto LastBuildingMetadata = 0x1D70;
constexpr auto SprintCancelTime = 0x1D90;
constexpr auto WaterSprintBoostAllowedTimer = 0x1D98;
constexpr auto bHasStartedFloating = 0x1E24;
constexpr auto ZiplineState = 0x1E28;
constexpr auto ZiplineJumpDampening = 0x1E68;
constexpr auto ZiplineJumpStrength = 0x1E78;
constexpr auto ZiplineJumpActivateDelay = 0x1E88;
constexpr auto ZiplineRentryProtectionDelay = 0x1EB0;
constexpr auto ZiplineSocketZOffset = 0x1ED8;
constexpr auto ZiplineStateChanged = 0x1EE0;
constexpr auto ZiplineSpeedFactorTarget = 0x1EF0;
constexpr auto ZiplineSpeedFactor = 0x1EF4;
constexpr auto EnableSwimSprintDiveCooldown = 0x1F00;
constexpr auto SwimSprintDiveCooldown = 0x1F28;
constexpr auto SwimDiveBoostTimeThreshold = 0x1F50;
constexpr auto ClientSwimDiveInputTime = 0x1F78;
constexpr auto bCanPredictJumpApex = 0x1F7C;
constexpr auto AbilityAITargets = 0x1F88;
constexpr auto UnableToPerformActionMontage = 0x1FB0;
constexpr auto UnableToPerformActionSound = 0x1FB8;
constexpr auto MoveSoundStimulusBroadcastInterval = 0x1FC0;
constexpr auto EmoteStartTime = 0x20A4;
constexpr auto EmoteRandomNum = 0x20A8;
constexpr auto bPlayingPassengerToDriverAnimation = 0x20C0;
constexpr auto VehicleSpeedAtTimeOfJump = 0x20D8;
constexpr auto CurrentVehicle = 0x20E0;
constexpr auto InteractingPCRep = 0x20E8;
constexpr auto VehicleLastTick = 0x20F0;
constexpr auto OnVehicleStateChangedEvent = 0x2110;
constexpr auto TetherComponent = 0x2120;
constexpr auto PendingTetherLaunch = 0x2128;
constexpr auto TetherJumpLastTime = 0x2178;
constexpr auto bSupportsTetheredMovement = 0x217C;
constexpr auto BalloonRope = 0x2180;
constexpr auto OnPossessedProp = 0x2188;
constexpr auto PossessedProp = 0x2198;
constexpr auto SlopeCameraOffsetFrameCounter = 0x21D0;
constexpr auto SlopeCameraOffsetInterpolator = 0x21D8;
constexpr auto LargeBodyTypeTargetingOffset = 0x2238;
constexpr auto VehicleInputComponent = 0x2338;
constexpr auto BluePrintPlaceAnimation = 0x2348;
constexpr auto BluePrintEditAnimation = 0x2350;
constexpr auto OnStartedInteractSearch = 0x2360;
constexpr auto OnEndedInteractSearch = 0x2370;
constexpr auto OnAttemptedInstantInteractSearch = 0x2380;
constexpr auto EmoteInteractionCollisionProfile = 0x2390;
constexpr auto EmoteInteractionBoxExtent = 0x2398;
constexpr auto EmoteInteractCollisionComponent = 0x23B0;
constexpr auto OnPartChanged = 0x23B8;
constexpr auto BlueprintPaperMID = 0x23F8;
constexpr auto BlueprintPaperPulseTimeline = 0x2400;
constexpr auto AccessoryColorSwatchHandler = 0x2490;
constexpr auto Hero = 0x24C8;
constexpr auto OvrHeroType = 0x24D0;
constexpr auto DisplayContext = 0x24D8;
constexpr auto HACK_CustomPRIComponent = 0x24F8;
constexpr auto CharacterParts = 0x2500;
constexpr auto CharacterColorSwatches = 0x2538;
constexpr auto CharacterPartColorSwatches = 0x2548;
constexpr auto CharacterCharms = 0x2580;
constexpr auto RequiredVariantParts = 0x25A0;
constexpr auto CharacterPartSkeletalMeshComponents = 0x25B8;
constexpr auto CharacterCharmActors = 0x25F0;
constexpr auto CharacterPartSMHiddenRefCount = 0x2600;
constexpr auto BaseCosmeticLoadout = 0x2608;
constexpr auto AppliedCosmeticLoadout = 0x2768;
constexpr auto AppliedSwaps = 0x28C8;
constexpr auto CosmeticLoadout = 0x2928;
constexpr auto ServerLoadoutChangeSync = 0x2A88;
constexpr auto bAllowClientLoadoutChangeSync = 0x2A90;
constexpr auto OnMaterialOverrideApplied = 0x2AB8;
constexpr auto OnMaterialOverrideCleared = 0x2AC8;
constexpr auto MaterialOverrides = 0x2AD8;
constexpr auto LocalMaterialOverrides = 0x2AE8;
constexpr auto MaterialOverrideStateMap = 0x2AF8;
constexpr auto PreviousCharacterParts = 0x2B48;
constexpr auto CharacterPartModifiers = 0x2B80;
constexpr auto RepCharPartAnimMontageInfo = 0x2BB8;
constexpr auto ClientObservedStats = 0x2BD8;
constexpr auto AnimBPOverride = 0x2D28;
constexpr auto OriginalAnimBP = 0x2D30;
constexpr auto OnCrouchStartSound = 0x2D38;
constexpr auto OnCrouchEndSound = 0x2D40;
constexpr auto FootstepBankOverride = 0x2D48;
constexpr auto OriginalFootstepBank = 0x2D50;
constexpr auto CachedFootStepIndex = 0x2D58;
constexpr auto AnimSetOverride = 0x2D60;
constexpr auto AnimLayersOverride = 0x2D68;
constexpr auto PreviousAnimLayersOverride = 0x2D78;
constexpr auto QueuedAutoPickups = 0x2D88;
constexpr auto IgnoreActors = 0x2D98;
constexpr auto AutoPickupDropRepickupDelay = 0x2DB0;
constexpr auto CarriedObjectAttachmentSocket = 0x2DE8;
constexpr auto PickupSpeedMultiplier = 0x2DEC;
constexpr auto MiniMapIconBrush = 0x2DF0;
constexpr auto AboveBelowMiniMapIconBrush = 0x2EB0;
constexpr auto FarOffMiniMapIconBrush = 0x2F70;
constexpr auto DBNOMiniMapIconBrush = 0x3030;
constexpr auto MinimapIconColorSelf = 0x30F0;
constexpr auto MinimapIconColorTeammate = 0x3100;
constexpr auto MinimapIconColorEnemy = 0x3110;
constexpr auto MaxIndicatorVisibilityDistForEnemies = 0x3120;
constexpr auto MaxIndicatorVisibilityDistForAllies = 0x3124;
constexpr auto DBNOHoisterData = 0x31A8;
constexpr auto DBNOHoistee = 0x31B8;
constexpr auto DBNOHoisterAnimSet = 0x31C0;
constexpr auto DBNOHoisteeAnimClass = 0x31C8;
constexpr auto ThrowCarriedPlayerStrengthXY = 0x31D0;
constexpr auto ThrowCarriedPlayerStrengthZ = 0x31D4;
constexpr auto DropCarriedPlayerForwardOffset = 0x31D8;
constexpr auto DropCarriedPlayerHeightOffset = 0x31DC;
constexpr auto DropCarriedPlayerTraceHeight = 0x31E0;
constexpr auto bAllowDBNOCarry = 0x31E4;
constexpr auto bAllowDBNOCarryEnemies = 0x31E5;
constexpr auto bIsBeingDBNOCarried = 0x31E6;
constexpr auto bIsDBNOCarrying = 0x31E7;
constexpr auto bRequestedThrowCarriedPlayer = 0x31E8;
constexpr auto PackedReplicatedSlopeAngles = 0x31F8;
constexpr auto OnDBNOHoisterChangedDelegate = 0x3200;
constexpr auto OnRevivedFromDBNODelegate = 0x3210;
constexpr auto OnNewPlayerState = 0x3220;
constexpr auto OnAbilitySystemComponentInitialized = 0x3230;
constexpr auto OnPreInvalidateAbilitySystemComponent = 0x3240;
constexpr auto OnFinishedCharacterCustomization = 0x3270;
constexpr auto OnCrouchInputJustPressed = 0x3280;
constexpr auto CustomizationAssetLoader = 0x3290;
constexpr auto bEnableUpdateCharacterCustomizationPostLoad = 0x3360;
constexpr auto bHasCharacterCustomizationPostLoadedOnce = 0x3361;
constexpr auto bHiddenAtStartup = 0x3362;
constexpr auto SpawnParticles = 0x3370;
constexpr auto SpawnSound = 0x3378;
constexpr auto bIsLocalPlayer = 0x3384;
constexpr auto bDamagedEnemy = 0x338C;
constexpr auto OnDamageComboIncrement = 0x33A8;
constexpr auto OnDamageComboReset = 0x33B8;
constexpr auto PlayerStatus = 0x33D0;
constexpr auto AccelerationPack = 0x33D4;
constexpr auto RepAnimMontageInfo = 0x33D8;
constexpr auto RepAnimMontageStartSection = 0x3410;
constexpr auto bNetMovementPrioritized = 0x3414;
constexpr auto LandingMontagePair = 0x3418;
constexpr auto PriorVariantData = 0x3438;
constexpr auto TempWeaponsStack = 0x34C0;
constexpr auto RootMotionInterruptNotifyStack = 0x34D0;
constexpr auto RootMotionInterruptMontageStack = 0x34E0;
constexpr auto VisibilityComponent = 0x3528;
constexpr auto BlendablesPostProcessComp = 0x3530;
constexpr auto bUseControllerRotationYawToRestore = 0x353C;
constexpr auto OnBeginSkydivingEvent = 0x3540;
constexpr auto OnEndSkydivingEvent = 0x3550;
constexpr auto OnBeginParachuteMovementEvent = 0x3560;
constexpr auto OnParachuteSpawned = 0x3570;
constexpr auto OnEndParachuteMovementEvent = 0x3580;
constexpr auto OnBallooningGravityCeilingChanged = 0x3590;
constexpr auto OnEnteredAircraft = 0x35A0;
constexpr auto OnPawnPossessed = 0x35B0;
constexpr auto OnPawnUnpossessed = 0x35C0;
constexpr auto OnEmoteInteracted = 0x35D0;
constexpr auto OnSafeZoneOccupancyChangedEvent = 0x35E0;
constexpr auto OnHeldObjectPickedUp = 0x35F0;
constexpr auto OnHeldObjectDropped = 0x3600;
constexpr auto CustomMovementIndicators = 0x3610;
constexpr auto CurrentGliderOpenSound = 0x3670;
constexpr auto CurrentGliderOpenAudioComponent = 0x3678;
constexpr auto CurrentGliderCloseSound = 0x3680;
constexpr auto CurrentGliderCloseAudioComponent = 0x3688;
constexpr auto bParachuteLockedOpen = 0x369C;
constexpr auto bLocalParachuteLockedOpen = 0x369D;
constexpr auto AttachmentMesh = 0x36A0;
constexpr auto AttachmentMeshComponent = 0x36B0;
constexpr auto BotScriptedBehavior = 0x36B8;
constexpr auto IgnoredWaterBodies = 0x36D8;
constexpr auto UnderwaterDamageComponent = 0x36E8;
constexpr auto SlipperySlopeParams = 0x36F0;
constexpr auto GliderClass = 0x38A8;
constexpr auto PetState = 0x38C0;
constexpr auto CosmeticPetInstance = 0x38C8;
constexpr auto GliderSpawnComponent = 0x38E0;
constexpr auto ParachuteAttachment = 0x38E8;
constexpr auto GliderOverrideStack = 0x38F8;
constexpr auto bResetGliderOverrideOnLanding = 0x3918;
constexpr auto ParachuteDeployTraceForGroundDistance = 0x3920;
constexpr auto LaunchPadParachuteDeployTraceForGroundDistance = 0x3948;
constexpr auto LaunchPadParachuteDeployTraceForDownwardSpeed = 0x3970;
constexpr auto ParachuteDeployVelocityBlend = 0x3998;
constexpr auto ParachuteCooldownToOpen = 0x39C0;
constexpr auto ParachuteCooldownToClose = 0x39C4;
constexpr auto GliderRedeployAllowedRow = 0x39C8;
constexpr auto GliderRedeployLateralVelocityMultiplierRow = 0x39F0;
constexpr auto GliderRedeployHeighLimitRow = 0x3A18;
constexpr auto BalloonFallDamageThresholdVelocityZ = 0x3A40;
constexpr auto PreDrivingAnimBP = 0x3A68;
constexpr auto CurrentVehicleAnimLayerOverlayClass = 0x3A70;
constexpr auto CurrentSwimmingAnimLayerOverlayClass = 0x3A78;
constexpr auto DefaultSwimmingAnimLayerOverlayClass = 0x3A80;
constexpr auto TimeBeforeSwimmingLayerDeactivated = 0x3A90;
constexpr auto LinkedAnimGraphComponent = 0x3A98;
constexpr auto ParachuteAudioLoop = 0x3AA0;
constexpr auto ParachuteAndSkydiveAudioFadeInTime = 0x3AA8;
constexpr auto ParachuteAndSkydiveAudioFadeOutTime = 0x3AAC;
constexpr auto SkydiveAudioLoop = 0x3AB0;
constexpr auto SoundOnParachuteForcedOpen = 0x3AB8;
constexpr auto SkydivingLoop1P = 0x3AC0;
constexpr auto SkydivingLoop3P = 0x3AC8;
constexpr auto ParachuteOpenLoop1P = 0x3AD0;
constexpr auto ParachuteOpenLoop3P = 0x3AD8;
constexpr auto SwimmingAudioLoop = 0x3AE0;
constexpr auto SwimmingAudioFadeOutTime = 0x3AE8;
constexpr auto SwimmingAudioInterpSpeed = 0x3AEC;
constexpr auto SoundOnSwimmingLoop = 0x3AF0;
constexpr auto RemoteViewData32 = 0x3B48;
constexpr auto LastQuickBarSwitchRequestTime = 0x3B60;
constexpr auto CrouchStartTime = 0x3B64;
constexpr auto CrouchEndTime = 0x3B68;
constexpr auto CrouchLerpTime = 0x3B6C;
constexpr auto MeleeAbilityCooldown = 0x3B70;
constexpr auto bDisallowInterrogation = 0x3B74;
constexpr auto bDisallowInterrogationOnNPC = 0x3B75;
constexpr auto bDisallowInterrogationCreative = 0x3B76;
constexpr auto bHideBodyOnDeathRequested = 0x3B77;
constexpr auto ControlledRCPawn = 0x3B78;
constexpr auto StoredControlRotation = 0x3B80;
constexpr auto FacialTypeOverride = 0x3B9C;
constexpr auto GhostModeExitStartTime = 0x3BA0;
constexpr auto GhostModeExitDuration = 0x3BA4;
constexpr auto CachedReferencesByName = 0x3CE0;
constexpr auto PSC_PlayerInWater = 0x3D30;
constexpr auto PSC_PlayerInWaterSurfaceSwimming = 0x3D38;
constexpr auto NiagaraPlayerInWaterBasicAsset = 0x3D40;
constexpr auto NiagaraPlayerInWaterSwimmingAsset = 0x3D48;
constexpr auto NiagaraPlayerWaterHandSplashAsset = 0x3D50;
constexpr auto NiagaraPlayerWaterFootSplashAsset = 0x3D58;
constexpr auto NiagaraPlayerWaterLargePlayerSplashAsset = 0x3D60;
constexpr auto NiagaraPlayerWaterBoostAsset = 0x3D68;
constexpr auto FootSplashLeftSocketName = 0x3D70;
constexpr auto FootSplashRightSocketName = 0x3D74;
constexpr auto NiagaraPlayerStandingInWater = 0x3D78;
constexpr auto NiagaraPlayerSwimmingInWater = 0x3D80;
constexpr auto NiagaraPlayerHandSplashInWater = 0x3D88;
constexpr auto NiagaraPlayerFootSplashInWaterLeft = 0x3D90;
constexpr auto NiagaraPlayerFootSplashInWaterRight = 0x3D98;
constexpr auto NiagaraPlayerJumpSplashInWater = 0x3DA0;
constexpr auto NiagaraPlayerWaterBoost = 0x3DA8;
constexpr auto bWaterFootSplashActive = 0x3DB0;
constexpr auto bEnableWaterInteractionEffects = 0x3DB0;
constexpr auto OnActivateAbility = 0x3DB8;
constexpr auto OnFiringRangedWeapon = 0x3DC8;
constexpr auto ConsecutiveWeakSpotResourceBonus = 0x3DD8;
constexpr auto LastHitWeakSpotResourceBonus = 0x3E00;
constexpr auto CustomInteractionWidget = 0x3E30;
constexpr auto ConvertComponent = 0x3E50;
constexpr auto AffiliationComponent = 0x3E58;
constexpr auto bUseViewRotationForCameraOrigin = 0x3E61;
}

namespace FortItemDefinition {

	//constexpr auto OnItemCountChanged = 0x50; // FMulticastInlineDelegate
	//constexpr auto Rarity = 0x70; // EFortRarity
	//constexpr auto ItemType = 0x71; // EFortItemType
	//constexpr auto PrimaryAssetIdItemTypeOverride = 0x72; // EFortItemType
	//constexpr auto FilterOverride = 0x73; // EFortInventoryFilter
	//constexpr auto Tier = 0x74; // EFortItemTier
	//constexpr auto MaxTier = 0x75; // EFortItemTier
	//constexpr auto Access = 0x76; // EFortTemplateAccess
	//constexpr auto bInventorySizeLimited = 0x77; // char : 1
	//constexpr auto bForceAutoPickup = 0x77; // char : 1
	//constexpr auto bAllowMultipleStacks = 0x77; // char : 1
	//constexpr auto bAutoBalanceStacks = 0x77; // char : 1
	//constexpr auto bNeverPersisted = 0x77; // char : 1
	//constexpr auto bIsAccountItem = 0x77; // char : 1
	//constexpr auto ItemTypeNameOverride = 0x78; // FText
	//constexpr auto DisplayName = 0x90; // FText
	//constexpr auto QuantityDisplayName = 0xa8; // FText
	//constexpr auto ShortDescription = 0xc0; // FText
	//constexpr auto Description = 0xd8; // FText
	//constexpr auto DisplayNamePrefix = 0xf0; // FText
	//constexpr auto SearchTags = 0x108; // FText
	//constexpr auto GiftBoxGroupName = 0x120; // FName
	//constexpr auto FrontendPreviewScale = 0x124; // float
	//constexpr auto GameplayTags = 0x128; // FGameplayTagContainer
	//constexpr auto AutomationTags = 0x148; // FGameplayTagContainer
	//constexpr auto SecondaryCategoryOverrideTags = 0x168; // FGameplayTagContainer
	//constexpr auto TertiaryCategoryOverrideTags = 0x188; // FGameplayTagContainer
	//constexpr auto MaxStackSize = 0x1a8; // FScalableFloat
	//constexpr auto PurchaseItemLimit = 0x1d0; // FScalableFloat
	//constexpr auto TooltipClass = 0x1f8; // TSoftClassPtr<UObject>
	//constexpr auto StatList = 0x220; // TSoftObjectPtr<UFortTooltipDisplayStatsList>
	//constexpr auto RatingLookup = 0x248; // FCurveTableRowHandle
	//constexpr auto WidePreviewImage = 0x258; // TSoftObjectPtr<UTexture2D>
	//constexpr auto SmallPreviewImage = 0x280; // TSoftObjectPtr<UTexture2D>
	//constexpr auto LargePreviewImage = 0x2a8; // TSoftObjectPtr<UTexture2D>
	//constexpr auto DisplayAssetPath = 0x2d0; // FSoftObjectPath
	//constexpr auto PopupDetailsTag = 0x2e8; // FDataTableRowHandle
	//constexpr auto Series = 0x2f8; // UFortItemSeriesDefinition*
	//constexpr auto FrontendPreviewPivotOffset = 0x300; // FVector
	//constexpr auto FrontendPreviewInitialRotation = 0x318; // FRotator
	//constexpr auto FrontendPreviewMeshOverride = 0x330; // TSoftObjectPtr<UStaticMesh>
	//constexpr auto FrontendPreviewSkeletalMeshOverride = 0x358; // TSoftObjectPtr<USkeletalMesh>

	constexpr auto OnItemCountChanged = 0x50;
	constexpr auto Rarity = 0x70;
	constexpr auto ItemType = 0x71;
	constexpr auto PrimaryAssetIdItemTypeOverride = 0x72;
	constexpr auto FilterOverride = 0x73;
	constexpr auto Tier = 0x74;
	constexpr auto MaxTier = 0x75;
	constexpr auto Access = 0x76;
	constexpr auto bIsAccountItem = 0x77;
	constexpr auto bNeverPersisted = 0x77;
	constexpr auto bAllowMultipleStacks = 0x77;
	constexpr auto bAutoBalanceStacks = 0x77;
	constexpr auto bForceAutoPickup = 0x77;
	constexpr auto bInventorySizeLimited = 0x77;
	constexpr auto ItemTypeNameOverride = 0x78;
	constexpr auto DisplayName = 0x90;
	constexpr auto QuantityDisplayName = 0xA8;
	constexpr auto ShortDescription = 0xC0;
	constexpr auto Description = 0xD8;
	constexpr auto DisplayNamePrefix = 0xF0;
	constexpr auto SearchTags = 0x108;
	constexpr auto GiftBoxGroupName = 0x120;
	constexpr auto FrontendPreviewScale = 0x124;
	constexpr auto GameplayTags = 0x128;
	constexpr auto AutomationTags = 0x148;
	constexpr auto SecondaryCategoryOverrideTags = 0x168;
	constexpr auto TertiaryCategoryOverrideTags = 0x188;
	constexpr auto MaxStackSize = 0x1A8;
	constexpr auto PurchaseItemLimit = 0x1D0;
	constexpr auto TooltipClass = 0x1F8;
	constexpr auto StatList = 0x220;
	constexpr auto RatingLookup = 0x248;
	constexpr auto WidePreviewImage = 0x258;
	constexpr auto SmallPreviewImage = 0x280;
	constexpr auto LargePreviewImage = 0x2A8;
	constexpr auto DisplayAssetPath = 0x2D0;
	constexpr auto PopupDetailsTag = 0x2E8;
	constexpr auto Series = 0x2F8;
	constexpr auto FrontendPreviewPivotOffset = 0x300;
	constexpr auto FrontendPreviewInitialRotation = 0x318;
	constexpr auto FrontendPreviewMeshOverride = 0x330;
	constexpr auto FrontendPreviewSkeletalMeshOverride = 0x358;

}

namespace World {

	//constexpr auto PersistentLevel = 0x30; // ULevel*
	//constexpr auto NetDriver = 0x38; // UNetDriver*
	//constexpr auto LineBatcher = 0x40; // ULineBatchComponent*
	//constexpr auto PersistentLineBatcher = 0x48; // ULineBatchComponent*
	//constexpr auto ForegroundLineBatcher = 0x50; // ULineBatchComponent*
	//constexpr auto NetworkManager = 0x58; // AGameNetworkManager*
	//constexpr auto PhysicsCollisionHandler = 0x60; // UPhysicsCollisionHandler*
	//constexpr auto ExtraReferencedObjects = 0x68; // TArray<UObject*>
	//constexpr auto PerModuleDataObjects = 0x78; // TArray<UObject*>
	//constexpr auto StreamingLevels = 0x88; // TArray<ULevelStreaming*>
	//constexpr auto StreamingLevelsToConsider = 0x98; // FStreamingLevelsToConsider
	//constexpr auto StreamingLevelsPrefix = 0xc0; // FString
	//constexpr auto CurrentLevelPendingVisibility = 0xd0; // ULevel*
	//constexpr auto CurrentLevelPendingInvisibility = 0xd8; // ULevel*
	//constexpr auto DemoNetDriver = 0xe0; // UDemoNetDriver*
	//constexpr auto MyParticleEventManager = 0xe8; // AParticleEventManager*
	//constexpr auto DefaultPhysicsVolume = 0xf0; // APhysicsVolume*
	//constexpr auto bAreConstraintsDirty = 0x116; // char : 1
	//constexpr auto NavigationSystem = 0x120; // UNavigationSystemBase*
	//constexpr auto AuthorityGameMode = 0x128; // AGameModeBase*
	//constexpr auto GameState = 0x130; // AGameStateBase*
	//constexpr auto AISystem = 0x138; // UAISystemBase*
	//constexpr auto AvoidanceManager = 0x140; // UAvoidanceManager*
	//constexpr auto Levels = 0x148; // TArray<ULevel*>
	//constexpr auto LevelCollections = 0x158; // TArray<FLevelCollection>
	//constexpr auto OwningGameInstance = 0x190; // UGameInstance*
	//constexpr auto ParameterCollectionInstances = 0x198; // TArray<UMaterialParameterCollectionInstance*>
	//constexpr auto CanvasForRenderingToTarget = 0x1a8; // UCanvas*
	//constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1b0; // UCanvas*
	//constexpr auto PhysicsField = 0x228; // UPhysicsFieldComponent*
	//constexpr auto LWILastAssignedUID = 0x230; // uint32_t
	//constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x238; // TSet<UActorComponent*>
	//constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x288; // TArray<UActorComponent*>
	//constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x298; // TArray<UActorComponent*>
	//constexpr auto WorldComposition = 0x628; // UWorldComposition*
	//constexpr auto PSCPool = 0x6d8; // FWorldPSCPool

	constexpr auto PersistentLevel = 0x30;
	constexpr auto NetDriver = 0x38;
	constexpr auto LineBatcher = 0x40;
	constexpr auto PersistentLineBatcher = 0x48;
	constexpr auto ForegroundLineBatcher = 0x50;
	constexpr auto NetworkManager = 0x58;
	constexpr auto PhysicsCollisionHandler = 0x60;
	constexpr auto ExtraReferencedObjects = 0x68;
	constexpr auto PerModuleDataObjects = 0x78;
	constexpr auto StreamingLevels = 0x88;
	constexpr auto StreamingLevelsToConsider = 0x98;
	constexpr auto StreamingLevelsPrefix = 0xC0;
	constexpr auto CurrentLevelPendingVisibility = 0xD0;
	constexpr auto CurrentLevelPendingInvisibility = 0xD8;
	constexpr auto DemoNetDriver = 0xE0;
	constexpr auto MyParticleEventManager = 0xE8;
	constexpr auto DefaultPhysicsVolume = 0xF0;
	constexpr auto bAreConstraintsDirty = 0x116;
	constexpr auto NavigationSystem = 0x120;
	constexpr auto AuthorityGameMode = 0x128;
	constexpr auto GameState = 0x130;
	constexpr auto AISystem = 0x138;
	constexpr auto AvoidanceManager = 0x140;
	constexpr auto Levels = 0x148;
	constexpr auto LevelCollections = 0x158;
	constexpr auto OwningGameInstance = 0x190;
	constexpr auto ParameterCollectionInstances = 0x198;
	constexpr auto CanvasForRenderingToTarget = 0x1A8;
	constexpr auto CanvasForDrawMaterialToRenderTarget = 0x1B0;
	constexpr auto PhysicsField = 0x228;
	constexpr auto LWILastAssignedUID = 0x230;
	constexpr auto ComponentsThatNeedPreEndOfFrameSync = 0x238;
	constexpr auto ComponentsThatNeedEndOfFrameUpdate = 0x288;
	constexpr auto ComponentsThatNeedEndOfFrameUpdate_OnGameThread = 0x298;
	constexpr auto WorldComposition = 0x658;
	constexpr auto PSCPool = 0x708;

}


namespace BuildingWeakSpot {


	//constexpr auto ParentObject = 0x2a8; // TWeakObjectPtr<UObject>
	//constexpr auto bHit = 0x2b0; // char : 1
	//constexpr auto bFadeOut = 0x2b0; // char : 1
	//constexpr auto bActive = 0x2b0; // char : 1
	//constexpr auto HitCount = 0x2b4; // int32_t
	//constexpr auto Level = 0x2b8; // int32_t
	//constexpr auto MaxLevel = 0x2bc; // int32_t
	//constexpr auto StartingLocation = 0x2c0; // FVector
	//constexpr auto HitNormal = 0x2d8; // FVector
	//constexpr auto PhysicalSurfaceType = 0x2f0; // EPhysicalSurface

	constexpr auto ParentObject = 0x298;
	constexpr auto bHit = 0x2A0;
	constexpr auto bFadeOut = 0x2A0;
	constexpr auto bActive = 0x2A0;
	constexpr auto HitCount = 0x2A4;
	constexpr auto Level = 0x2A8;
	constexpr auto MaxLevel = 0x2AC;
	constexpr auto StartingLocation = 0x2B0;
	constexpr auto HitNormal = 0x2C8;
	constexpr auto PhysicalSurfaceType = 0x2E0;

}


namespace FortPlayerControllerAthena {

	//constexpr auto FireAbilityToWeaponSwitchTime = 0x3710; // float
	//constexpr auto OnAircraftStateChange = 0x3720; // FMulticastInlineDelegate
	//constexpr auto OnItemDropSpawnedDelegate = 0x3730; // FMulticastInlineDelegate
	//constexpr auto OnItemDroppedDueToOverflow = 0x3740; // FMulticastInlineDelegate
	//constexpr auto OnCreativePermissionsChanged = 0x3750; // FMulticastInlineDelegate
	//constexpr auto SwappingItemDefinition = 0x3760; // UFortWorldItemDefinition*
	//constexpr auto WinScreenDelayTime = 0x3768; // float
	//constexpr auto bSkipPlayWinEffects = 0x376c; // bool
	//constexpr auto bAllowPlayersCreditOnLeave = 0x376d; // bool
	//constexpr auto bLockingOnFocalPoint = 0x376f; // bool
	//constexpr auto FocalPoint = 0x3770; // AActor*
	//constexpr auto FocalPointOffset = 0x3778; // FVector_NetQuantize
	//constexpr auto FocalPointFOV = 0x3790; // float
	//constexpr auto FocalPointDuration = 0x3794; // float
	//constexpr auto OnUsingFocalPointChanged = 0x37a0; // FMulticastInlineDelegate
	//constexpr auto OnFocalPointActorChanged = 0x37b0; // FMulticastInlineDelegate
	//constexpr auto OnSkydiveLeaderChanged = 0x37c0; // FMulticastInlineDelegate
	//constexpr auto OnClientDonationSuccessDelegate = 0x37d0; // FMulticastInlineDelegate
	//constexpr auto SkydiveLeaderManualCameraTime = 0x3818; // float
	//constexpr auto InterpolatedSkydiveFollowerViewRotation = 0x3820; // FRotator
	//constexpr auto SkydiveLeader = 0x3850; // AFortPlayerState*
	//constexpr auto OnPickupProjectileCreatedDelegate = 0x3860; // FMulticastInlineDelegate
	//constexpr auto LastDownedVictim = 0x3870; // AFortPlayerStateAthena*
	//constexpr auto LastElimVictim = 0x3878; // AFortPlayerStateAthena*
	//constexpr auto OnCameraInStormWallChangeDelegate = 0x3888; // FMulticastInlineDelegate
	//constexpr auto bLeaveDisconnectedPawnsInGame = 0x38b0; // bool
	//constexpr auto DisconnectedPawn = 0x38b8; // AFortPlayerPawn*
	//constexpr auto PreviousPawn = 0x38c0; // AFortPlayerPawn*
	//constexpr auto bReplicateViewTargetInventory = 0x38c8; // bool
	//constexpr auto bHideWarmUpLoadingScreen = 0x38c9; // char : 1
	//constexpr auto bClientNotifiedOfLoss = 0x38c9; // char : 1
	//constexpr auto bClientNotifiedOfTeamWin = 0x38c9; // char : 1
	//constexpr auto bClientNotifiedOfWin = 0x38c9; // char : 1
	//constexpr auto bHasHadValidPawn = 0x38c9; // char : 1
	//constexpr auto PlayersTalking = 0x38f8; // TArray<FString>
	//constexpr auto TalkingPlayersChanged = 0x3908; // FMulticastInlineDelegate
	//constexpr auto bHighlightRecordingEnabled = 0x3918; // bool
	//constexpr auto bPlaceDangerMarkerWhenTargeting = 0x3919; // bool
	//constexpr auto bDeferringStartRecordingHighlights = 0x391a; // bool
	//constexpr auto HighlightGroupId = 0x3920; // FString
	//constexpr auto CachedHighlightCount = 0x3930; // int32_t
	//constexpr auto HighlightFirstKillTime = 0x3934; // float
	//constexpr auto HighlightKillMultiple = 0x3938; // int32_t
	//constexpr auto HighlightDownMultiple = 0x393c; // int32_t
	//constexpr auto HighlightKillCooldown = 0x3940; // float
	//constexpr auto HighlightKillRewindTime = 0x3944; // float
	//constexpr auto RespawnCamera_Time = 0x3948; // float
	//constexpr auto RespawnCamera_HoldPositionTime = 0x394c; // float
	//constexpr auto RespawnCamera_InitialLocOffset_InAir = 0x3950; // FVector
	//constexpr auto RespawnCamera_InitialLocOffset_OnGround = 0x3968; // FVector
	//constexpr auto RespawnCamera_InitialRotOffset_InAir = 0x3980; // FRotator
	//constexpr auto RespawnCamera_InitialRotOffset_OnGround = 0x3998; // FRotator
	//constexpr auto RespawnCamera_OffsetFromHit = 0x39b0; // float
	//constexpr auto bNextRespawnInAir = 0x39b4; // bool
	//constexpr auto RespawnCameraBehavior = 0x39b8; // FName
	//constexpr auto MaximumNumberOfPawnsToSearchForEmoteMusic = 0x39e8; // int32_t
	//constexpr auto PickupSwapHoldTime = 0x39f8; // float
	//constexpr auto bUseNewPickupSwapLogic = 0x39fc; // bool
	//constexpr auto SpectatorLevelStreamDistance = 0x3a00; // float
	//constexpr auto RespawnLevelStreamDistance = 0x3a04; // float
	//constexpr auto SpectatorStreamingChanged = 0x3a08; // FMulticastInlineDelegate
	//constexpr auto InGameLoadScreenChanged = 0x3a18; // FMulticastInlineDelegate
	//constexpr auto OnLocalPlayerChangedTeams = 0x3a28; // FMulticastInlineDelegate
	//constexpr auto LevelStreamRequestHandshakeState = 0x3a58; // FLevelStreamRequestHandshakeState
	//constexpr auto OnCreativePlotLinkedVolumeChanged = 0x3a90; // FMulticastInlineDelegate
	//constexpr auto OnClientLeaveIsland = 0x3aa0; // FMulticastInlineDelegate
	//constexpr auto OnClientForcedOffIsland = 0x3ab0; // FMulticastInlineDelegate
	//constexpr auto OnMakeNewCreativePlotFinished = 0x3ad0; // FMulticastInlineDelegate
	//constexpr auto OnDestroyCreativePlotFinished = 0x3ae0; // FMulticastInlineDelegate
	//constexpr auto OnRestoreCreativePlotFinished = 0x3af0; // FMulticastInlineDelegate
	//constexpr auto OnDuplicateCreativePlotFinished = 0x3b00; // FMulticastInlineDelegate
	//constexpr auto OnIslandEntriesChanged = 0x3b10; // FMulticastInlineDelegate
	//constexpr auto OnUpdateCreativePlotName = 0x3b30; // FMulticastInlineDelegate
	//constexpr auto OnUpdateCreativeDescriptionTags = 0x3b40; // FMulticastInlineDelegate
	//constexpr auto RespawnCameraActor = 0x3b68; // ACameraActor*
	//constexpr auto bDelayedTeleporting = 0x3b70; // bool
	//constexpr auto bBlockTeleporting = 0x3b71; // bool
	//constexpr auto MaxPlotCount = 0x3b74; // int32_t
	//constexpr auto InGameMatchmakingReadyCheckStarted = 0x3bd8; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingReadyCheckComplete = 0x3be8; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingReadyCheckCanceled = 0x3bf8; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingStarted = 0x3c08; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingComplete = 0x3c18; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingStateChanged = 0x3c28; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingQueuedStatusUpdated = 0x3c38; // FMulticastInlineDelegate
	//constexpr auto InGameMatchmakingError = 0x3c48; // FMulticastInlineDelegate
	//constexpr auto OnInGameMatchmakingCanceled = 0x3c58; // FMulticastInlineDelegate
	//constexpr auto OnInGameMatchmakingUpdateCheckFailed = 0x3c68; // FMulticastInlineDelegate
	//constexpr auto OnInGameContentDownloadStarted = 0x3c78; // FMulticastInlineDelegate
	//constexpr auto bNoInGameMatchmaking = 0x3c88; // bool
	//constexpr auto AudioOnExitAircraft = 0x3cc0; // USoundBase*
	//constexpr auto AudioOnExitAircraftHornDoppler = 0x3cc8; // USoundBase*
	//constexpr auto MinQuickChatCooldown = 0x3cd0; // float
	//constexpr auto QuickChatOffCooldownTime = 0x3cd4; // float
	//constexpr auto bMarkedAlive = 0x3cd8; // bool
	//constexpr auto CreativeIslands = 0x3ce0; // TArray<FCreativeIslandData>
	//constexpr auto LastUsedSavePlot = 0x3cf0; // FString
	//constexpr auto bIsAllowedToPublish = 0x3d00; // bool
	//constexpr auto GamepadSettingsAssetPtr = 0x3d08; // TSoftObjectPtr<UFortGamepadSettings>
	//constexpr auto TeamMemberIndicatorColor = 0x3d48; // FLinearColor
	//constexpr auto bMatchStatsForPlayerSent = 0x3d80; // bool
	//constexpr auto bAddedBookProgressStatsToGamemode = 0x3d81; // bool
	//constexpr auto bHasSentMatchEndedQuestProgress = 0x3d82; // bool
	//constexpr auto QuickBarDefinitions0x3 = 0x3d88; // FQuickBarData
	//constexpr auto bEnableBroadcastRemoteClientInfo = 0x3dc9; // bool
	//constexpr auto BroadcastRemoteClientInfo = 0x3dd0; // AFortBroadcastRemoteClientInfo*
	//constexpr auto StrongMyHero = 0x3de0; // UFortHero*
	//constexpr auto ClientGameWorldHolds = 0x3de8; // TArray<TWeakObjectPtr<UObject>>
	//constexpr auto EndMatchHeartbeatTimerDelay = 0x3e20; // float
	//constexpr auto EndMatchHeartbeatTimestamp = 0x3e28; // double
	//constexpr auto WarmupPlayerStart = 0x3e30; // AFortPlayerStartWarmup*
	//constexpr auto FullScreenScoreboardInputComponent = 0x3e38; // UInputComponent*
	//constexpr auto CurrentFullscreenInputComponent = 0x3e40; // UInputComponent*
	//constexpr auto GameChannelRecommendationInputComponent = 0x3e48; // UInputComponent*
	//constexpr auto SocialNotificationInputComponent = 0x3e50; // UInputComponent*
	//constexpr auto bUseTrapPicker = 0x3fc5; // bool
	//constexpr auto DoubleTapEditTime = 0x4028; // float
	//constexpr auto MatchReport = 0x4030; // UAthenaPlayerMatchReport*
	//constexpr auto MinimapIndicatorClass = 0x4048; // UFortMiniMapTeamIndicators*
	//constexpr auto MinimapChallengeIndicatorClass = 0x4050; // UFortMiniMapChallengeIndicators*
	//constexpr auto MinimapChallengeIndicators = 0x4058; // UFortMiniMapChallengeIndicators*
	//constexpr auto bEnableInGameChallengeLocationIndicators = 0x4060; // bool
	//constexpr auto SquadMarkerActorClass = 0x4068; // AFortPlayerMarkerBase*
	//constexpr auto BuildingsCreated = 0x407c; // int32_t
	//constexpr auto BuildingsEdited = 0x4080; // int32_t
	//constexpr auto BuildingsRepaired = 0x4084; // int32_t
	//constexpr auto BuildingsUpgraded = 0x4088; // int32_t
	//constexpr auto BuildingActionDoneLastAtTime = 0x408c; // float
	//constexpr auto BuildingMatchStats = 0x4090; // FBuildingStats
	//constexpr auto BuildingAnalyticsArray = 0x40b0; // TArray<FBuildingEditAnalyticEvent>
	//constexpr auto TimeStartedTrackingBuildingAnalytics = 0x40c0; // float
	//constexpr auto CreativePlotLinkedVolume = 0x41a0; // AFortVolume*
	//constexpr auto CreativePlotSessionData = 0x41a8; // FCreativePlotSessionData
	//constexpr auto OwnedPortal = 0x41c0; // AFortAthenaCreativePortal*
	//constexpr auto OwnedPartyRiftPortal = 0x41c8; // AFortAthenaPartyRiftPortal*
	//constexpr auto OnHUDMessageToggled = 0x4218; // FMulticastInlineDelegate
	//constexpr auto CachedPurchasedItems = 0x4228; // TArray<FItemAndCount>
	//constexpr auto CurrentPlayset = 0x4250; // UFortPlaysetItemDefinition*
	//constexpr auto DestructedBuildingInGridTimeoutOverride = 0x4258; // float
	//constexpr auto ClientRespawnText = 0x4260; // FText
	//constexpr auto ClientRebootingText = 0x4278; // FText
	//constexpr auto ClientIslandTravelText = 0x4290; // FText
	//constexpr auto ClientTravelToCreativeHubText = 0x42a8; // FText
	//constexpr auto VolumesLoading = 0x42c0; // TArray<AActor*>
	//constexpr auto VolumesUnloading = 0x42d0; // TArray<AActor*>
	//constexpr auto MarkerComponent = 0x42e0; // UAthenaMarkerComponent*
	//constexpr auto ResurrectionComponent = 0x42e8; // UAthenaResurrectionComponent*
	//constexpr auto SeasonItemComponent = 0x42f0; // UFortControllerComponent_SeasonItem*
	//constexpr auto HeldDeviceUsageComponent = 0x4300; // UFortControllerComponent_HeldDeviceUsage*
	//constexpr auto XPComponent = 0x4320; // UFortPlayerControllerAthenaXPComponent*
	//constexpr auto DiscoverabilityComponent = 0x4328; // UFortControllerComponent_MapDiscoverability*
	//constexpr auto TransientQuestsComponent = 0x4330; // UFortControllerComponent_TransientQuests*
	//constexpr auto SkydiveFeedback = 0x4338; // UFortControllerComponent_SkydiveFeedback*
	//constexpr auto ContextualChallenges = 0x4340; // UFortControllerComponent_ContextualChallenges*
	//constexpr auto IndicatedActorManagementComponent = 0x4348; // UFortControllerComponent_IndicatedActorManagement*
	//constexpr auto LocalizationServiceComponent = 0x4350; // UFortControllerComponent_LocalizationService*
	//constexpr auto ToxicityServiceComponent = 0x4358; // UFortControllerComponent_ToxicityService*
	//constexpr auto RechargingWeaponsComponent = 0x4360; // UFortControllerComponent_RechargeWeapons*
	//constexpr auto InventoryServiceComponent = 0x4368; // UFortControllerComponent_InventoryService*
	//constexpr auto RadiusTrackerComponent = 0x4370; // UFortControllerComponent_RadiusTracker*
	//constexpr auto MinigameActivityComponent = 0x4378; // UFortControllerComponent_MinigameActivity*
	//constexpr auto CreativeAnalyticsComponent = 0x4380; // UCreativeAnalyticsComponent*
	//constexpr auto SightWeatherCapRadius = 0x4388; // FScalableFloat
	//constexpr auto TimeSinceLastCreativeSpawn = 0x43b0; // double
	//constexpr auto IgnoreSignifanceBasedCustomDepthRendering = 0x43d8; // FCompositeBool
	//constexpr auto CreativeUserContentManager = 0x43f0; // UCreativeUserContentManager*
	//constexpr auto CreativeUserContentManagerClassSoftClassPtr = 0x43f8; // TSoftClassPtr<UObject>
	//constexpr auto CreativeObjectTrackingComponent = 0x4430; // UFortCreativeObjectTrackingComponent*
	//constexpr auto CreativeEntitlementComponent = 0x4438; // UFortCreativeEntitlementComponent*
	//constexpr auto OnPreviewScreenshotCameraActivated = 0x4440; // FMulticastInlineDelegate
	//constexpr auto CreativeItemToRemoveWhenAddingInventoryItem = 0x4548; // UFortWorldItem*
	//constexpr auto PrimaryQuickBarSlotItemGuids = 0x4570; // FQuickBarEquippedItemGuids
	//constexpr auto bIgnoreSpectatorViewRotation = 0x4640; // bool
	//constexpr auto bIgnorePlayerInfoAbandonStateForSpecialEventRtmm = 0x4641; // bool

constexpr auto FireAbilityToWeaponSwitchTime = 0x36F8;
constexpr auto OnAircraftStateChange = 0x3708;
constexpr auto OnItemDropSpawnedDelegate = 0x3718;
constexpr auto OnItemDroppedDueToOverflow = 0x3728;
constexpr auto OnCreativePermissionsChanged = 0x3738;
constexpr auto SwappingItemDefinition = 0x3748;
constexpr auto WinScreenDelayTime = 0x3750;
constexpr auto bSkipPlayWinEffects = 0x3754;
constexpr auto bAllowPlayersCreditOnLeave = 0x3755;
constexpr auto bLockingOnFocalPoint = 0x3757;
constexpr auto FocalPoint = 0x3758;
constexpr auto FocalPointOffset = 0x3760;
constexpr auto FocalPointFOV = 0x3778;
constexpr auto FocalPointDuration = 0x377C;
constexpr auto OnUsingFocalPointChanged = 0x3788;
constexpr auto OnFocalPointActorChanged = 0x3798;
constexpr auto OnSkydiveLeaderChanged = 0x37A8;
constexpr auto OnClientDonationSuccessDelegate = 0x37B8;
constexpr auto SkydiveLeaderManualCameraTime = 0x3800;
constexpr auto InterpolatedSkydiveFollowerViewRotation = 0x3808;
constexpr auto SkydiveLeader = 0x3838;
constexpr auto OnPickupProjectileCreatedDelegate = 0x3848;
constexpr auto LastDownedVictim = 0x3858;
constexpr auto LastElimVictim = 0x3860;
constexpr auto OnCameraInStormWallChangeDelegate = 0x3870;
constexpr auto bLeaveDisconnectedPawnsInGame = 0x3898;
constexpr auto DisconnectedPawn = 0x38A0;
constexpr auto PreviousPawn = 0x38A8;
constexpr auto bReplicateViewTargetInventory = 0x38B0;
constexpr auto bHasHadValidPawn = 0x38B1;
constexpr auto bClientNotifiedOfWin = 0x38B1;
constexpr auto bClientNotifiedOfTeamWin = 0x38B1;
constexpr auto bClientNotifiedOfLoss = 0x38B1;
constexpr auto bHideWarmUpLoadingScreen = 0x38B1;
constexpr auto PlayersTalking = 0x38E0;
constexpr auto TalkingPlayersChanged = 0x38F0;
constexpr auto bHighlightRecordingEnabled = 0x3900;
constexpr auto bPlaceDangerMarkerWhenTargeting = 0x3901;
constexpr auto bDeferringStartRecordingHighlights = 0x3902;
constexpr auto HighlightGroupId = 0x3908;
constexpr auto CachedHighlightCount = 0x3918;
constexpr auto HighlightFirstKillTime = 0x391C;
constexpr auto HighlightKillMultiple = 0x3920;
constexpr auto HighlightDownMultiple = 0x3924;
constexpr auto HighlightKillCooldown = 0x3928;
constexpr auto HighlightKillRewindTime = 0x392C;
constexpr auto RespawnCamera_Time = 0x3930;
constexpr auto RespawnCamera_HoldPositionTime = 0x3934;
constexpr auto RespawnCamera_InitialLocOffset_InAir = 0x3938;
constexpr auto RespawnCamera_InitialLocOffset_OnGround = 0x3950;
constexpr auto RespawnCamera_InitialRotOffset_InAir = 0x3968;
constexpr auto RespawnCamera_InitialRotOffset_OnGround = 0x3980;
constexpr auto RespawnCamera_OffsetFromHit = 0x3998;
constexpr auto bNextRespawnInAir = 0x399C;
constexpr auto RespawnCameraBehavior = 0x39A0;
constexpr auto MaximumNumberOfPawnsToSearchForEmoteMusic = 0x39D0;
constexpr auto PickupSwapHoldTime = 0x39E0;
constexpr auto bUseNewPickupSwapLogic = 0x39E4;
constexpr auto SpectatorLevelStreamDistance = 0x39E8;
constexpr auto RespawnLevelStreamDistance = 0x39EC;
constexpr auto SpectatorStreamingChanged = 0x39F0;
constexpr auto InGameLoadScreenChanged = 0x3A00;
constexpr auto OnLocalPlayerChangedTeams = 0x3A10;
constexpr auto LevelStreamRequestHandshakeState = 0x3A40;
constexpr auto OnCreativePlotLinkedVolumeChanged = 0x3A78;
constexpr auto OnClientLeaveIsland = 0x3A88;
constexpr auto OnClientForcedOffIsland = 0x3A98;
constexpr auto OnMakeNewCreativePlotFinished = 0x3AB8;
constexpr auto OnDestroyCreativePlotFinished = 0x3AC8;
constexpr auto OnRestoreCreativePlotFinished = 0x3AD8;
constexpr auto OnDuplicateCreativePlotFinished = 0x3AE8;
constexpr auto OnIslandEntriesChanged = 0x3AF8;
constexpr auto OnUpdateCreativePlotName = 0x3B18;
constexpr auto OnUpdateCreativeDescriptionTags = 0x3B28;
constexpr auto RespawnCameraActor = 0x3B50;
constexpr auto bDelayedTeleporting = 0x3B58;
constexpr auto bBlockTeleporting = 0x3B59;
constexpr auto MaxPlotCount = 0x3B5C;
constexpr auto InGameMatchmakingReadyCheckStarted = 0x3BC0;
constexpr auto InGameMatchmakingReadyCheckComplete = 0x3BD0;
constexpr auto InGameMatchmakingReadyCheckCanceled = 0x3BE0;
constexpr auto InGameMatchmakingStarted = 0x3BF0;
constexpr auto InGameMatchmakingComplete = 0x3C00;
constexpr auto InGameMatchmakingStateChanged = 0x3C10;
constexpr auto InGameMatchmakingQueuedStatusUpdated = 0x3C20;
constexpr auto InGameMatchmakingError = 0x3C30;
constexpr auto OnInGameMatchmakingCanceled = 0x3C40;
constexpr auto OnInGameMatchmakingUpdateCheckFailed = 0x3C50;
constexpr auto OnInGameContentDownloadStarted = 0x3C60;
constexpr auto bNoInGameMatchmaking = 0x3C70;
constexpr auto AudioOnExitAircraft = 0x3CA8;
constexpr auto AudioOnExitAircraftHornDoppler = 0x3CB0;
constexpr auto MinQuickChatCooldown = 0x3CB8;
constexpr auto QuickChatOffCooldownTime = 0x3CBC;
constexpr auto bMarkedAlive = 0x3CC0;
constexpr auto CreativeIslands = 0x3CC8;
constexpr auto LastUsedSavePlot = 0x3CD8;
constexpr auto bIsAllowedToPublish = 0x3CE8;
constexpr auto GamepadSettingsAssetPtr = 0x3CF0;
constexpr auto TeamMemberIndicatorColor = 0x3D30;
constexpr auto bMatchStatsForPlayerSent = 0x3D68;
constexpr auto bAddedBookProgressStatsToGamemode = 0x3D69;
constexpr auto bHasSentMatchEndedQuestProgress = 0x3D6A;
constexpr auto QuickBarDefinitions = 0x3D70;
constexpr auto bEnableBroadcastRemoteClientInfo = 0x3DB1;
constexpr auto BroadcastRemoteClientInfo = 0x3DB8;
constexpr auto StrongMyHero = 0x3DC8;
constexpr auto ClientGameWorldHolds = 0x3DD0;
constexpr auto EndMatchHeartbeatTimerDelay = 0x3E08;
constexpr auto EndMatchHeartbeatTimestamp = 0x3E10;
constexpr auto WarmupPlayerStart = 0x3E18;
constexpr auto FullScreenScoreboardInputComponent = 0x3E20;
constexpr auto CurrentFullscreenInputComponent = 0x3E28;
constexpr auto GameChannelRecommendationInputComponent = 0x3E30;
constexpr auto SocialNotificationInputComponent = 0x3E38;
constexpr auto bUseTrapPicker = 0x3FAD;
constexpr auto DoubleTapEditTime = 0x4010;
constexpr auto MatchReport = 0x4018;
constexpr auto MinimapIndicatorClass = 0x4030;
constexpr auto MinimapChallengeIndicatorClass = 0x4038;
constexpr auto MinimapChallengeIndicators = 0x4040;
constexpr auto bEnableInGameChallengeLocationIndicators = 0x4048;
constexpr auto SquadMarkerActorClass = 0x4050;
constexpr auto BuildingsCreated = 0x4064;
constexpr auto BuildingsEdited = 0x4068;
constexpr auto BuildingsRepaired = 0x406C;
constexpr auto BuildingsUpgraded = 0x4070;
constexpr auto BuildingActionDoneLastAtTime = 0x4074;
constexpr auto BuildingMatchStats = 0x4078;
constexpr auto BuildingAnalyticsArray = 0x4098;
constexpr auto TimeStartedTrackingBuildingAnalytics = 0x40A8;
constexpr auto CreativePlotLinkedVolume = 0x4188;
constexpr auto CreativePlotSessionData = 0x4190;
constexpr auto OwnedPortal = 0x41A8;
constexpr auto OwnedPartyRiftPortal = 0x41B0;
constexpr auto OnHUDMessageToggled = 0x4200;
constexpr auto CachedPurchasedItems = 0x4210;
constexpr auto CurrentPlayset = 0x4238;
constexpr auto DestructedBuildingInGridTimeoutOverride = 0x4240;
constexpr auto ClientRespawnText = 0x4248;
constexpr auto ClientRebootingText = 0x4260;
constexpr auto ClientIslandTravelText = 0x4278;
constexpr auto ClientTravelToCreativeHubText = 0x4290;
constexpr auto VolumesLoading = 0x42A8;
constexpr auto VolumesUnloading = 0x42B8;
constexpr auto MarkerComponent = 0x42C8;
constexpr auto ResurrectionComponent = 0x42D0;
constexpr auto SeasonItemComponent = 0x42D8;
constexpr auto HeldDeviceUsageComponent = 0x42E8;
constexpr auto XPComponent = 0x4308;
constexpr auto DiscoverabilityComponent = 0x4310;
constexpr auto TransientQuestsComponent = 0x4318;
constexpr auto SkydiveFeedback = 0x4320;
constexpr auto ContextualChallenges = 0x4328;
constexpr auto IndicatedActorManagementComponent = 0x4330;
constexpr auto LocalizationServiceComponent = 0x4338;
constexpr auto ToxicityServiceComponent = 0x4340;
constexpr auto RechargingWeaponsComponent = 0x4348;
constexpr auto InventoryServiceComponent = 0x4350;
constexpr auto RadiusTrackerComponent = 0x4358;
constexpr auto MinigameActivityComponent = 0x4360;
constexpr auto CreativeAnalyticsComponent = 0x4368;
constexpr auto SightWeatherCapRadius = 0x4370;
constexpr auto TimeSinceLastCreativeSpawn = 0x4398;
constexpr auto IgnoreSignifanceBasedCustomDepthRendering = 0x43C0;
constexpr auto CreativeUserContentManager = 0x43D8;
constexpr auto CreativeUserContentManagerClassSoftClassPtr = 0x43E0;
constexpr auto CreativeObjectTrackingComponent = 0x4418;
constexpr auto CreativeEntitlementComponent = 0x4420;
constexpr auto OnPreviewScreenshotCameraActivated = 0x4428;
constexpr auto CreativeItemToRemoveWhenAddingInventoryItem = 0x4530;
constexpr auto PrimaryQuickBarSlotItemGuids = 0x4558;
constexpr auto bIgnoreSpectatorViewRotation = 0x4628;
constexpr auto bIgnorePlayerInfoAbandonStateForSpecialEventRtmm = 0x4629;
}


namespace FortPlayerPawnStats {


	//constexpr auto MaxJumpTime = 0xc0; // float
	//constexpr auto MaxStamina = 0xc4; // float
	//constexpr auto StaminaRegenRate = 0xc8; // float
	//constexpr auto StaminaRegenDelay = 0xcc; // float
	//constexpr auto SprintingStaminaExpenditureRate = 0xd0; // float
	//constexpr auto PersonalVehicleFallingDamageTableRow = 0xd4; // FName

	constexpr auto MaxJumpTime = 0xC0;
	constexpr auto MaxStamina = 0xC4;
	constexpr auto StaminaRegenRate = 0xC8;
	constexpr auto StaminaRegenDelay = 0xCC;
	constexpr auto SprintingStaminaExpenditureRate = 0xD0;
	constexpr auto PersonalVehicleFallingDamageTableRow = 0xD4;

}

namespace playerCameraManager {

	//constexpr auto PCOwner = 0x280; // APlayerController*
	//constexpr auto TransformComponent = 0x288; // USceneComponent*
	//constexpr auto DefaultFOV = 0x294; // float
	//constexpr auto DefaultOrthoWidth = 0x29c; // float
	//constexpr auto DefaultAspectRatio = 0x2a4; // float
	//constexpr auto CameraCache = 0x310; // FCameraCacheEntry
	//constexpr auto LastFrameCameraCache = 0xa90; // FCameraCacheEntry
	//constexpr auto ViewTarget = 0x1210; // FTViewTarget
	//constexpr auto PendingViewTarget = 0x19a0; // FTViewTarget
	//constexpr auto CameraCachePrivate = 0x2160; // FCameraCacheEntry
	//constexpr auto LastFrameCameraCachePrivate = 0x28e0; // FCameraCacheEntry
	//constexpr auto ModifierList = 0x3060; // TArray<UCameraModifier*>
	//constexpr auto DefaultModifiers = 0x3070; // TArray<UCameraModifier*>
	//constexpr auto FreeCamDistance = 0x3080; // float
	//constexpr auto FreeCamOffset = 0x3088; // FVector
	//constexpr auto ViewTargetOffset = 0x30a0; // FVector
	//constexpr auto OnAudioFadeChangeEvent = 0x30b8; // FMulticastInlineDelegate
	//constexpr auto CameraLensEffects = 0x30e0; // TArray<TScriptInterface<ICameraLensEffectInterface>>
	//constexpr auto CachedCameraShakeMod = 0x30f0; // UCameraModifier_CameraShake*
	//constexpr auto AnimInstPool0x8 = 0x30f8; // UCameraAnimInst*
	//constexpr auto PostProcessBlendCache = 0x3138; // TArray<FPostProcessSettings>
	//constexpr auto ActiveAnims = 0x3158; // TArray<UCameraAnimInst*>
	//constexpr auto FreeAnims = 0x3168; // TArray<UCameraAnimInst*>
	//constexpr auto AnimCameraActor = 0x3178; // ACameraActor*
	//constexpr auto bClientSimulatingViewTarget = 0x3180; // char : 1
	//constexpr auto bUseClientSideCameraUpdates = 0x3180; // char : 1
	//constexpr auto bDefaultConstrainAspectRatio = 0x3180; // char : 1
	//constexpr auto bIsOrthographic = 0x3180; // char : 1
	//constexpr auto bGameCameraCutThisFrame = 0x3181; // char : 1
	//constexpr auto ViewPitchMin = 0x3184; // float
	//constexpr auto ViewPitchMax = 0x3188; // float
	//constexpr auto ViewYawMin = 0x318c; // float
	//constexpr auto ViewYawMax = 0x3190; // float
	//constexpr auto ViewRollMin = 0x3194; // float
	//constexpr auto ViewRollMax = 0x3198; // float
	//constexpr auto ServerUpdateCameraTimeout = 0x31a0; // float

	constexpr auto PCOwner = 0x270;
	constexpr auto TransformComponent = 0x278;
	constexpr auto DefaultFOV = 0x284;
	constexpr auto DefaultOrthoWidth = 0x28C;
	constexpr auto DefaultAspectRatio = 0x294;
	constexpr auto CameraCache = 0x300;
	constexpr auto LastFrameCameraCache = 0xA80;
	constexpr auto ViewTarget = 0x1200;
	constexpr auto PendingViewTarget = 0x1990;
	constexpr auto CameraCachePrivate = 0x2150;
	constexpr auto LastFrameCameraCachePrivate = 0x28D0;
	constexpr auto ModifierList = 0x3050;
	constexpr auto DefaultModifiers = 0x3060;
	constexpr auto FreeCamDistance = 0x3070;
	constexpr auto FreeCamOffset = 0x3078;
	constexpr auto ViewTargetOffset = 0x3090;
	constexpr auto OnAudioFadeChangeEvent = 0x30A8;
	constexpr auto CameraLensEffects = 0x30D0;
	constexpr auto CachedCameraShakeMod = 0x30E0;
	constexpr auto AnimInstPool = 0x30E8;
	constexpr auto PostProcessBlendCache = 0x3128;
	constexpr auto ActiveAnims = 0x3148;
	constexpr auto FreeAnims = 0x3158;
	constexpr auto AnimCameraActor = 0x3168;
	constexpr auto bIsOrthographic = 0x3170;
	constexpr auto bDefaultConstrainAspectRatio = 0x3170;
	constexpr auto bClientSimulatingViewTarget = 0x3170;
	constexpr auto bUseClientSideCameraUpdates = 0x3170;
	constexpr auto bGameCameraCutThisFrame = 0x3171;
	constexpr auto ViewPitchMin = 0x3174;
	constexpr auto ViewPitchMax = 0x3178;
	constexpr auto ViewYawMin = 0x317C;
	constexpr auto ViewYawMax = 0x3180;
	constexpr auto ViewRollMin = 0x3184;
	constexpr auto ViewRollMax = 0x3188;
	constexpr auto ServerUpdateCameraTimeout = 0x3190;

}


namespace FortProjectileAthena
{

	//constexpr auto FireStartLoc = 0xa00; // FVector_NetQuantize
	//constexpr auto PawnHitResult = 0xa20; // FHitResult
	//constexpr auto bExplodeOnPawnHit = 0xb00; // char : 1
	//constexpr auto bNoCollisionForNonOwningClients = 0xb00; // char : 1
	//constexpr auto bIgnoreActorsAttachedToFiringPawn = 0xb00; // char : 1
	//constexpr auto bProcessLocalHits = 0xb00; // char : 1
	//constexpr auto TimeToWaitForPawnHitBeforeKillOnServer = 0xb04; // float
	//constexpr auto PredictedHitActor = 0xb58; // AActor*
	//constexpr auto PredictedHitComp = 0xb60; // UPrimitiveComponent*

	constexpr auto FireStartLoc = 0x9F0;
	constexpr auto PawnHitResult = 0xA10;
	constexpr auto bExplodeOnPawnHit = 0xAF0;
	constexpr auto bNoCollisionForNonOwningClients = 0xAF0;
	constexpr auto bIgnoreActorsAttachedToFiringPawn = 0xAF0;
	constexpr auto bProcessLocalHits = 0xAF0;
	constexpr auto TimeToWaitForPawnHitBeforeKillOnServer = 0xAF4;
	constexpr auto PredictedHitActor = 0xB48;
	constexpr auto PredictedHitComp = 0xB50;

}

namespace FortPickup {

	//constexpr auto bUsePickupWidget = 0x290; // bool
	//constexpr auto bSuppressInteractionWidget = 0x291; // bool
	//constexpr auto bWeaponsCanBeAutoPickups = 0x292; // bool
	//constexpr auto bAutoUpgradeWeapons = 0x293; // bool
	//constexpr auto bDoServerHandlePickupTrace = 0x294; // bool
	//constexpr auto SimulatingTooLongLength = 0x298; // float
	//constexpr auto OnPickup = 0x2a0; // FMulticastInlineDelegate
	//constexpr auto OnPickupAttempted = 0x2b0; // FMulticastInlineDelegate
	//constexpr auto OnPickupDespawned = 0x2c0; // FMulticastInlineDelegate
	//constexpr auto OnPickupDestroyed = 0x2d0; // FMulticastInlineDelegate
	//constexpr auto OnPickupCombined = 0x2e0; // FMulticastInlineDelegate
	//constexpr auto OnSetPawnWhoDroppedPickup = 0x2f0; // FMulticastInlineDelegate
	//constexpr auto PrimaryPickupItemEntry = 0x308; // FFortItemEntry
	//constexpr auto MultiItemPickupEntries = 0x4a8; // TArray<FFortItemEntry>
	//constexpr auto PickupLocationData = 0x4b8; // FFortPickupLocationData
	//constexpr auto PickupSourceTypeFlags = 0x550; // EFortPickupSourceTypeFlag
	//constexpr auto PickupSpawnSource = 0x551; // EFortPickupSpawnSource
	//constexpr auto OptionalOwnerID = 0x552; // int16_t
	//constexpr auto DropperID = 0x554; // int16_t
	//constexpr auto OptionalMissionGuid = 0x558; // FGuid
	//constexpr auto PrimaryPickupDummyItem = 0x568; // UFortItem*
	//constexpr auto PickupEffectBlueprint = 0x570; // TWeakObjectPtr<AFortPickupEffect>
	//constexpr auto TouchCapsule = 0x578; // UCapsuleComponent*
	//constexpr auto MovementComponent = 0x580; // UProjectileMovementComponent*
	//constexpr auto WaterInteractionComponent = 0x588; // UFortWaterInteractionComponent*
	//constexpr auto LinkToActorComponent = 0x590; // UFortLinkToActorComponent*
	//constexpr auto bPickedUp = 0x598; // bool
	//constexpr auto bSplitOnPickup = 0x599; // bool
	//constexpr auto bTossedFromContainer = 0x59a; // bool
	//constexpr auto bForceHideMinimapIndicator = 0x59b; // bool
	//constexpr auto bCombinePickupsWhenTossCompletes = 0x59c; // bool
	//constexpr auto bServerStoppedSimulation = 0x59d; // bool
	//constexpr auto bClientUseInterpolationOnly = 0x59e; // bool
	//constexpr auto ServerImpactSoundFlash = 0x59f; // char
	//constexpr auto LastLandedSoundPlayTime = 0x5a0; // float
	//constexpr auto OverrideInteractAimRadius = 0x5a4; // float
	//constexpr auto LandSoundZForceThreshold = 0x5a8; // float
	//constexpr auto DefaultFlyTime = 0x5ac; // float
	//constexpr auto bForceDefaultFlyTime = 0x5b0; // bool
	//constexpr auto DroppedLoopingSoundComp = 0x5b8; // UAudioComponent*
	//constexpr auto LandedSoundOverride = 0x5c0; // USoundBase*
	//constexpr auto PawnWhoDroppedPickup = 0x5c8; // AFortPawn*
	//constexpr auto CachedSpecialActorIdx = 0x5d0; // int32_t
	//constexpr auto SpecialActorID = 0x5d4; // FName
	//constexpr auto MinimapIndicator = 0x5d8; // UFortSimpleMiniMapIndicator*
	//constexpr auto HUDLabel = 0x5e0; // UFortSlateHUDIndicator*
	//constexpr auto bRandomRotation = 0x6bc; // bool
	//constexpr auto VolumeAtSpawn = 0x6c0; // AActor*
	//constexpr auto DespawnTime = 0x6e0; // float
	//constexpr auto StormDespawnTime = 0x6e4; // float
	//constexpr auto StartSimulatingTime = 0x6e8; // float

	constexpr auto bUsePickupWidget = 0x280;
	constexpr auto bSuppressInteractionWidget = 0x281;
	constexpr auto bWeaponsCanBeAutoPickups = 0x282;
	constexpr auto bAutoUpgradeWeapons = 0x283;
	constexpr auto bDoServerHandlePickupTrace = 0x284;
	constexpr auto SimulatingTooLongLength = 0x288;
	constexpr auto OnPickup = 0x290;
	constexpr auto OnPickupAttempted = 0x2A0;
	constexpr auto OnPickupDespawned = 0x2B0;
	constexpr auto OnPickupDestroyed = 0x2C0;
	constexpr auto OnPickupCombined = 0x2D0;
	constexpr auto OnSetPawnWhoDroppedPickup = 0x2E0;
	constexpr auto PrimaryPickupItemEntry = 0x2F8;
	constexpr auto MultiItemPickupEntries = 0x498;
	constexpr auto PickupLocationData = 0x4A8;
	constexpr auto PickupSourceTypeFlags = 0x540;
	constexpr auto PickupSpawnSource = 0x541;
	constexpr auto OptionalOwnerID = 0x542;
	constexpr auto DropperID = 0x544;
	constexpr auto OptionalMissionGuid = 0x548;
	constexpr auto PrimaryPickupDummyItem = 0x558;
	constexpr auto PickupEffectBlueprint = 0x560;
	constexpr auto TouchCapsule = 0x568;
	constexpr auto MovementComponent = 0x570;
	constexpr auto WaterInteractionComponent = 0x578;
	constexpr auto LinkToActorComponent = 0x580;
	constexpr auto bPickedUp = 0x588;
	constexpr auto bSplitOnPickup = 0x589;
	constexpr auto bTossedFromContainer = 0x58A;
	constexpr auto bForceHideMinimapIndicator = 0x58B;
	constexpr auto bCombinePickupsWhenTossCompletes = 0x58C;
	constexpr auto bServerStoppedSimulation = 0x58D;
	constexpr auto bClientUseInterpolationOnly = 0x58E;
	constexpr auto ServerImpactSoundFlash = 0x58F;
	constexpr auto LastLandedSoundPlayTime = 0x590;
	constexpr auto OverrideInteractAimRadius = 0x594;
	constexpr auto LandSoundZForceThreshold = 0x598;
	constexpr auto DefaultFlyTime = 0x59C;
	constexpr auto bForceDefaultFlyTime = 0x5A0;
	constexpr auto DroppedLoopingSoundComp = 0x5A8;
	constexpr auto LandedSoundOverride = 0x5B0;
	constexpr auto PawnWhoDroppedPickup = 0x5B8;
	constexpr auto CachedSpecialActorIdx = 0x5C0;
	constexpr auto SpecialActorID = 0x5C4;
	constexpr auto MinimapIndicator = 0x5C8;
	constexpr auto HUDLabel = 0x5D0;
	constexpr auto bRandomRotation = 0x6AC;
	constexpr auto VolumeAtSpawn = 0x6B0;
	constexpr auto DespawnTime = 0x6D0;
	constexpr auto StormDespawnTime = 0x6D4;
	constexpr auto StartSimulatingTime = 0x6D8;

}


namespace FortPlayerStateAthena {


	//constexpr auto PersonalLobbyAction = 0xe8c; // int32_t
	//constexpr auto RespawnData = 0xe90; // FFortRespawnData
	//constexpr auto ReplicatedTeamMemberState = 0xee8; // ETeamMemberState
	//constexpr auto TeamMemberState = 0xee9; // ETeamMemberState
	//constexpr auto TeamMemberStateRepTime = 0xeec; // float
	//constexpr auto OnTeamIndexChangedDelegate = 0xf10; // FMulticastInlineDelegate
	//constexpr auto OnSquadIdChangedDelegate = 0xf20; // FMulticastInlineDelegate
	//constexpr auto bHasWonAGame = 0xf78; // bool
	//constexpr auto TeamKillScore = 0xf7c; // int32_t
	//constexpr auto KillsWhileAthenaGadgetEquippedMap = 0xf80; // TMap<UAthenaGadgetItemDefinition*, int32_t>
	//constexpr auto DamageDealtToBigHealthProps = 0xfd0; // TMap<FString, float>
	//constexpr auto TeamIndex = 0x1020; // char
	//constexpr auto TeamScorePlacement = 0x1024; // int32_t
	//constexpr auto TeamScore = 0x1028; // int32_t
	//constexpr auto Place = 0x102c; // int32_t
	//constexpr auto DownScore = 0x1030; // int32_t
	//constexpr auto KillScore = 0x1034; // int32_t
	//constexpr auto SeasonLevelUIDisplay = 0x1038; // int32_t
	//constexpr auto HumanKillScore = 0x103c; // int32_t
	//constexpr auto AIKillCount = 0x1078; // int32_t
	//constexpr auto NumChestsOpened = 0x1080; // int32_t
	//constexpr auto NumAmmoCansOpened = 0x1088; // int32_t
	//constexpr auto NumSupplyDropsOpened = 0x1090; // int32_t
	//constexpr auto NumLlamasOpened = 0x1098; // int32_t
	//constexpr auto NumForagedItemsConsumed = 0x10a0; // int32_t
	//constexpr auto NumMinutesAlive = 0x10a8; // int32_t
	//constexpr auto NumBronzeCoinsCollected = 0x10b0; // int32_t
	//constexpr auto NumSilverCoinsCollected = 0x10b8; // int32_t
	//constexpr auto NumGoldCoinsCollected = 0x10c0; // int32_t
	//constexpr auto TotalPlayerScore = 0x10c8; // int32_t
	//constexpr auto PointsAddedToScore = 0x10d0; // FMulticastInlineDelegate
	//constexpr auto TeamScoreChanged = 0x10e0; // FMulticastInlineDelegate
	//constexpr auto TeamPlacementChanged = 0x10f0; // FMulticastInlineDelegate
	//constexpr auto PlaceChanged = 0x1100; // FMulticastInlineDelegate
	//constexpr auto TeamAverageDamageChanged = 0x1110; // FMulticastInlineDelegate
	//constexpr auto MatchAbandonStateChanged = 0x1120; // FMulticastInlineDelegate
	//constexpr auto FriendsInSquad = 0x1130; // TArray<AFortPlayerStateAthena*>
	//constexpr auto FriendsInMatch = 0x1140; // TMap<AFortPlayerStateAthena*, bool>
	//constexpr auto FriendsInSquadAtPartnerCafe = 0x1190; // TArray<AFortPlayerStateAthena*>
	//constexpr auto StormSurgeEffectCount = 0x11f0; // char
	//constexpr auto TeamAverageDamageDealt = 0x11f2; // uint16_t
	//constexpr auto SquadId = 0x11f4; // char
	//constexpr auto bThankedBusDriver = 0x11f5; // char : 1
	//constexpr auto bDidNotThankBusDriver = 0x11f5; // char : 1
	//constexpr auto bUsingAnonymousMode = 0x11f5; // char : 1
	//constexpr auto bUsingAnonymousCharacterMode = 0x11f5; // char : 1
	//constexpr auto bShowingSeasonLevel = 0x11f5; // char : 1
	//constexpr auto PlayerNameCustomOverride = 0x11f8; // FText
	//constexpr auto bIsTalking = 0x1210; // bool
	//constexpr auto bIsMuted = 0x1211; // bool
	//constexpr auto OnPersistenceErrorTypeChanged = 0x1428; // FMulticastInlineDelegate
	//constexpr auto MetricInformation = 0x1458; // FDetailedMetricInformation
	//constexpr auto SimpleMetricInformation = 0x1468; // FSimpleMetricInformation
	//constexpr auto SecondsAlive = 0x14e0; // int32_t
	//constexpr auto TimeOfPawnCreation = 0x14e4; // int32_t
	//constexpr auto bIsDisconnected = 0x14ec; // bool
	//constexpr auto GameModeIcon = 0x1528; // UTexture2D*
	//constexpr auto DeathInfo = 0x1530; // FDeathInfo
	//constexpr auto ChangeTeamInfo = 0x15d0; // FChangeTeamInfo
	//constexpr auto bResurrectionChipDisabled = 0x1640; // bool
	//constexpr auto ResurrectionChipAvailable = 0x1648; // FFortResurrectionData
	//constexpr auto bResurrectingNow = 0x1670; // bool
	//constexpr auto RebootCounter = 0x1674; // int32_t
	//constexpr auto InteractingRebootVan = 0x1678; // ABuildingGameplayActorSpawnMachine*
	//constexpr auto MatchAbandonState = 0x1684; // EMatchAbandonState
	//constexpr auto bIsContributingToOverbudgetHeatmap = 0x1686; // char : 1
	//constexpr auto bIsAnAthenaGameParticipant = 0x1686; // char : 1
	//constexpr auto BotUniqueId = 0x1688; // FUniqueNetIdRepl
	//constexpr auto bPreserveSquad = 0x16b0; // bool
	//constexpr auto KeepPlayingTogetherVotingStatus = 0x16d0; // EKeepPlayingTogetherVotingStatus
	//constexpr auto KeepPlayingTogetherMatchmakingRegion = 0x16f0; // FString
	//constexpr auto InitialSquadSize = 0x1718; // char
	//constexpr auto SquadSizeIncrements = 0x1719; // char
	//constexpr auto SquadSizeDecrements = 0x171a; // char
	//constexpr auto PersistenceErrorType = 0x1768; // ECreativePersistenceErrorTypes

	constexpr auto PersonalLobbyAction = 0xE7C;
	constexpr auto RespawnData = 0xE80;
	constexpr auto ReplicatedTeamMemberState = 0xED8;
	constexpr auto TeamMemberState = 0xED9;
	constexpr auto TeamMemberStateRepTime = 0xEDC;
	constexpr auto OnTeamIndexChangedDelegate = 0xF00;
	constexpr auto OnSquadIdChangedDelegate = 0xF10;
	constexpr auto bHasWonAGame = 0xF68;
	constexpr auto TeamKillScore = 0xF6C;
	constexpr auto KillsWhileAthenaGadgetEquippedMap = 0xF70;
	constexpr auto DamageDealtToBigHealthProps = 0xFC0;
	constexpr auto TeamIndex = 0x1010;
	constexpr auto TeamScorePlacement = 0x1014;
	constexpr auto TeamScore = 0x1018;
	constexpr auto Place = 0x101C;
	constexpr auto DownScore = 0x1020;
	constexpr auto KillScore = 0x1024;
	constexpr auto SeasonLevelUIDisplay = 0x1028;
	constexpr auto HumanKillScore = 0x102C;
	constexpr auto AIKillCount = 0x1068;
	constexpr auto NumChestsOpened = 0x1070;
	constexpr auto NumAmmoCansOpened = 0x1078;
	constexpr auto NumSupplyDropsOpened = 0x1080;
	constexpr auto NumLlamasOpened = 0x1088;
	constexpr auto NumForagedItemsConsumed = 0x1090;
	constexpr auto NumMinutesAlive = 0x1098;
	constexpr auto NumBronzeCoinsCollected = 0x10A0;
	constexpr auto NumSilverCoinsCollected = 0x10A8;
	constexpr auto NumGoldCoinsCollected = 0x10B0;
	constexpr auto TotalPlayerScore = 0x10B8;
	constexpr auto PointsAddedToScore = 0x10C0;
	constexpr auto TeamScoreChanged = 0x10D0;
	constexpr auto TeamPlacementChanged = 0x10E0;
	constexpr auto PlaceChanged = 0x10F0;
	constexpr auto TeamAverageDamageChanged = 0x1100;
	constexpr auto MatchAbandonStateChanged = 0x1110;
	constexpr auto FriendsInSquad = 0x1120;
	constexpr auto FriendsInMatch = 0x1130;
	constexpr auto FriendsInSquadAtPartnerCafe = 0x1180;
	constexpr auto StormSurgeEffectCount = 0x11E0;
	constexpr auto TeamAverageDamageDealt = 0x11E2;
	constexpr auto SquadId = 0x11E4;
	constexpr auto bThankedBusDriver = 0x11E5;
	constexpr auto bDidNotThankBusDriver = 0x11E5;
	constexpr auto bUsingAnonymousMode = 0x11E5;
	constexpr auto bUsingAnonymousCharacterMode = 0x11E5;
	constexpr auto bShowingSeasonLevel = 0x11E5;
	constexpr auto PlayerNameCustomOverride = 0x11E8;
	constexpr auto bIsTalking = 0x1200;
	constexpr auto bIsMuted = 0x1201;
	constexpr auto OnPersistenceErrorTypeChanged = 0x1418;
	constexpr auto MetricInformation = 0x1448;
	constexpr auto SimpleMetricInformation = 0x1458;
	constexpr auto SecondsAlive = 0x14D0;
	constexpr auto TimeOfPawnCreation = 0x14D4;
	constexpr auto bIsDisconnected = 0x14DC;
	constexpr auto GameModeIcon = 0x1518;
	constexpr auto DeathInfo = 0x1520;
	constexpr auto ChangeTeamInfo = 0x15C0;
	constexpr auto bResurrectionChipDisabled = 0x1648;
	constexpr auto ResurrectionChipAvailable = 0x1650;
	constexpr auto bResurrectingNow = 0x1678;
	constexpr auto RebootCounter = 0x167C;
	constexpr auto InteractingRebootVan = 0x1680;
	constexpr auto MatchAbandonState = 0x168C;
	constexpr auto bIsAnAthenaGameParticipant = 0x168E;
	constexpr auto bIsContributingToOverbudgetHeatmap = 0x168E;
	constexpr auto BotUniqueId = 0x1690;
	constexpr auto bPreserveSquad = 0x16B8;
	constexpr auto KeepPlayingTogetherVotingStatus = 0x16D8;
	constexpr auto KeepPlayingTogetherMatchmakingRegion = 0x16F8;
	constexpr auto InitialSquadSize = 0x1720;
	constexpr auto SquadSizeIncrements = 0x1721;
	constexpr auto SquadSizeDecrements = 0x1722;
	constexpr auto PersistenceErrorType = 0x1770;

}


namespace ProceduralScatterActorContentVariation
{
	constexpr auto ActorClass = 0xe8; // AActor*
}

namespace FortWeaponItemDefinition {
	//constexpr auto WeaponSoundLibraries = 0x8d0; // TArray<USoundLibrary*>
	//constexpr auto WeaponOwnerSoundLibraries = 0x8e0; // TArray<USoundLibrary*>
	//constexpr auto WeaponActorClass = 0x8f0; // TSoftClassPtr<UObject>
	//constexpr auto WeaponMeshOverride = 0x918; // TSoftObjectPtr<USkeletalMesh>
	//constexpr auto IntrinsicOverrideWrap = 0x940; // TSoftObjectPtr<UAthenaItemWrapDefinition>
	//constexpr auto WeaponStatHandle = 0x968; // FDataTableRowHandle
	//constexpr auto WeaponRechargeAmmoRate = 0x978; // FScalableFloat
	//constexpr auto WeaponRechargeAmmoQuantity = 0x9a0; // FScalableFloat
	//constexpr auto AbilitySet = 0x9c8; // TSoftObjectPtr<UFortAbilitySet>
	//constexpr auto AlterationSlotsLoadoutRow = 0x9f0; // FName
	//constexpr auto BaselineAlterationSlotsLoadoutRow = 0x9f4; // FName
	//constexpr auto BaseAlteration = 0x9f8; // TSoftObjectPtr<UFortAlterationItemDefinition>
	//constexpr auto BaseCosmeticAlteration = 0xa20; // TSoftObjectPtr<UFortAlterationItemDefinition>
	//constexpr auto WeaponModSlots = 0xa48; // TArray<FFortWeaponModSlot>
	//constexpr auto PrimaryFireAbility = 0xa58; // TSoftClassPtr<UObject>
	//constexpr auto SecondaryFireAbility = 0xa80; // TSoftClassPtr<UObject>
	//constexpr auto ReloadAbility = 0xaa8; // TSoftClassPtr<UObject>
	//constexpr auto OnHitAbility = 0xad0; // TSoftClassPtr<UObject>
	//constexpr auto EquippedAbilities = 0xaf8; // TArray<TSoftClassPtr<UObject>>
	//constexpr auto EquippedAbilitySet = 0xb08; // TSoftObjectPtr<UFortAbilitySet>
	//constexpr auto EquippedCharacterParts = 0xb30; // TArray<UCustomCharacterPart*>
	//constexpr auto AmmoData = 0xb40; // TSoftObjectPtr<UFortWorldItemDefinition>
	//constexpr auto AdditionalDataFields = 0xb68; // TArray<UFortWeaponAdditionalData*>
	//constexpr auto LowAmmoPercentage = 0xb78; // float
	//constexpr auto TriggerType = 0xb7c; // EFortWeaponTriggerType
	//constexpr auto SecondaryTriggerType = 0xb7d; // EFortWeaponTriggerType
	//constexpr auto DisplayTier = 0xb7e; // EFortDisplayTier
	//constexpr auto bCanFireWhileInstigatorTethered = 0xb7f; // char : 1
	//constexpr auto bAllowTargetingDuringReload = 0xb7f; // char : 1
	//constexpr auto bTargetingPreventsReload = 0xb7f; // char : 1
	//constexpr auto bUsesPhantomReserveAmmo = 0xb7f; // char : 1
	//constexpr auto bAllowSecondaryFireToInterruptPrimary = 0xb7f; // char : 1
	//constexpr auto bShouldMagazineSizeDisplayInfinity = 0xb7f; // char : 1
	//constexpr auto bUsesCustomAmmoType = 0xb7f; // char : 1
	//constexpr auto bRechargeAmmoToClip = 0xb7f; // char : 1
	//constexpr auto bCanFireWhileNotTargetedInVehicle = 0xb80; // char : 1
	//constexpr auto bAlwaysChargeUpToMin = 0xb80; // char : 1
	//constexpr auto bNoFireOnReleaseBeforeMinChargeTime = 0xb80; // char : 1
	//constexpr auto bEndAbilityOnChargeEnd = 0xb80; // char : 1
	//constexpr auto bUpdateLastFireTimeOnDischarge = 0xb80; // char : 1
	//constexpr auto bReticleCornerOutsideSpreadRadius = 0xb80; // char : 1
	//constexpr auto bValidForLastEquipped = 0xb80; // char : 1
	//constexpr auto bRequestClientPreload = 0xb80; // char : 1
	//constexpr auto bEnableWeaponMeshOverrideUpdates = 0xb81; // char : 1
	//constexpr auto HitNotifyDuration = 0xb84; // float
	//constexpr auto ReticleImage = 0xb88; // TSoftObjectPtr<UTexture2D>
	//constexpr auto ReticleCornerAngles = 0xbb0; // TArray<float>
	//constexpr auto ReticleCenterImage = 0xbc0; // TSoftObjectPtr<UTexture2D>
	//constexpr auto ReticleCenterPerfectAimImage = 0xbe8; // TSoftObjectPtr<UTexture2D>
	//constexpr auto ReticleCenterImageOffset = 0xc10; // FVector2D
	//constexpr auto ReticleInvalidTargetImage = 0xc20; // TSoftObjectPtr<UTexture2D>
	//constexpr auto AnalyticTags = 0xc48; // FGameplayTagContainer
	//constexpr auto PlayerGrantedGameplayTags = 0xc68; // FGameplayTagContainer
	//constexpr auto ActualAnalyticFNames = 0xc88; // TArray<FName>
	//constexpr auto RequiredWeaponParent = 0xc98; // TSoftObjectPtr<UAthenaCosmeticItemDefinition>
	//constexpr auto CreativeTagsHelper = 0xcc0; // FFortCreativeTagsHelper
	//constexpr auto AdditionalData = 0xcd0; // UFortWeaponAdditionalData*
	constexpr auto WeaponSoundLibraries = 0x8D0;
	constexpr auto WeaponOwnerSoundLibraries = 0x8E0;
	constexpr auto WeaponActorClass = 0x8F0;
	constexpr auto WeaponMeshOverride = 0x918;
	constexpr auto IntrinsicOverrideWrap = 0x940;
	constexpr auto WeaponStatHandle = 0x968;
	constexpr auto WeaponRechargeAmmoRate = 0x978;
	constexpr auto WeaponRechargeAmmoQuantity = 0x9A0;
	constexpr auto AbilitySet = 0x9C8;
	constexpr auto AlterationSlotsLoadoutRow = 0x9F0;
	constexpr auto BaselineAlterationSlotsLoadoutRow = 0x9F4;
	constexpr auto BaseAlteration = 0x9F8;
	constexpr auto BaseCosmeticAlteration = 0xA20;
	constexpr auto WeaponModSlots = 0xA48;
	constexpr auto PrimaryFireAbility = 0xA58;
	constexpr auto SecondaryFireAbility = 0xA80;
	constexpr auto ReloadAbility = 0xAA8;
	constexpr auto OnHitAbility = 0xAD0;
	constexpr auto EquippedAbilities = 0xAF8;
	constexpr auto EquippedAbilitySet = 0xB08;
	constexpr auto EquippedCharacterParts = 0xB30;
	constexpr auto AmmoData = 0xB40;
	constexpr auto AdditionalDataFields = 0xB68;
	constexpr auto LowAmmoPercentage = 0xB78;
	constexpr auto TriggerType = 0xB7C;
	constexpr auto SecondaryTriggerType = 0xB7D;
	constexpr auto DisplayTier = 0xB7E;
	constexpr auto bRechargeAmmoToClip = 0xB7F;
	constexpr auto bUsesPhantomReserveAmmo = 0xB7F;
	constexpr auto bUsesCustomAmmoType = 0xB7F;
	constexpr auto bShouldMagazineSizeDisplayInfinity = 0xB7F;
	constexpr auto bAllowSecondaryFireToInterruptPrimary = 0xB7F;
	constexpr auto bAllowTargetingDuringReload = 0xB7F;
	constexpr auto bTargetingPreventsReload = 0xB7F;
	constexpr auto bCanFireWhileInstigatorTethered = 0xB7F;
	constexpr auto bCanFireWhileNotTargetedInVehicle = 0xB80;
	constexpr auto bAlwaysChargeUpToMin = 0xB80;
	constexpr auto bNoFireOnReleaseBeforeMinChargeTime = 0xB80;
	constexpr auto bEndAbilityOnChargeEnd = 0xB80;
	constexpr auto bUpdateLastFireTimeOnDischarge = 0xB80;
	constexpr auto bReticleCornerOutsideSpreadRadius = 0xB80;
	constexpr auto bValidForLastEquipped = 0xB80;
	constexpr auto bRequestClientPreload = 0xB80;
	constexpr auto bEnableWeaponMeshOverrideUpdates = 0xB81;
	constexpr auto HitNotifyDuration = 0xB84;
	constexpr auto ReticleImage = 0xB88;
	constexpr auto ReticleCornerAngles = 0xBB0;
	constexpr auto ReticleCenterImage = 0xBC0;
	constexpr auto ReticleCenterPerfectAimImage = 0xBE8;
	constexpr auto ReticleCenterImageOffset = 0xC10;
	constexpr auto ReticleInvalidTargetImage = 0xC20;
	constexpr auto AnalyticTags = 0xC48;
	constexpr auto PlayerGrantedGameplayTags = 0xC68;
	constexpr auto ActualAnalyticFNames = 0xC88;
	constexpr auto RequiredWeaponParent = 0xC98;
	constexpr auto CreativeTagsHelper = 0xCC0;
	constexpr auto AdditionalData = 0xCD0;

}

namespace FortPlayerStateZone {

	//constexpr auto OnCurrentPawnChanged = 0xae0; // FMulticastInlineDelegate
	//constexpr auto SpectatingTarget = 0xb08; // AFortPlayerStateZone*
	//constexpr auto Spectators = 0xb10; // FFortSpectatorZoneArray
	//constexpr auto OnSpectatorsRemovedEvent = 0xc40; // FMulticastInlineDelegate
	//constexpr auto OnSpectatorCountChangedEvent = 0xc50; // FMulticastInlineDelegate
	//constexpr auto OnSpectatingTargetChangedEvent = 0xc60; // FMulticastInlineDelegate
	//constexpr auto OnBeginSpectatingEvent = 0xc70; // FMulticastInlineDelegate
	//constexpr auto KickedFromSessionReason = 0xc98; // EFortKickReason
	//constexpr auto RS_Zone_Old0x23 = 0xc9c; // FReplicatedStatValues
	//constexpr auto CarriedObject = 0xdb8; // AFortCarriedObject*
	//constexpr auto NumRejoins = 0xdc0; // int32_t
	//constexpr auto OldTotalScoreStat = 0xdc4; // int32_t
	//constexpr auto bInvincibleDueToUI = 0xde0; // bool
	//constexpr auto CurrentHealth = 0xde4; // float
	//constexpr auto MaxHealth = 0xde8; // float
	//constexpr auto CurrentShield = 0xdec; // float
	//constexpr auto MaxShield = 0xdf0; // float
	//constexpr auto CurrentOvershield = 0xdf4; // float
	//constexpr auto MaxOvershield = 0xdf8; // float
	//constexpr auto CurrentSignalInStorm = 0xdfc; // float
	//constexpr auto MaxSignalInStorm = 0xe00; // float
	//constexpr auto bOvershieldBarVisible = 0xe04; // bool
	//constexpr auto OnOvershieldVisibilityChanged = 0xe08; // FMulticastInlineDelegate
	//constexpr auto AccumulatedItems = 0xe20; // TArray<FAccumulatedItemEntry>
	//constexpr auto OnAccumulatedItemsChanged = 0xe30; // FMulticastInlineDelegate
	//constexpr auto SimulatedAttributes = 0xe40; // TArray<FSimulatedAttributeEntry>
	//constexpr auto PendingDestroyedGadgetItemDefinition = 0xe50; // UFortGadgetItemDefinition*
	//constexpr auto bInAircraft = 0xe58; // char : 1
	//constexpr auto bHasEverSkydivedFromBus = 0xe58; // char : 1
	//constexpr auto bHasEverSkydivedFromBusAndLanded = 0xe58; // char : 1
	//constexpr auto QuickbarEquippedItems = 0xe60; // TArray<UFortItemDefinition*>

	constexpr auto OnCurrentPawnChanged = 0xAD0;
	constexpr auto SpectatingTarget = 0xAF8;
	constexpr auto Spectators = 0xB00;
	constexpr auto OnSpectatorsRemovedEvent = 0xC30;
	constexpr auto OnSpectatorCountChangedEvent = 0xC40;
	constexpr auto OnSpectatingTargetChangedEvent = 0xC50;
	constexpr auto OnBeginSpectatingEvent = 0xC60;
	constexpr auto KickedFromSessionReason = 0xC88;
	constexpr auto RS_Zone_Old = 0xC8C;
	constexpr auto CarriedObject = 0xDA8;
	constexpr auto NumRejoins = 0xDB0;
	constexpr auto OldTotalScoreStat = 0xDB4;
	constexpr auto bInvincibleDueToUI = 0xDD0;
	constexpr auto CurrentHealth = 0xDD4;
	constexpr auto MaxHealth = 0xDD8;
	constexpr auto CurrentShield = 0xDDC;
	constexpr auto MaxShield = 0xDE0;
	constexpr auto CurrentOvershield = 0xDE4;
	constexpr auto MaxOvershield = 0xDE8;
	constexpr auto CurrentSignalInStorm = 0xDEC;
	constexpr auto MaxSignalInStorm = 0xDF0;
	constexpr auto bOvershieldBarVisible = 0xDF4;
	constexpr auto OnOvershieldVisibilityChanged = 0xDF8;
	constexpr auto AccumulatedItems = 0xE10;
	constexpr auto OnAccumulatedItemsChanged = 0xE20;
	constexpr auto SimulatedAttributes = 0xE30;
	constexpr auto PendingDestroyedGadgetItemDefinition = 0xE40;
	constexpr auto bInAircraft = 0xE48;
	constexpr auto bHasEverSkydivedFromBus = 0xE48;
	constexpr auto bHasEverSkydivedFromBusAndLanded = 0xE48;
	constexpr auto QuickbarEquippedItems = 0xE50;

}

namespace FortPlaylist {

	//constexpr auto PlaylistId = 0x38; // int32_t
	//constexpr auto PlaylistName = 0x3c; // FName
	//constexpr auto GameType = 0x40; // EFortGameType
	//constexpr auto MinPlayers = 0x44; // int32_t
	//constexpr auto MaxPlayers = 0x48; // int32_t
	//constexpr auto bUnderfillMatchmaking = 0x4c; // bool
	//constexpr auto UnderfilledMaxPlayers = 0x50; // int32_t
	//constexpr auto bOverrideMaxPlayers = 0x54; // bool
	//constexpr auto MaxHumanAndBotParticipants = 0x58; // int32_t
	//constexpr auto MaxTeamCount = 0x5c; // int32_t
	//constexpr auto MaxTeamSize = 0x60; // int32_t
	//constexpr auto MaxSocialPartySize = 0x64; // int32_t
	//constexpr auto MaxSquadSize = 0x68; // int32_t
	//constexpr auto MaxSquads = 0x6c; // int32_t
	//constexpr auto EnforceSquadFill = 0x70; // bool
	//constexpr auto bAllowSquadFillOption = 0x71; // bool
	//constexpr auto bShouldFillWhenNoSquadFillOption = 0x72; // bool
	//constexpr auto bAllowJoinInProgress = 0x73; // bool
	//constexpr auto JoinInProgressMatchType = 0x78; // FText
	//constexpr auto EndOfMatchXpFirstElim = 0x90; // int32_t
	//constexpr auto EndOfMatchXpMultiplier = 0x94; // int32_t
	//constexpr auto UserOptions = 0x98; // UPlaylistUserOptions*
	//constexpr auto bEnableBackfillDuringWarmupPhase = 0xa0; // bool
	//constexpr auto TimeAfterWarmupToDisableBackfill = 0xa4; // float
	//constexpr auto RichPresenceAssetName = 0xa8; // FName
	//constexpr auto bAllowKeepPlayingTogether = 0xac; // bool
	//constexpr auto bAllowPartyRift = 0xad; // bool
	//constexpr auto bAllowSquadSizeTracking = 0xae; // bool
	//constexpr auto PreloadPersistentLevel = 0xb0; // TSoftObjectPtr<UWorld>
	//constexpr auto AdditionalLevels = 0xd8; // TArray<TSoftObjectPtr<UWorld>>
	//constexpr auto AdditionalLevelsServerOnly = 0xe8; // TArray<TSoftObjectPtr<UWorld>>
	//constexpr auto BuiltInGameFeaturePluginsToLoad = 0xf8; // TArray<FString>
	//constexpr auto OverrideLinkCodeToDownload = 0x108; // FString
	//constexpr auto GameFeaturePluginToActivateUntilDownloadedContentIsPresent = 0x118; // FString
	//constexpr auto DefaultFirstTeam = 0x128; // char
	//constexpr auto DefaultLastTeam = 0x129; // char
	//constexpr auto GameplayTagContainer = 0x130; // FGameplayTagContainer
	//constexpr auto FriendlyFireType = 0x150; // EFriendlyFireType
	//constexpr auto bUseFriendlyFireAimAssist = 0x151; // bool
	//constexpr auto LootLevel = 0x154; // int32_t
	//constexpr auto LootTagQuery = 0x158; // FGameplayTagQuery
	//constexpr auto BuildingLevelOverride = 0x1a0; // int32_t
	//constexpr auto DBNOType = 0x1a4; // EDBNOType
	//constexpr auto SpawnImmunityTime = 0x1a8; // FScalableFloat
	//constexpr auto SkippedGamePhaseNotification = 0x1d0; // TArray<EAthenaGamePhaseStep>
	//constexpr auto ModifierList = 0x1e0; // TArray<TSoftObjectPtr<UFortGameplayModifierItemDefinition>>
	//constexpr auto TimeOfDayManager = 0x1f0; // TSoftClassPtr<UObject>
	//constexpr auto bIgnoreWeatherEvents = 0x218; // bool
	//constexpr auto ItemsToFullyLoad = 0x220; // TArray<UFortItemDefinition*>
	//constexpr auto SharedAssetGroup = 0x230; // UFortSharedAssetGroup*
	//constexpr auto ConditionalAssetGroup = 0x238; // UFortConditionalAssetGroup*
	//constexpr auto bIsDefaultPlaylist = 0x240; // bool
	//constexpr auto UIDisplayName = 0x248; // FText
	//constexpr auto UIDescription = 0x260; // FText
	//constexpr auto HUDElementsToHide = 0x278; // FGameplayTagContainer
	//constexpr auto LootTierData = 0x298; // TSoftObjectPtr<UDataTable>
	//constexpr auto LootPackages = 0x2c0; // TSoftObjectPtr<UDataTable>
	//constexpr auto BaseCurveTableOverrides = 0x2e8; // TArray<FFortPlaylistBaseCurveTableOverride>
	//constexpr auto BaseDataTablesOverride = 0x2f8; // TArray<FFortPlaylistBaseDataTableOverride>
	//constexpr auto RangedWeapons = 0x308; // TSoftObjectPtr<UDataTable>
	//constexpr auto GameData = 0x330; // TSoftObjectPtr<UCurveTable>
	//constexpr auto ResourceRates = 0x358; // TSoftObjectPtr<UCurveTable>
	//constexpr auto SkydiveMusic = 0x380; // TSoftObjectPtr<USoundBase>
	//constexpr auto SkydiveMusicOutroStinger = 0x3a8; // TSoftObjectPtr<USoundBase>
	//constexpr auto RespawnStinger = 0x3d0; // TSoftObjectPtr<USoundBase>
	//constexpr auto GarbageCollectionFrequency = 0x3f8; // float
	//constexpr auto ServerPerformanceEventFrequency = 0x3fc; // float
	//constexpr auto ServerMetricsEventFrequency = 0x400; // float
	//constexpr auto bUseLocalizationService = 0x404; // bool

	constexpr auto PlaylistId = 0x38;
	constexpr auto PlaylistName = 0x3C;
	constexpr auto GameType = 0x40;
	constexpr auto MinPlayers = 0x44;
	constexpr auto MaxPlayers = 0x48;
	constexpr auto bUnderfillMatchmaking = 0x4C;
	constexpr auto UnderfilledMaxPlayers = 0x50;
	constexpr auto bOverrideMaxPlayers = 0x54;
	constexpr auto MaxHumanAndBotParticipants = 0x58;
	constexpr auto MaxTeamCount = 0x5C;
	constexpr auto MaxTeamSize = 0x60;
	constexpr auto MaxSocialPartySize = 0x64;
	constexpr auto MaxSquadSize = 0x68;
	constexpr auto MaxSquads = 0x6C;
	constexpr auto EnforceSquadFill = 0x70;
	constexpr auto bAllowSquadFillOption = 0x71;
	constexpr auto bShouldFillWhenNoSquadFillOption = 0x72;
	constexpr auto bAllowJoinInProgress = 0x73;
	constexpr auto JoinInProgressMatchType = 0x78;
	constexpr auto EndOfMatchXpFirstElim = 0x90;
	constexpr auto EndOfMatchXpMultiplier = 0x94;
	constexpr auto UserOptions = 0x98;
	constexpr auto bEnableBackfillDuringWarmupPhase = 0xA0;
	constexpr auto TimeAfterWarmupToDisableBackfill = 0xA4;
	constexpr auto RichPresenceAssetName = 0xA8;
	constexpr auto bAllowKeepPlayingTogether = 0xAC;
	constexpr auto bAllowPartyRift = 0xAD;
	constexpr auto bAllowSquadSizeTracking = 0xAE;
	constexpr auto PreloadPersistentLevel = 0xB0;
	constexpr auto AdditionalLevels = 0xD8;
	constexpr auto AdditionalLevelsServerOnly = 0xE8;
	constexpr auto BuiltInGameFeaturePluginsToLoad = 0xF8;
	constexpr auto OverrideLinkCodeToDownload = 0x108;
	constexpr auto GameFeaturePluginToActivateUntilDownloadedContentIsPresent = 0x118;
	constexpr auto DefaultFirstTeam = 0x128;
	constexpr auto DefaultLastTeam = 0x129;
	constexpr auto GameplayTagContainer = 0x130;
	constexpr auto FriendlyFireType = 0x150;
	constexpr auto bUseFriendlyFireAimAssist = 0x151;
	constexpr auto LootLevel = 0x154;
	constexpr auto LootTagQuery = 0x158;
	constexpr auto BuildingLevelOverride = 0x1A0;
	constexpr auto DBNOType = 0x1A4;
	constexpr auto SpawnImmunityTime = 0x1A8;
	constexpr auto SkippedGamePhaseNotification = 0x1D0;
	constexpr auto ModifierList = 0x1E0;
	constexpr auto TimeOfDayManager = 0x1F0;
	constexpr auto bIgnoreWeatherEvents = 0x218;
	constexpr auto ItemsToFullyLoad = 0x220;
	constexpr auto SharedAssetGroup = 0x230;
	constexpr auto ConditionalAssetGroup = 0x238;
	constexpr auto bIsDefaultPlaylist = 0x240;
	constexpr auto UIDisplayName = 0x248;
	constexpr auto UIDescription = 0x260;
	constexpr auto HUDElementsToHide = 0x278;
	constexpr auto LootTierData = 0x298;
	constexpr auto LootPackages = 0x2C0;
	constexpr auto BaseCurveTableOverrides = 0x2E8;
	constexpr auto BaseDataTablesOverride = 0x2F8;
	constexpr auto RangedWeapons = 0x308;
	constexpr auto GameData = 0x330;
	constexpr auto ResourceRates = 0x358;
	constexpr auto SkydiveMusic = 0x380;
	constexpr auto SkydiveMusicOutroStinger = 0x3A8;
	constexpr auto RespawnStinger = 0x3D0;
	constexpr auto GarbageCollectionFrequency = 0x3F8;
	constexpr auto ServerPerformanceEventFrequency = 0x3FC;
	constexpr auto ServerMetricsEventFrequency = 0x400;
	constexpr auto bUseLocalizationService = 0x404;

}

namespace FortPlaylistAthena {

	//constexpr auto bRewardsTrackPlacement = 0x408; // bool
	//constexpr auto bRewardsAllowXPProgression = 0x409; // bool
	//constexpr auto bRewardForRevivingTeammates = 0x40a; // bool
	//constexpr auto RewardPlacementBonusType = 0x40b; // ERewardPlacementBonusType
	//constexpr auto RewardsPlacementThreshold = 0x40c; // int32_t
	//constexpr auto RewardTimePlayedType = 0x410; // ERewardTimePlayedType
	//constexpr auto RewardTimePlayedXPPerMinute = 0x414; // int32_t
	//constexpr auto RewardTimePlayedXPFlatValue = 0x418; // int32_t
	//constexpr auto InMatchXPRewardScalar = 0x420; // FScalableFloat
	//constexpr auto QuestEventXPTableOverride = 0x448; // TSoftObjectPtr<UDataTable>
	//constexpr auto FirstWinRewards = 0x470; // TArray<TSoftObjectPtr<UFortItemDefinition>>
	//constexpr auto CalendarEventsForEndOfMatchUpdate = 0x480; // TArray<FString>
	//constexpr auto bAllowSinglePartyMatches = 0x490; // bool
	//constexpr auto bRequeueAfterFailedSessionAssignment = 0x491; // bool
	//constexpr auto bIsTournament = 0x492; // bool
	//constexpr auto bUseMultidivisionQueues = 0x493; // bool
	//constexpr auto CompetitivePointClamp = 0x494; // int32_t
	//constexpr auto Strategy = 0x498; // FString
	//constexpr auto BotVersionPlaylistName = 0x4a8; // FName
	//constexpr auto MaxBucketCapacity = 0x4ac; // int32_t
	//constexpr auto MaxPendingMatches = 0x4b0; // int32_t
	//constexpr auto PriorityRatingExpansion = 0x4b8; // TArray<FRatingExpansion>
	//constexpr auto bUseInputRules = 0x4c8; // bool
	//constexpr auto bAllowBackfill = 0x4c9; // bool
	//constexpr auto MinBackfillMatchPlayers = 0x4cc; // int32_t
	//constexpr auto MaxTeamScoreAllowedForBackfill = 0x4d0; // int32_t
	//constexpr auto MinPlayersForPrivateServer = 0x4d4; // int32_t
	//constexpr auto MaxTeamScoreDiscrepancyPercent = 0x4d8; // float
	//constexpr auto bUsePlayerRating = 0x4dc; // bool
	//constexpr auto bEnableRatingUpdate = 0x4dd; // bool
	//constexpr auto bEnableDynamicBotBackfill = 0x4de; // bool
	//constexpr auto RatingType = 0x4e0; // FString
	//constexpr auto bRequireCrossplayEnabled = 0x4f0; // bool
	//constexpr auto bLimitedPoolMatchmakingEnabled = 0x4f1; // bool
	//constexpr auto bAllowedInLeto = 0x4f2; // bool
	//constexpr auto LastQueuedPlaylistPriority = 0x4f4; // int32_t
	//constexpr auto bAllowInGameMatchMaking = 0x4f8; // bool
	//constexpr auto bAllowReturnToMatchmakingOriginOnMatchEnd = 0x4f9; // bool
	//constexpr auto bAllowBotsInHumanTeams = 0x4fa; // bool
	//constexpr auto bForceNewPlayerStateOnReconnect = 0x4fb; // bool
	//constexpr auto bShouldErrorOnAdditionalContentFailure = 0x4fc; // bool
	//constexpr auto bRemoveFromSquadOnLogout = 0x4fd; // bool
	//constexpr auto DADTestValue = 0x500; // int32_t
	//constexpr auto RequiredCatalogItemId = 0x508; // FString
	//constexpr auto DelayForPreServerTransitionAnimation = 0x518; // float
	//constexpr auto WinConditionType = 0x51c; // EAthenaWinCondition
	//constexpr auto TimedWinConditionTime = 0x520; // FScalableFloat
	//constexpr auto FinalWinConditionTime = 0x548; // FScalableFloat
	//constexpr auto ScoringData = 0x570; // FWinConditionScoreData
	//constexpr auto TimedSafeZonePhaseTime = 0x5d0; // FScalableFloat
	//constexpr auto WinConditionPlayersRemaining = 0x5f8; // int32_t
	//constexpr auto NumWinningTeamsCN = 0x600; // FScalableFloat
	//constexpr auto bIsLargeTeamGame = 0x628; // bool
	//constexpr auto bShouldSpreadTeams = 0x629; // bool
	//constexpr auto bIgnoreDefaultQuests = 0x62a; // bool
	//constexpr auto bDisallowMultipleWeaponsOfType = 0x62b; // bool
	//constexpr auto bAllowEditingEnemyWalls = 0x62c; // bool
	//constexpr auto LootDropRounds = 0x630; // int32_t
	//constexpr auto ForceKickAfterDeathTime = 0x634; // float
	//constexpr auto ForceKickAfterDeathMode = 0x638; // EForceKickAfterDeathMode
	//constexpr auto QuickbarSelectionPreservationMode = 0x639; // EWeaponSelectionPreservationType
	//constexpr auto AlwaysAllowedNativeActions = 0x640; // FGameplayTagContainer
	//constexpr auto PawnForcedCullDistance = 0x660; // FScalableFloat
	//constexpr auto TransientMatchStartBonusCurrency = 0x688; // FScalableFloat
	//constexpr auto InventoryItemsToGrant = 0x6b0; // TArray<FItemAndCount>
	//constexpr auto bIgnoreGameModeStartingInventory = 0x6c0; // bool
	//constexpr auto bRequirePickaxeInStartingInventory = 0x6c1; // bool
	//constexpr auto DestructedBuildingInGridTimeout = 0x6c4; // float
	//constexpr auto bTeamFilterDestructedBuildingsInGrid = 0x6c8; // bool
	//constexpr auto bOwnerFilterDestructedBuildingsInGrid = 0x6c9; // bool
	//constexpr auto bEnableBuildingCreatedEvent = 0x6ca; // bool
	//constexpr auto MaximumAspectRatio = 0x6cc; // float
	//constexpr auto bVehiclesDestroyAllBuildingSMActorsOnContact = 0x6d0; // bool
	//constexpr auto VehicleBoundsXYSplineClass = 0x6d8; // AActor*
	//constexpr auto bAutoAcquireSpawnChip = 0x6e0; // bool
	//constexpr auto SoundMix = 0x6e8; // USoundMix*
	//constexpr auto bAllowHardcoreModifiers = 0x6f0; // bool
	//constexpr auto bForceCameraFadeOnRespawn = 0x6f1; // bool
	//constexpr auto MinTimeBeforeRespawnCameraFade = 0x6f4; // float
	//constexpr auto RespawnType = 0x6f8; // EAthenaRespawnType
	//constexpr auto RespawnHeight = 0x700; // FScalableFloat
	//constexpr auto MaxRespawnHeight = 0x728; // FScalableFloat
	//constexpr auto RespawnTime = 0x750; // FScalableFloat
	//constexpr auto bRespawnInAir = 0x778; // bool
	//constexpr auto RespawnLevelStreamDistanceToForceScreenFade = 0x780; // FScalableFloat
	//constexpr auto bForceRespawnLocationInsideOfVolume = 0x7a8; // bool
	//constexpr auto bSkipWarmup = 0x7a9; // bool
	//constexpr auto bSkipAircraft = 0x7aa; // bool
	//constexpr auto bAllowWarmupPlayerStartInSetupPhase = 0x7ab; // bool
	//constexpr auto WarmupEarlyRequiredPlayerPercent = 0x7ac; // float
	//constexpr auto AirCraftBehavior = 0x7b0; // EAirCraftBehavior
	//constexpr auto bUseCustomAircraftPathSelection = 0x7b1; // bool
	//constexpr auto bUseSameDirectionForOpposingAircraft = 0x7b2; // bool
	//constexpr auto bAircraftDropOnlyWithinSafeZone = 0x7b3; // bool
	//constexpr auto AircraftSafetyMarginPct = 0x7b8; // FScalableFloat
	//constexpr auto AircraftPathOffsetFromMapCenterMin = 0x7e0; // float
	//constexpr auto AircraftPathOffsetFromMapCenterMax = 0x7e4; // float
	//constexpr auto AircraftPathMidpointSelectionRadiusMin = 0x7e8; // float
	//constexpr auto AircraftPathMidpointSelectionRadiusMax = 0x7ec; // float
	//constexpr auto LastStepPushAircraftCenterLine_Magnitude = 0x7f0; // float
	//constexpr auto LastStepPushAircraftCenterLine_Direction = 0x7f4; // float
	//constexpr auto bDisableAudioShapes = 0x7f8; // bool
	//constexpr auto NonRenderedCharacterAnimationScale = 0x7fc; // float
	//constexpr auto PlaylistMissionGen = 0x800; // UFortMissionGenerator*
	//constexpr auto bForceLTMLoadingScreenBackground = 0x808; // bool
	//constexpr auto LoadingScreenWidget = 0x810; // TSoftClassPtr<UObject>
	//constexpr auto UIExtensions = 0x838; // TArray<FUIExtension>
	//constexpr auto PlaylistUIData = 0x848; // TSoftObjectPtr<UFortPlaylistUIInfo>
	//constexpr auto HUDInfoDataAsset = 0x870; // TSoftObjectPtr<UFortAthenaHUDInfoDataAsset>
	//constexpr auto MissionIcon = 0x898; // UTexture2D*
	//constexpr auto UIDisplaySubName = 0x8a0; // FText
	//constexpr auto bLimitedTimeMode = 0x8b8; // bool
	//constexpr auto bDisable_ReportAPlayerReason_TeamingUpWithEnemies_WhileInGame = 0x8b9; // bool
	//constexpr auto bDisplayScoreInHUD = 0x8ba; // bool
	//constexpr auto bDisplayRespawnWidget = 0x8bb; // bool
	//constexpr auto bDisableMatchStatsDisplay = 0x8bc; // bool
	//constexpr auto SpecialActorInputActionDataTableRow = 0x8c0; // FDataTableRowHandle
	//constexpr auto bEnforceFullSquadInUI = 0x8d0; // bool
	//constexpr auto bShowEliminationIndicatorForSelf = 0x8d1; // bool
	//constexpr auto bShowEliminationIndicatorForSquadmates = 0x8d2; // bool
	//constexpr auto bShowEliminationIndicatorForTeammates = 0x8d3; // bool
	//constexpr auto bShowEliminationIndicatorForEnemies = 0x8d4; // bool
	//constexpr auto EliminationIndicatorMaxDistance = 0x8d8; // FScalableFloat
	//constexpr auto bLeaderboardDisplaysIndividuals = 0x900; // bool
	//constexpr auto bUsePointLeaderAsTeamLeaderInLeaderboard = 0x901; // bool
	//constexpr auto TypeOfLeaderboard = 0x902; // EFortLeaderboardMetric
	//constexpr auto OnlyRespectsGlobalSettingForReplayRecording = 0x908; // FScalableFloat
	//constexpr auto DisableReplays = 0x930; // FScalableFloat
	//constexpr auto EnableServerReplays = 0x958; // FScalableFloat
	//constexpr auto ShouldUseCustomGameChannel = 0x980; // FScalableFloat
	//constexpr auto ShouldRejectDefaultGameChat = 0x9a8; // FScalableFloat
	//constexpr auto CustomGameChannel = 0x9d0; // ECustomGameVoiceChannel
	//constexpr auto ShouldRecommendCustomGameChannel = 0x9d8; // FScalableFloat
	//constexpr auto bForceGameChannel = 0xa00; // bool
	//constexpr auto MapImageOverride = 0xa10; // FSlateBrush
	//constexpr auto MapScaleOverride = 0xad0; // float
	//constexpr auto bDrawCreativeDynamicIslands = 0xad4; // bool
	//constexpr auto MapManagerClass = 0xad8; // TSoftClassPtr<UObject>
	//constexpr auto bUseAsyncPhysics = 0xb00; // bool
	//constexpr auto ServerMaxTickRate = 0xb01; // EFortServerTickRate
	//constexpr auto bOverrideServerPerClientMaxAI = 0xb02; // bool
	//constexpr auto ServerPerClientMaxAI = 0xb04; // int32_t
	//constexpr auto SafeZoneStartUp = 0xb08; // ESafeZoneStartUp
	//constexpr auto bWarmUpInStorm = 0xb09; // bool
	//constexpr auto StormEffectDelay = 0xb0c; // float
	//constexpr auto bDisplayFinalStormPosition = 0xb10; // bool
	//constexpr auto bDrawLineToStormCircleIfOutside = 0xb11; // bool
	//constexpr auto LastSafeZoneIndex = 0xb14; // int32_t
	//constexpr auto SafeZoneLocationBlacklist = 0xb18; // TSoftObjectPtr<UCurveTable>
	//constexpr auto CreativeItemListSource = 0xb40; // TSoftObjectPtr<UDataTable>
	//constexpr auto UpgradeBenchData = 0xb68; // TSoftObjectPtr<UDataTable>
	//constexpr auto AILootOnDeathData = 0xb90; // TSoftObjectPtr<UDataTable>
	//constexpr auto HeroStats = 0xbb8; // TSoftObjectPtr<UDataTable>
	//constexpr auto bUseDefaultSupplyDrops = 0xbe0; // bool
	//constexpr auto SupplyDropModifierList = 0xbe8; // TArray<FSupplyDropModifierData>
	//constexpr auto SupplyDropInfoList = 0xbf8; // TArray<TSoftObjectPtr<UFortSupplyDropInfo>>
	//constexpr auto QueryNameToLootChanceScaleTables = 0xc08; // TArray<TSoftObjectPtr<UDataTable>>
	//constexpr auto QueryNameToLootCountScaleTables = 0xc18; // TArray<TSoftObjectPtr<UDataTable>>
	//constexpr auto ExitCraftInfo = 0xc28; // TSoftObjectPtr<UFortAthenaExitCraftInfo>
	//constexpr auto bPlaylistUsesCustomCharacterParts = 0xc50; // bool
	//constexpr auto CharactersToPreload = 0xc58; // TArray<FCharacterPreloadBlock>
	//constexpr auto CharacterFallbackTagsToPreload = 0xc68; // TArray<FCharacterFallbackPreloadBlock>
	//constexpr auto AIPawnCustomizationFallbackTagsToPreload = 0xc78; // TArray<FGameplayTag>
	//constexpr auto SpawnActorInfoList = 0xc88; // TArray<TSoftObjectPtr<UFortSpawnActorInfo>>
	//constexpr auto NetActorDiscoveryBudgetInKBytesPerSec = 0xc98; // int32_t
	//constexpr auto NetDormancyNumFramesUntilObsolete = 0xc9c; // int32_t
	//constexpr auto bUseCreativeStarterIsland = 0xca0; // char : 1
	//constexpr auto bPreloadAthenaMapsForMatchmaking = 0xca0; // char : 1
	//constexpr auto bForceCustomMinigame = 0xca0; // char : 1
	//constexpr auto bEnableCreativeMode = 0xca0; // char : 1
	//constexpr auto bAllowLayoutRequirementsFeature = 0xca0; // char : 1
	//constexpr auto bShowTeamSelectButton = 0xca0; // char : 1
	//constexpr auto bAllowTeamSwitching = 0xca0; // char : 1
	//constexpr auto bEnableSpawningStartup = 0xca0; // char : 1
	//constexpr auto bUsesAnimationSharing = 0xca1; // bool
	//constexpr auto AnimationSharingSetup = 0xca8; // TSoftObjectPtr<UAnimationSharingSetup>
	//constexpr auto bAllowBroadcasting = 0xcd0; // bool
	//constexpr auto bAllowSpectateAPartyMember = 0xcd1; // bool
	//constexpr auto bActivateCurie = 0xcd2; // bool
	//constexpr auto CurieSettings = 0xcd8; // UFortCurieSettings*
	//constexpr auto CurieManagerConfigOverrides = 0xce0; // TArray<FName>
	//constexpr auto PlaylistStatId = 0xcf0; // int32_t
	//constexpr auto bAccumulateToProfileStats = 0xcf4; // bool
	//constexpr auto bSaveToRecentGameList = 0xcf5; // bool
	//constexpr auto bEnableStatsV2Stats = 0xcf6; // bool
	//constexpr auto AISettings = 0xcf8; // UAthenaAISettings*
	//constexpr auto DefaultCreativeTOD = 0xd00; // TSoftClassPtr<UObject>
	//constexpr auto MaxVehiclesCanSpawnWithTireMod = 0xd28; // FScalableFloat
	//constexpr auto PercentChanceSpawnWithTireMod = 0xd50; // FScalableFloat

constexpr auto bRewardsTrackPlacement = 0x408;
constexpr auto bRewardsAllowXPProgression = 0x409;
constexpr auto bRewardForRevivingTeammates = 0x40A;
constexpr auto RewardPlacementBonusType = 0x40B;
constexpr auto RewardsPlacementThreshold = 0x40C;
constexpr auto RewardTimePlayedType = 0x410;
constexpr auto RewardTimePlayedXPPerMinute = 0x414;
constexpr auto RewardTimePlayedXPFlatValue = 0x418;
constexpr auto InMatchXPRewardScalar = 0x420;
constexpr auto QuestEventXPTableOverride = 0x448;
constexpr auto FirstWinRewards = 0x470;
constexpr auto CalendarEventsForEndOfMatchUpdate = 0x480;
constexpr auto bAllowSinglePartyMatches = 0x490;
constexpr auto bRequeueAfterFailedSessionAssignment = 0x491;
constexpr auto bIsTournament = 0x492;
constexpr auto bUseMultidivisionQueues = 0x493;
constexpr auto CompetitivePointClamp = 0x494;
constexpr auto Strategy = 0x498;
constexpr auto BotVersionPlaylistName = 0x4A8;
constexpr auto MaxBucketCapacity = 0x4AC;
constexpr auto MaxPendingMatches = 0x4B0;
constexpr auto PriorityRatingExpansion = 0x4B8;
constexpr auto bUseInputRules = 0x4C8;
constexpr auto bAllowBackfill = 0x4C9;
constexpr auto MinBackfillMatchPlayers = 0x4CC;
constexpr auto MaxTeamScoreAllowedForBackfill = 0x4D0;
constexpr auto MinPlayersForPrivateServer = 0x4D4;
constexpr auto MaxTeamScoreDiscrepancyPercent = 0x4D8;
constexpr auto bUsePlayerRating = 0x4DC;
constexpr auto bEnableRatingUpdate = 0x4DD;
constexpr auto bEnableDynamicBotBackfill = 0x4DE;
constexpr auto RatingType = 0x4E0;
constexpr auto bRequireCrossplayEnabled = 0x4F0;
constexpr auto bLimitedPoolMatchmakingEnabled = 0x4F1;
constexpr auto bAllowedInLeto = 0x4F2;
constexpr auto LastQueuedPlaylistPriority = 0x4F4;
constexpr auto bAllowInGameMatchMaking = 0x4F8;
constexpr auto bAllowReturnToMatchmakingOriginOnMatchEnd = 0x4F9;
constexpr auto bAllowBotsInHumanTeams = 0x4FA;
constexpr auto bForceNewPlayerStateOnReconnect = 0x4FB;
constexpr auto bShouldErrorOnAdditionalContentFailure = 0x4FC;
constexpr auto bRemoveFromSquadOnLogout = 0x4FD;
constexpr auto DADTestValue = 0x500;
constexpr auto RequiredCatalogItemId = 0x508;
constexpr auto DelayForPreServerTransitionAnimation = 0x518;
constexpr auto WinConditionType = 0x51C;
constexpr auto TimedWinConditionTime = 0x520;
constexpr auto FinalWinConditionTime = 0x548;
constexpr auto ScoringData = 0x570;
constexpr auto TimedSafeZonePhaseTime = 0x5D0;
constexpr auto WinConditionPlayersRemaining = 0x5F8;
constexpr auto NumWinningTeamsCN = 0x600;
constexpr auto bIsLargeTeamGame = 0x628;
constexpr auto bShouldSpreadTeams = 0x629;
constexpr auto bIgnoreDefaultQuests = 0x62A;
constexpr auto bDisallowMultipleWeaponsOfType = 0x62B;
constexpr auto bAllowEditingEnemyWalls = 0x62C;
constexpr auto LootDropRounds = 0x630;
constexpr auto ForceKickAfterDeathTime = 0x634;
constexpr auto ForceKickAfterDeathMode = 0x638;
constexpr auto QuickbarSelectionPreservationMode = 0x639;
constexpr auto AlwaysAllowedNativeActions = 0x640;
constexpr auto PawnForcedCullDistance = 0x660;
constexpr auto TransientMatchStartBonusCurrency = 0x688;
constexpr auto InventoryItemsToGrant = 0x6B0;
constexpr auto bIgnoreGameModeStartingInventory = 0x6C0;
constexpr auto bRequirePickaxeInStartingInventory = 0x6C1;
constexpr auto DestructedBuildingInGridTimeout = 0x6C4;
constexpr auto bTeamFilterDestructedBuildingsInGrid = 0x6C8;
constexpr auto bOwnerFilterDestructedBuildingsInGrid = 0x6C9;
constexpr auto bEnableBuildingCreatedEvent = 0x6CA;
constexpr auto MaximumAspectRatio = 0x6CC;
constexpr auto bVehiclesDestroyAllBuildingSMActorsOnContact = 0x6D0;
constexpr auto VehicleBoundsXYSplineClass = 0x6D8;
constexpr auto bAutoAcquireSpawnChip = 0x6E0;
constexpr auto SoundMix = 0x6E8;
constexpr auto bAllowHardcoreModifiers = 0x6F0;
constexpr auto bForceCameraFadeOnRespawn = 0x6F1;
constexpr auto MinTimeBeforeRespawnCameraFade = 0x6F4;
constexpr auto RespawnType = 0x6F8;
constexpr auto RespawnHeight = 0x700;
constexpr auto MaxRespawnHeight = 0x728;
constexpr auto RespawnTime = 0x750;
constexpr auto bRespawnInAir = 0x778;
constexpr auto RespawnLevelStreamDistanceToForceScreenFade = 0x780;
constexpr auto bForceRespawnLocationInsideOfVolume = 0x7A8;
constexpr auto bSkipWarmup = 0x7A9;
constexpr auto bSkipAircraft = 0x7AA;
constexpr auto bAllowWarmupPlayerStartInSetupPhase = 0x7AB;
constexpr auto WarmupEarlyRequiredPlayerPercent = 0x7AC;
constexpr auto AirCraftBehavior = 0x7B0;
constexpr auto bUseCustomAircraftPathSelection = 0x7B1;
constexpr auto bUseSameDirectionForOpposingAircraft = 0x7B2;
constexpr auto bAircraftDropOnlyWithinSafeZone = 0x7B3;
constexpr auto AircraftSafetyMarginPct = 0x7B8;
constexpr auto AircraftPathOffsetFromMapCenterMin = 0x7E0;
constexpr auto AircraftPathOffsetFromMapCenterMax = 0x7E4;
constexpr auto AircraftPathMidpointSelectionRadiusMin = 0x7E8;
constexpr auto AircraftPathMidpointSelectionRadiusMax = 0x7EC;
constexpr auto LastStepPushAircraftCenterLine_Magnitude = 0x7F0;
constexpr auto LastStepPushAircraftCenterLine_Direction = 0x7F4;
constexpr auto bDisableAudioShapes = 0x7F8;
constexpr auto NonRenderedCharacterAnimationScale = 0x7FC;
constexpr auto PlaylistMissionGen = 0x800;
constexpr auto bForceLTMLoadingScreenBackground = 0x808;
constexpr auto LoadingScreenWidget = 0x810;
constexpr auto UIExtensions = 0x838;
constexpr auto PlaylistUIData = 0x848;
constexpr auto HUDInfoDataAsset = 0x870;
constexpr auto MissionIcon = 0x898;
constexpr auto UIDisplaySubName = 0x8A0;
constexpr auto bLimitedTimeMode = 0x8B8;
constexpr auto bDisable_ReportAPlayerReason_TeamingUpWithEnemies_WhileInGame = 0x8B9;
constexpr auto bDisplayScoreInHUD = 0x8BA;
constexpr auto bDisplayRespawnWidget = 0x8BB;
constexpr auto bDisableMatchStatsDisplay = 0x8BC;
constexpr auto SpecialActorInputActionDataTableRow = 0x8C0;
constexpr auto bEnforceFullSquadInUI = 0x8D0;
constexpr auto bShowEliminationIndicatorForSelf = 0x8D1;
constexpr auto bShowEliminationIndicatorForSquadmates = 0x8D2;
constexpr auto bShowEliminationIndicatorForTeammates = 0x8D3;
constexpr auto bShowEliminationIndicatorForEnemies = 0x8D4;
constexpr auto EliminationIndicatorMaxDistance = 0x8D8;
constexpr auto bLeaderboardDisplaysIndividuals = 0x900;
constexpr auto bUsePointLeaderAsTeamLeaderInLeaderboard = 0x901;
constexpr auto TypeOfLeaderboard = 0x902;
constexpr auto OnlyRespectsGlobalSettingForReplayRecording = 0x908;
constexpr auto DisableReplays = 0x930;
constexpr auto EnableServerReplays = 0x958;
constexpr auto ShouldUseCustomGameChannel = 0x980;
constexpr auto ShouldRejectDefaultGameChat = 0x9A8;
constexpr auto CustomGameChannel = 0x9D0;
constexpr auto ShouldRecommendCustomGameChannel = 0x9D8;
constexpr auto bForceGameChannel = 0xA00;
constexpr auto MapImageOverride = 0xA10;
constexpr auto MapScaleOverride = 0xAD0;
constexpr auto bDrawCreativeDynamicIslands = 0xAD4;
constexpr auto MapManagerClass = 0xAD8;
constexpr auto bUseAsyncPhysics = 0xB00;
constexpr auto ServerMaxTickRate = 0xB01;
constexpr auto bOverrideServerPerClientMaxAI = 0xB02;
constexpr auto ServerPerClientMaxAI = 0xB04;
constexpr auto SafeZoneStartUp = 0xB08;
constexpr auto bWarmUpInStorm = 0xB09;
constexpr auto StormEffectDelay = 0xB0C;
constexpr auto bDisplayFinalStormPosition = 0xB10;
constexpr auto bDrawLineToStormCircleIfOutside = 0xB11;
constexpr auto LastSafeZoneIndex = 0xB14;
constexpr auto SafeZoneLocationBlacklist = 0xB18;
constexpr auto CreativeItemListSource = 0xB40;
constexpr auto UpgradeBenchData = 0xB68;
constexpr auto AILootOnDeathData = 0xB90;
constexpr auto HeroStats = 0xBB8;
constexpr auto bUseDefaultSupplyDrops = 0xBE0;
constexpr auto SupplyDropModifierList = 0xBE8;
constexpr auto SupplyDropInfoList = 0xBF8;
constexpr auto QueryNameToLootChanceScaleTables = 0xC08;
constexpr auto QueryNameToLootCountScaleTables = 0xC18;
constexpr auto ExitCraftInfo = 0xC28;
constexpr auto bPlaylistUsesCustomCharacterParts = 0xC50;
constexpr auto CharactersToPreload = 0xC58;
constexpr auto CharacterFallbackTagsToPreload = 0xC68;
constexpr auto AIPawnCustomizationFallbackTagsToPreload = 0xC78;
constexpr auto SpawnActorInfoList = 0xC88;
constexpr auto NetActorDiscoveryBudgetInKBytesPerSec = 0xC98;
constexpr auto NetDormancyNumFramesUntilObsolete = 0xC9C;
constexpr auto bEnableCreativeMode = 0xCA0;
constexpr auto bEnableSpawningStartup = 0xCA0;
constexpr auto bAllowTeamSwitching = 0xCA0;
constexpr auto bShowTeamSelectButton = 0xCA0;
constexpr auto bAllowLayoutRequirementsFeature = 0xCA0;
constexpr auto bUseCreativeStarterIsland = 0xCA0;
constexpr auto bForceCustomMinigame = 0xCA0;
constexpr auto bPreloadAthenaMapsForMatchmaking = 0xCA0;
constexpr auto bUsesAnimationSharing = 0xCA1;
constexpr auto AnimationSharingSetup = 0xCA8;
constexpr auto bAllowBroadcasting = 0xCD0;
constexpr auto bAllowSpectateAPartyMember = 0xCD1;
constexpr auto bActivateCurie = 0xCD2;
constexpr auto CurieSettings = 0xCD8;
constexpr auto CurieManagerConfigOverrides = 0xCE0;
constexpr auto PlaylistStatId = 0xCF0;
constexpr auto bAccumulateToProfileStats = 0xCF4;
constexpr auto bSaveToRecentGameList = 0xCF5;
constexpr auto bEnableStatsV2Stats = 0xCF6;
constexpr auto AISettings = 0xCF8;
constexpr auto DefaultCreativeTOD = 0xD20;
constexpr auto MaxVehiclesCanSpawnWithTireMod = 0xD48;
constexpr auto PercentChanceSpawnWithTireMod = 0xD70;

}

namespace FortProjectileMovementComponent {


	//constexpr auto HomingData = 0x238; // FProjectileHomingData
	//constexpr auto InitialHomingStyle = 0x290; // EFortHomingStyle
	//constexpr auto bHasHomedTowardTarget = 0x291; // bool
	//constexpr auto bSetInitialLocAndDir = 0x292; // bool
	//constexpr auto bReplicatedAutoRegisterUpdatedComponent = 0x293; // char : 1
	//constexpr auto bReplicateStopSimulating = 0x293; // char : 1
	//constexpr auto HomingLaserTargetDistance = 0x294; // float
	//constexpr auto HomingTravelTime = 0x298; // float
	//constexpr auto LockedOnTarget = 0x29c; // TWeakObjectPtr<AFortPawn>
	//constexpr auto DesiredDirection = 0x2a8; // FVector
	//constexpr auto PreviousHomingTargetPosition = 0x2c0; // FVector
	//constexpr auto LaunchPosition = 0x2d8; // FVector
	//constexpr auto InitialDirection = 0x2f0; // FVector
	//constexpr auto AccelerationMagnitude = 0x308; // float
	//constexpr auto ReplicatedVelocityData = 0x310; // FFortReplicatedVelocityData
	//constexpr auto FortStopSimulatingRepData = 0x330; // FFortStopSimulatingRepData
	//constexpr auto WaterInteractionComponent = 0x350; // UFortWaterInteractionComponent*
	//constexpr auto OnProjectileVelocityReplicated = 0x370; // FMulticastInlineDelegate
	//constexpr auto bUseSeparateGravityScaleInWater = 0x3c8; // bool
	//constexpr auto GravityScaleInWater = 0x3cc; // float

	constexpr auto HomingData = 0x238;
	constexpr auto InitialHomingStyle = 0x290;
	constexpr auto bHasHomedTowardTarget = 0x291;
	constexpr auto bSetInitialLocAndDir = 0x292;
	constexpr auto bReplicatedAutoRegisterUpdatedComponent = 0x293;
	constexpr auto bReplicateStopSimulating = 0x293;
	constexpr auto HomingLaserTargetDistance = 0x294;
	constexpr auto HomingTravelTime = 0x298;
	constexpr auto LockedOnTarget = 0x29C;
	constexpr auto DesiredDirection = 0x2A8;
	constexpr auto PreviousHomingTargetPosition = 0x2C0;
	constexpr auto LaunchPosition = 0x2D8;
	constexpr auto InitialDirection = 0x2F0;
	constexpr auto AccelerationMagnitude = 0x308;
	constexpr auto ReplicatedVelocityData = 0x310;
	constexpr auto FortStopSimulatingRepData = 0x330;
	constexpr auto WaterInteractionComponent = 0x350;
	constexpr auto OnProjectileVelocityReplicated = 0x370;
	constexpr auto bUseSeparateGravityScaleInWater = 0x3C8;
	constexpr auto GravityScaleInWater = 0x3CC;

}

namespace FortRuntimeOptions {

	//constexpr auto CreativePlaysetPropActorPaths = 0x38; // TArray<FRuntimeOptionPlaysetPropActorPath>
	//constexpr auto bCanAccoladesDeviceGrantAccolades = 0x48; // bool
	//constexpr auto CreativeBetaPermissions = 0x50; // TArray<FCreativeBetaPermissionConfig>
	//constexpr auto bEnableItemDefinitionWhiteListing = 0x60; // bool
	//constexpr auto bEnableItemDefinitionWhiteListingForTransientPickups = 0x61; // bool
	//constexpr auto bAlwaysReadyUpAllLocalPlayersForMatchmaking = 0x62; // bool
	//constexpr auto IslandResources = 0x68; // TArray<FCreativeIslandResource>
	//constexpr auto VolumeManagerBannedClasses = 0x78; // TArray<TSoftClassPtr<UObject>>
	//constexpr auto CreativeIslandDescriptionTagsMaxQty = 0x88; // int32_t
	//constexpr auto CreativeIslandDescriptionTagsWhitelist = 0x90; // TArray<FCreativeIslandDescriptionTag>
	//constexpr auto ExperimentalCohortPercent = 0xa0; // TArray<FExperimentalCohortPercent>
	//constexpr auto ExperimentalBucketPercentList = 0xb0; // TArray<FExperimentalBucketPercentList>
	//constexpr auto bEnableSpectatorUpdates = 0xc0; // bool
	//constexpr auto bEnableNPCInteractionsForSpectators = 0xc1; // bool
	//constexpr auto bIsTournamentMode = 0xc2; // bool
	//constexpr auto bIsOutOfSeasonMode = 0xc3; // bool
	//constexpr auto bForceBRMode = 0xc4; // bool
	//constexpr auto bLoadDirectlyIntoLobby = 0xc5; // bool
	//constexpr auto bAllowBPTokenRefund = 0xc6; // bool
	//constexpr auto bEnableSpeculativeCreativeMMTeamSizeFix = 0xc7; // bool
	//constexpr auto bUseTournamentAnonymousOverrideEnabled = 0xc8; // bool
	//constexpr auto bForceDisallowAnonymousMode = 0xc9; // bool
	//constexpr auto bEnableGeneratedScreenshotForPortalPreview = 0xca; // bool
	//constexpr auto bAllowLoadoutSwitchingInLobby = 0xcb; // bool
	//constexpr auto IngameMatchmakingDelaySeconds = 0xcc; // int32_t
	//constexpr auto NumSavedLoadouts = 0xd0; // int32_t
	//constexpr auto TournamentPlaylistName = 0xd4; // FName
	//constexpr auto TournamentPlaylistPriorityBase = 0xd8; // int32_t
	//constexpr auto TournamentModeQueueInterval = 0xdc; // float
	//constexpr auto MinimumAccountLevelForTournamentPlay = 0xe0; // int32_t
	//constexpr auto bEnableManualBroadcasterStart = 0xe4; // bool
	//constexpr auto bForcePRM = 0xe5; // bool
	//constexpr auto bCreativeManualBroadcasterStart = 0xe6; // bool
	//constexpr auto bCreativeEnableTimerForPhoneToolEnforcement = 0xe7; // bool
	//constexpr auto bAutoloadRestrictedPlots = 0xe8; // bool
	//constexpr auto bDisableMyIslandDescriptionPanel = 0xe9; // bool
	//constexpr auto bEnableAllRemoteClientInfos = 0xea; // bool
	//constexpr auto bEnableBuildPreviewForBroadcast = 0xeb; // bool
	//constexpr auto bEnableRemoteAimSnapshotManagerForBroadcast = 0xec; // bool
	//constexpr auto EsportsAnalyticsHeartbeatRate = 0xf0; // float
	//constexpr auto bUseBroadcastPostProcessing = 0xf4; // bool
	//constexpr auto bUseBroadcastKillFeed = 0xf5; // bool
	//constexpr auto bUseServerReplayActionFeed = 0xf6; // bool
	//constexpr auto bReplayGoToTimeEnabled = 0xf7; // bool
	//constexpr auto bBroadcastPipModeToggle = 0xf8; // bool
	//constexpr auto bShowBroadcastPlayerEventScoreWidget = 0xf9; // bool
	//constexpr auto bUseOutsideTopThreeSpectatorLeaderboard = 0xfa; // bool
	//constexpr auto bReplayPauseZeroDeltas = 0xfb; // bool
	//constexpr auto CurrentSocialImportVersion = 0xfc; // int32_t
	//constexpr auto PawnDeathScreenDelay = 0x100; // float
	//constexpr auto CurrentVKImportVersion = 0x104; // int32_t
	//constexpr auto bEnableMassFriendImport = 0x108; // bool
	//constexpr auto bEnableSocialTab = 0x109; // bool
	//constexpr auto bAllowSocialPresenceUpdates = 0x10a; // bool
	//constexpr auto bEnableToastSocialWidget = 0x10b; // bool
	//constexpr auto bEnableINICachedSocialStatus = 0x10c; // bool
	//constexpr auto MaxINICachedSocialStatuses = 0x110; // int32_t
	//constexpr auto MinSecondsBetweenINICachedSocialStatuses = 0x118; // double
	//constexpr auto NumDaysBeforeFailedImportReattempt = 0x120; // int32_t
	//constexpr auto bEnableSocialBanModal = 0x124; // bool
	//constexpr auto bEnableDedicatedServerSocialBanVoiceQuery = 0x125; // bool
	//constexpr auto bEnableDedicatedServerSocialBanVoiceEnforcement = 0x126; // bool
	//constexpr auto bDisplayLastOnlineTime = 0x127; // bool
	//constexpr auto bDisplayLastInteraction = 0x128; // bool
	//constexpr auto bEnableStartupSocialImport = 0x129; // bool
	//constexpr auto bEnableBladeRAF = 0x12a; // bool
	//constexpr auto bEnableStartupErebusFriendImport = 0x12b; // bool
	//constexpr auto bEnableVKImport = 0x12c; // bool
	//constexpr auto bEnableSteamImport = 0x12d; // bool
	//constexpr auto SocialImportURI = 0x130; // FString
	//constexpr auto DaysBetweenSocialImportPrompts = 0x140; // int32_t
	//constexpr auto DaysBetweenVKImportPrompt = 0x144; // int32_t
	//constexpr auto FriendImportCaptionSelection = 0x148; // int32_t
	//constexpr auto bEnableSplitWalletTextNotice = 0x14c; // bool
	//constexpr auto bShowAthenaStoreToast = 0x14d; // bool
	//constexpr auto bShowAthenaStoreToastForRolloverAlone = 0x14e; // bool
	//constexpr auto bAllow3DInspectOfRMTItems = 0x14f; // bool
	//constexpr auto bAltUpdateFlow = 0x150; // bool
	//constexpr auto bShowRMTDescriptionPopup = 0x151; // bool
	//constexpr auto bAllowJuniorEndingMovie = 0x152; // bool
	//constexpr auto AthenaStarterGameMode = 0x158; // TArray<FName>
	//constexpr auto AthenaStarterFill = 0x168; // bool
	//constexpr auto PartyRichPresenceUpdateTime = 0x16c; // float
	//constexpr auto PartySuggestionUpdateTimer = 0x170; // float
	//constexpr auto MaxPartySuggestionsToConsider = 0x174; // int32_t
	//constexpr auto bAllowLFG = 0x178; // bool
	//constexpr auto bAllowPartyPresenceUpdates = 0x179; // bool
	//constexpr auto bAllowGameplayPresenceUpdates = 0x17a; // bool
	//constexpr auto bEnablePlaylistNameInRichPresence = 0x17b; // bool
	//constexpr auto bAllowDiscordFrictionlessJoin = 0x17c; // bool
	//constexpr auto bEnableInteractiveConsumables = 0x17d; // bool
	//constexpr auto bEnableContextHelpMenu = 0x17e; // bool
	//constexpr auto bShowAthenaItemShop = 0x17f; // bool
	//constexpr auto bEnableShowdown = 0x180; // bool
	//constexpr auto bEnableTournamentMatchCaps = 0x181; // bool
	//constexpr auto bUsePlayingEventIds = 0x182; // bool
	//constexpr auto bRetryCMSLoads = 0x183; // bool
	//constexpr auto RefreshScoreDelay = 0x184; // float
	//constexpr auto bAlwaysForceTournamentLobbyPanelRefresh = 0x188; // bool
	//constexpr auto bEnableEventLeaderboards = 0x189; // bool
	//constexpr auto NumCachedLeaderboardPages = 0x18c; // int32_t
	//constexpr auto MaxPagesPerLeaderboard = 0x190; // int32_t
	//constexpr auto EventLeaderboardLiveRefreshTimeSeconds = 0x194; // int32_t
	//constexpr auto EventLeaderboardLivePostEventRefreshWindowMinutes = 0x198; // int32_t
	//constexpr auto bGetLiveSessionsFromLeaderboards = 0x19c; // bool
	//constexpr auto bUseServerTournamentPlacementNotifications = 0x19d; // bool
	//constexpr auto MaximumEventLengthHoursForCallout = 0x1a0; // int32_t
	//constexpr auto bEnableHypeLeaderboards = 0x1a4; // bool
	//constexpr auto bEnableSwapRegionsButton = 0x1a5; // bool
	//constexpr auto bFillCompetitivePanelFromDiscovery = 0x1a6; // bool
	//constexpr auto HypeLeaderboardEventId = 0x1a8; // FString
	//constexpr auto HypeLeaderboardRefreshTimeSeconds = 0x1b8; // int32_t
	//constexpr auto bHypeLeaderboardIncludeFriendsTab = 0x1bc; // bool
	//constexpr auto CreativePlaylistName = 0x1c0; // FName
	//constexpr auto BattleLabPlaylistName = 0x1c4; // FName
	//constexpr auto CampaignPlaylistName = 0x1c8; // FName
	//constexpr auto bEnableEventScoreClamping = 0x1cc; // bool
	//constexpr auto CreativeDisabledTabIndex = 0x1d0; // int32_t
	//constexpr auto bAllowIslandExporting = 0x1d4; // bool
	//constexpr auto bAllowCreativeModeratorMode = 0x1d5; // bool
	//constexpr auto bIslandExportingEnabledMCPOverride = 0x1d6; // bool
	//constexpr auto bEnableCreativeServerImportFriendsOption = 0x1d7; // bool
	//constexpr auto MaxPlayersInCreativeServer = 0x1d8; // int32_t
	//constexpr auto MaxPlayersInCreativeWhitelist = 0x1dc; // int32_t
	//constexpr auto bShowSupportACreatorOnIslandLinkScreen = 0x1e0; // bool
	//constexpr auto bHideServersWithZeroPlayers = 0x1e1; // bool
	//constexpr auto bEnableIslandCodeEntryOnPlayerPortal = 0x1e2; // bool
	//constexpr auto bEnableIslandCodeEntryOnCuratedPortal = 0x1e3; // bool
	//constexpr auto bEnableIslandCodeEntryInFrontend = 0x1e4; // bool
	//constexpr auto RefreshFavoriteIslandsWaitTime = 0x1e8; // float
	//constexpr auto IslandCodeLength = 0x1ec; // int32_t
	//constexpr auto bApplyCodeFormatting = 0x1f0; // bool
	//constexpr auto bAdvertiseBattleLabOwnerInSession = 0x1f1; // bool
	//constexpr auto bEnableThermometerUIForBattleLab = 0x1f2; // bool
	//constexpr auto bEnableSpatialThermometerForBattleLab = 0x1f3; // bool
	//constexpr auto bEnableHeatmapUIDisplayForCreative = 0x1f4; // bool
	//constexpr auto bEnableHeatmapUIDisplayForBattleLab = 0x1f5; // bool
	//constexpr auto bUseHeatmapHighPrecison = 0x1f6; // bool
	//constexpr auto bEnableBudgetTrackerSpatialTest = 0x1f7; // bool
	//constexpr auto bEnableSpatialThermometerForCreative = 0x1f8; // bool
	//constexpr auto bEnableSpatialSettingsForCreative = 0x1f9; // bool
	//constexpr auto bIsMatchmakingEnabledForPlayers = 0x1fa; // bool
	//constexpr auto CreativeHeatmapThermometerCellSize = 0x1fc; // float
	//constexpr auto bEnableThermomterCostPreviwer = 0x200; // bool
	//constexpr auto bEnableSlateVersionOfThermometer = 0x201; // bool
	//constexpr auto bEnableJoinInProgress = 0x202; // bool
	//constexpr auto bEnableSpectateAPartyMember = 0x203; // bool
	//constexpr auto bEnableJoinAndSpectate = 0x204; // bool
	//constexpr auto bEnableRequestToJoin = 0x205; // bool
	//constexpr auto MaxNumAlivePlayersForSpectateAPartyMember = 0x208; // int32_t
	//constexpr auto MaxNumPartyMemberSpectatorsPerMatch = 0x20c; // int32_t
	//constexpr auto SpectateAPartyMemberPlaylistOverrides = 0x210; // TArray<FRuntimeOptionSpectateAPartyMemberOverride>
	//constexpr auto bEnableJoinInProgressInMatchmakingWidget = 0x220; // bool
	//constexpr auto bAnyPartyMemberAllowedToCancelMatchmakingV2 = 0x221; // bool
	//constexpr auto bEnableLockerSearch = 0x222; // bool
	//constexpr auto bEnableLockerDirtySearch = 0x223; // bool
	//constexpr auto bEnableBattlePass = 0x224; // bool
	//constexpr auto bEnableBattlePassFAQ = 0x225; // bool
	//constexpr auto bShowBattlePassBangAfterPurchase = 0x226; // bool
	//constexpr auto bShowBattlePassBangEveryLevel = 0x227; // bool
	//constexpr auto bShowBattlePassBangs = 0x228; // bool
	//constexpr auto bBattlePassVideoDelay = 0x229; // bool
	//constexpr auto bEnableAthenaFavoriting = 0x22a; // bool
	//constexpr auto bShowAthenaDailyQuests = 0x22b; // bool
	//constexpr auto bEnableAthenaCustomPreviewActionForCosmetics = 0x22c; // bool
	//constexpr auto bEnableAthenaItemRandomization = 0x22d; // bool
	//constexpr auto bEnableProfileStatTracking = 0x22e; // bool
	//constexpr auto bEnableProfileStatUI = 0x22f; // bool
	//constexpr auto bEnableTrickUI = 0x230; // bool
	//constexpr auto bEnableMultiplayerTricks = 0x231; // bool
	//constexpr auto bEnableInGameChallengeTree = 0x232; // bool
	//constexpr auto bCreateEpicAccountPinGrantDisabled = 0x233; // bool
	//constexpr auto bLoginEpicWeb = 0x234; // bool
	//constexpr auto bLoginXBLDisabled = 0x235; // bool
	//constexpr auto bLoginPSNDisabled = 0x236; // bool
	//constexpr auto bLoginErebusDisabled = 0x237; // bool
	//constexpr auto bEnableClientSettingsSaveToCloud = 0x238; // bool
	//constexpr auto bEnableClientSettingsSaveToDisk = 0x239; // bool
	//constexpr auto bEnableClientSettingsRestoreInputPresets = 0x23a; // bool
	//constexpr auto bDedServerEventServiceDownloadTryCount = 0x23c; // int32_t
	//constexpr auto TournamentRefreshPayoutMaxRateSeconds = 0x240; // int32_t
	//constexpr auto TournamentRefreshEventsMaxRateSeconds = 0x244; // int32_t
	//constexpr auto TournamentRefreshPlayerMaxRateSeconds = 0x248; // int32_t
	//constexpr auto TournamentHUDPointCounterDelay = 0x24c; // float
	//constexpr auto MaxNumDisplayNamesOnLiveGameList = 0x250; // int32_t
	//constexpr auto LiveGameListInitialLimit = 0x254; // int32_t
	//constexpr auto LiveGameListQueryIncreaseAmount = 0x258; // int32_t
	//constexpr auto bEnableLiveGamesScreen = 0x25c; // bool
	//constexpr auto bLiveGameTimeDurationVisible = 0x25d; // bool
	//constexpr auto bEnableFlagSelection = 0x25e; // bool
	//constexpr auto DefaultFlagRegionId = 0x260; // FString
	//constexpr auto MixedNationTeamFlagRegionId = 0x270; // FString
	//constexpr auto DisabledFlagSelections = 0x280; // TArray<FString>
	//constexpr auto FlagChangeCooldownDays = 0x290; // int32_t
	//constexpr auto bEnableEventServicePayouts = 0x294; // bool
	//constexpr auto bLiveGamesClientAnalyticsEnabled = 0x295; // bool
	//constexpr auto MinimumWaitTimeToRequestNewShowdownScoreForWindow = 0x298; // float
	//constexpr auto EventServicePayoutRefreshRateSeconds = 0x29c; // int32_t
	//constexpr auto EventServicePayoutRefreshSpreadSeconds = 0x2a0; // int32_t
	//constexpr auto BundleLoaderWidgetTimerInterval = 0x2a4; // float
	//constexpr auto CancelledEvents = 0x2a8; // TArray<FString>
	//constexpr auto SecondsShowStartingMatchMessageForScheduledMMEvents = 0x2b8; // int32_t
	//constexpr auto bEnableMatchAbandonProcess = 0x2bc; // bool
	//constexpr auto MatchAbandonTimeout = 0x2c0; // float
	//constexpr auto bEnableMultidivisionTournamentEventIdQuorum = 0x2c4; // bool
	//constexpr auto CloudSaveIntervalConfig = 0x2c8; // double
	//constexpr auto bSaveToCloudOnMapLoad = 0x2d0; // bool
	//constexpr auto bSaveToCloudOnSuspend = 0x2d1; // bool
	//constexpr auto bSaveToCloudOnDeactivate = 0x2d2; // bool
	//constexpr auto bSaveToCloudOnTerminate = 0x2d3; // bool
	//constexpr auto bSaveToCloudOnExit = 0x2d4; // bool
	//constexpr auto bSaveToCloudOnLogout = 0x2d5; // bool
	//constexpr auto GiftNotificationRefreshTimer = 0x2d8; // double
	//constexpr auto bEnableUndoPurchase = 0x2e0; // bool
	//constexpr auto bMoveUndoToBottomBar = 0x2e1; // bool
	//constexpr auto bShowStoreBanner = 0x2e2; // bool
	//constexpr auto InGameStoreUpdateChance = 0x2e4; // float
	//constexpr auto bEnableReplayBrowser = 0x2e8; // bool
	//constexpr auto WhitelistedReplayCLs = 0x2f0; // TArray<uint32_t>
	//constexpr auto bAllowAllReplays = 0x300; // bool
	//constexpr auto bEnableReplayRecording = 0x301; // bool
	//constexpr auto bEnableLargeTeamReplayRecording = 0x302; // bool
	//constexpr auto bEnableCreativeModeReplayRecording = 0x303; // bool
	//constexpr auto bEnablePlaygroundModeReplayRecording = 0x304; // bool
	//constexpr auto bEnableSplitscreenReplayRecording = 0x305; // bool
	//constexpr auto bEnableReplayDemoSplitting = 0x306; // bool
	//constexpr auto bStableReplayPlayback = 0x307; // bool
	//constexpr auto bEnableHearingAccessibility = 0x308; // bool
	//constexpr auto bDisableSpatializationInsteadOfMutingWhenHearingAccessibilityEnabled = 0x309; // bool
	//constexpr auto bAllowVisualizingSoundsWithStereoAudio = 0x30a; // bool
	//constexpr auto bEnableMetaSoundTestSimple = 0x30b; // bool
	//constexpr auto bEnableMetaSoundTestComplex = 0x30c; // bool
	//constexpr auto bDisableGifting = 0x30d; // bool
	//constexpr auto bImmediateClaimOfEmote = 0x30e; // bool
	//constexpr auto bForceRestrictChat = 0x30f; // bool
	//constexpr auto GiftLimitAmount = 0x310; // int32_t
	//constexpr auto bBattlePassGiftingEmergencyDisable = 0x314; // bool
	//constexpr auto bEnableBattlePassGiftingButton = 0x315; // bool
	//constexpr auto bEnableBattlePassGiftingButtonTokenOnly = 0x316; // bool
	//constexpr auto bShowBPGiftBoxPopup = 0x317; // bool
	//constexpr auto EndBattleRoyalUpdateDelay = 0x318; // float
	//constexpr auto LightswitchDownLoginDelay = 0x31c; // float
	//constexpr auto bShowStatusButtonOnWaitingRoomScreen = 0x320; // bool
	//constexpr auto bInvertMotionOnUnattachedSwitchControllers = 0x321; // bool
	//constexpr auto bDisableTouchLookVelocityScaling = 0x322; // bool
	//constexpr auto bDisablePurchaseHistoryScreen = 0x323; // bool
	//constexpr auto bEnableRedeemOfflinePurchasesToasts = 0x324; // bool
	//constexpr auto bAllowProcessedPayoutsToRefreshProfile = 0x325; // bool
	//constexpr auto TouchAimAssistStrengthScalar = 0x328; // float
	//constexpr auto bDisableTouchAimAssistAutoTracking = 0x32c; // bool
	//constexpr auto bProcessGamepadInputOnMobile = 0x32d; // bool
	//constexpr auto bMobileForceGamepadHUDWhenAttached = 0x32e; // bool
	//constexpr auto bDisableLegacyControls = 0x32f; // bool
	//constexpr auto bFixAimAssistDeadzoneExploit = 0x330; // bool
	//constexpr auto CrucibleWhitelistOverride = 0x331; // ECrucibleWhitelistOverride
	//constexpr auto bDisableCrucibleStatUpload = 0x332; // bool
	//constexpr auto bDisableCrucibleStatDownload = 0x333; // bool
	//constexpr auto bDisableCrucibleGlobalLeaderboards = 0x334; // bool
	//constexpr auto bDisableCrucibleFriendLeaderboards = 0x335; // bool
	//constexpr auto bDisableCrucibleAnalyticsEvents = 0x336; // bool
	//constexpr auto bDisableCrucibleDestroyDeadBots = 0x337; // bool
	//constexpr auto bDisableCrucibleForcedGC = 0x338; // bool
	//constexpr auto bDisableCrucibleLeaderboardFilterText = 0x339; // bool
	//constexpr auto bDisableCrucibleLeaderboardSwitching = 0x33a; // bool
	//constexpr auto bCrucibleLockToPlatform = 0x33b; // bool
	//constexpr auto bCrucibleSendStatsEndOfSession = 0x33c; // bool
	//constexpr auto bCrucibleSendStatsEndOfSessionOnShutdownEvent = 0x33d; // bool
	//constexpr auto CrucibleMinValidStatScoreMilliseconds = 0x340; // int32_t
	//constexpr auto CrucibleLeaderboardFriendQueryMaxSize = 0x344; // int32_t
	//constexpr auto bCrucibleLeaderboardEnableDisplayNameIcons = 0x348; // bool
	//constexpr auto bEnableFortLeaderboardHelperDisplayNonPlatformNames = 0x349; // bool
	//constexpr auto bEnableFortLeaderboardHelperConsolePlatformNameSearch = 0x34a; // bool
	//constexpr auto bEnableFortLeaderboardHelperConsoleDisplayNameFallback = 0x34b; // bool
	//constexpr auto bDisableCollectionStatsUpload = 0x34c; // bool
	//constexpr auto bDisableCollectionStatsDownload = 0x34d; // bool
	//constexpr auto CollectionStatsFriendQueryMaxSize = 0x350; // int32_t
	//constexpr auto bSoundIndicatorsAlwaysEnabled = 0x354; // bool
	//constexpr auto bSoundIndicatorsEnabledForTeammates = 0x355; // bool
	//constexpr auto bSoundIndicatorsPooled = 0x356; // bool
	//constexpr auto SoundIndicatorMaxNum = 0x358; // int32_t
	//constexpr auto TencentDefaultBookStatSeason = 0x35c; // int32_t
	//constexpr auto bEquipFirstWeaponOnMobile = 0x360; // bool
	//constexpr auto bClearLastFireOnAbilityFailed = 0x361; // bool
	//constexpr auto bUsePrototypeSubGameLoadingScreen = 0x362; // bool
	//constexpr auto bForcePrototypeLoadingScreenScaling = 0x363; // bool
	//constexpr auto ShowEliminationDistanceOver = 0x364; // float
	//constexpr auto FadeOutTeamIndicatorsAfter = 0x368; // float
	//constexpr auto FadeOutNPCEnemyIndicatorsAfter = 0x36c; // float
	//constexpr auto FadeOutEnemyIndicatorsAfter = 0x370; // float
	//constexpr auto FadeOutWorldItemIndicatorsAfter = 0x374; // float
	//constexpr auto FadeOutHardCoreBeaconIndicatorsAfter = 0x378; // float
	//constexpr auto MapIndicatorTouchClearDistance = 0x37c; // float
	//constexpr auto MapIndicatorOffset = 0x380; // FVector2D
	//constexpr auto AthenaMapZoomMax = 0x390; // float
	//constexpr auto BacchusMapIndicatorSizeMultiplier = 0x394; // float
	//constexpr auto AthenaMapPanSpeedMultiplier = 0x398; // float
	//constexpr auto AthenaMapZoomSpeedMultiplier = 0x39c; // float
	//constexpr auto bAthenaMapMapIconsFlowEnabled = 0x3a0; // bool
	//constexpr auto WaitTimeBeforeShowingNewModeViolator = 0x3a4; // float
	//constexpr auto FriendCodeShareWarningMessage = 0x3a8; // FRuntimeOptionLocalizableString
	//constexpr auto PlatformPlayAllowedErrorMessage = 0x3b8; // FRuntimeOptionLocalizableString
	//constexpr auto bOnlyShareURLWithNoMessage = 0x3c8; // bool
	//constexpr auto bExcludeURLInShareMessage = 0x3c9; // bool
	//constexpr auto bShowCreateAccountOnRedirect = 0x3ca; // bool
	//constexpr auto bEnableContextTutorial = 0x3cb; // bool
	//constexpr auto bDebugForcePlayerSurveys = 0x3cc; // bool
	//constexpr auto bFeedbackTextShown = 0x3cd; // bool
	//constexpr auto bEnableBadMatchPopup = 0x3ce; // bool
	//constexpr auto BadMatchIncidentThreshold = 0x3d0; // int32_t
	//constexpr auto BadConnectionUpdateTime = 0x3d4; // float
	//constexpr auto BadMatchPopupRecallInterval = 0x3d8; // int32_t
	//constexpr auto AthenaCodeOfConductURL = 0x3e0; // FString
	//constexpr auto KairosCommunityRulesURL = 0x3f0; // FString
	//constexpr auto BacchusFriendCodeShareURL = 0x400; // FString
	//constexpr auto CreateAccountUrl = 0x410; // FString
	//constexpr auto GooglePlayRatingURL = 0x420; // FString
	//constexpr auto LinkAccountURL = 0x430; // FString
	//constexpr auto AccountMergeMoreInfoURL = 0x440; // FString
	//constexpr auto bEnableFactionTechScreen = 0x450; // bool
	//constexpr auto bRequireFactionChoiceOnInfiltrationPlay = 0x451; // bool
	//constexpr auto TotalPlayerTechLevelsToShow = 0x454; // int32_t
	//constexpr auto SupportURL = 0x458; // FString
	//constexpr auto CheckStatusURL = 0x468; // FString
	//constexpr auto iOSAppStoreURL = 0x478; // FString
	//constexpr auto TurnOnMfaURL = 0x488; // FString
	//constexpr auto ArenaResetTime = 0x498; // FString
	//constexpr auto ListOfCreatorsURL = 0x4a8; // FString
	//constexpr auto bAllowCodeRedemptionInSubgameSelect = 0x4b8; // bool
	//constexpr auto bEnableAutomaticMOTD = 0x4b9; // bool
	//constexpr auto bShowMOTDInLobby = 0x4ba; // bool
	//constexpr auto bMOTDSameNewsForCreative = 0x4bb; // bool
	//constexpr auto bSkipSubgameSelect = 0x4bc; // bool
	//constexpr auto BRUpdatesURLMode = 0x4bd; // ENewsExternalURLMode
	//constexpr auto BRUpdatesURL = 0x4c0; // FString
	//constexpr auto STWUpdatesURLMode = 0x4d0; // ENewsExternalURLMode
	//constexpr auto STWUpdatesURL = 0x4d8; // FString
	//constexpr auto GiftingInfoURL = 0x4e8; // FString
	//constexpr auto PrivacyPolicyURL = 0x4f8; // FString
	//constexpr auto FanContentPolicyURL = 0x508; // FString
	//constexpr auto TermsOfServiceURL = 0x518; // FString
	//constexpr auto GuardianChallengeLengthDays = 0x528; // int32_t
	//constexpr auto bAgeGateFlowEnabled = 0x52c; // bool
	//constexpr auto bEnableContentControls = 0x52d; // bool
	//constexpr auto ContentControlsMoreInfoURL = 0x530; // FString
	//constexpr auto ContentControlsForgotPinURL = 0x540; // FString
	//constexpr auto ContentControlsVerifyEmailURL = 0x550; // FString
	//constexpr auto bEnableContentControlsPlaytimeReporting = 0x560; // bool
	//constexpr auto bEnableContentControlsPurchaseReporting = 0x561; // bool
	//constexpr auto bContentControlsViewUGCEnabled = 0x562; // bool
	//constexpr auto bContentControlsFriendRequestPinLength = 0x564; // int32_t
	//constexpr auto MaxNumItemsInCreativeChests = 0x568; // int32_t
	//constexpr auto MaxStackSizeForCreativeResources = 0x56c; // int32_t
	//constexpr auto MaxStreamerMatchmakingDelay = 0x570; // int32_t
	//constexpr auto bEnableHiddenMatchmakingDelay = 0x574; // bool
	//constexpr auto TencentStoreDetailsURL = 0x578; // FString
	//constexpr auto PSALoadingScreenPercentChance = 0x588; // int32_t
	//constexpr auto StwDownloadLauncherOption = 0x590; // FString
	//constexpr auto OverrideDefaultBonusXpEventTitleString = 0x5a0; // FRuntimeOptionLocalizableString
	//constexpr auto XBLDisableText = 0x5b0; // FRuntimeOptionLocalizableString
	//constexpr auto PSNDisableText = 0x5c0; // FRuntimeOptionLocalizableString
	//constexpr auto SwitchDisableText = 0x5d0; // FRuntimeOptionLocalizableString
	//constexpr auto ReviewPromptCriteria = 0x5e0; // FRuntimeOptionReviewPromptCriteria
	//constexpr auto bDisableAllKnobs = 0x5f4; // bool
	//constexpr auto bDisableAllGameplayMessages = 0x5f5; // bool
	//constexpr auto bDisableMatchmakingKnobs = 0x5f6; // bool
	//constexpr auto bDisableMinigameKnobs = 0x5f7; // bool
	//constexpr auto bDisableGameOptionKnobs = 0x5f8; // bool
	//constexpr auto bDisableAffiliateFeature = 0x5f9; // bool
	//constexpr auto bUseHotfixedAffiliateNamesArray = 0x5fa; // bool
	//constexpr auto bEnablePrerollLlamas = 0x5fb; // bool
	//constexpr auto bEnableSubregionNetworkAccelerators = 0x5fc; // bool
	//constexpr auto DisabledNetworkAcceleratedSubregions = 0x600; // TArray<FString>
	//constexpr auto AdvertisedNetworkAcceleratedSubregions = 0x610; // TArray<FString>
	//constexpr auto bShowAccountItemWarningForVaultThreshold = 0x620; // bool
	//constexpr auto DaysBetweenAccountItemWarnings = 0x624; // int32_t
	//constexpr auto VaultLimitThresholdForAccountItemWarning = 0x628; // float
	//constexpr auto bShowAccountItemWarningForItemCount = 0x62c; // bool
	//constexpr auto AlwaysWarnAccountItemCount = 0x630; // int32_t
	//constexpr auto DisabledFrontendNavigationTabs = 0x638; // TArray<FRuntimeOptionTabStateInfo>
	//constexpr auto DisabledTabsForOutOfSeason = 0x648; // TArray<FRuntimeOptionTabStateInfo>
	//constexpr auto TournamentDisabledFrontendNavigationTabs = 0x658; // TArray<FRuntimeOptionTabStateInfo>
	//constexpr auto DisabledMatchmakingKnobs = 0x668; // TArray<FString>
	//constexpr auto HiddenMatchmakingKnobs = 0x678; // TArray<FString>
	//constexpr auto DisabledGameplayMessages = 0x688; // TArray<FRuntimeOptionDisabledGameplayMessage>
	//constexpr auto NumGameplayMessageChannels = 0x698; // int32_t
	//constexpr auto AffiliateNames = 0x6a0; // TArray<FString>
	//constexpr auto bShowMOTDNews = 0x6b0; // bool
	//constexpr auto DPlusVBuckPromoStart = 0x6b8; // FDateTime
	//constexpr auto DPlusVBuckPromoEnd = 0x6c0; // FDateTime
	//constexpr auto CountryCodesForDPlusVBuckOverride = 0x6c8; // TArray<FString>
	//constexpr auto RockyRidgeStart = 0x6d8; // FDateTime
	//constexpr auto SoloTournamentScoreThresholds = 0x6e0; // TArray<FRuntimeOptionTournamentScoreThreshold>
	//constexpr auto DuoTournamentScoreThresholds = 0x6f0; // TArray<FRuntimeOptionTournamentScoreThreshold>
	//constexpr auto SquadsTournamentScoreThresholds = 0x700; // TArray<FRuntimeOptionTournamentScoreThreshold>
	//constexpr auto PickingInteractDistance = 0x710; // float
	//constexpr auto PickingHighlightMovementUpdateDist = 0x714; // float
	//constexpr auto PickingHighlightUpdateTime = 0x718; // float
	//constexpr auto PickingTime = 0x71c; // float
	//constexpr auto AutoPickingInteractDistanceFactor = 0x720; // float
	//constexpr auto AutoOpenDoorInputMagnitude = 0x724; // float
	//constexpr auto AutoOpenDoorTraceDistance = 0x728; // float
	//constexpr auto bAutofireEnabled = 0x72c; // bool
	//constexpr auto bShowXPWidgets = 0x72d; // bool
	//constexpr auto bShowAccoladesListWidget = 0x72e; // bool
	//constexpr auto bEnableInGameMatchmaking = 0x72f; // bool
	//constexpr auto bUseNewFlowIngameMatchmaking = 0x730; // bool
	//constexpr auto bToggleIGMAnalytics = 0x731; // bool
	//constexpr auto WhitelistedInGameMatchmakingRegions = 0x738; // TArray<FString>
	//constexpr auto WhitelistedInGameMatchmakingSubRegions = 0x748; // TArray<FString>
	//constexpr auto BlacklistedInGameMatchmakingSubRegions = 0x758; // TArray<FString>
	//constexpr auto BlacklistedInGameMatchmakingPlaylists = 0x768; // TArray<FName>
	//constexpr auto SubRegionWhitelistedInGameMatchmakingPlaylists = 0x778; // TArray<FName>
	//constexpr auto bAllowPreserveSquad = 0x788; // bool
	//constexpr auto bAllowPreserveSquadMemberVoting = 0x789; // bool
	//constexpr auto bKeepPlayingTogether = 0x78a; // bool
	//constexpr auto bPartyRift = 0x78b; // bool
	//constexpr auto bAutofireUsesComponent = 0x78c; // bool
	//constexpr auto bAutofireUsesAutoaimTarget = 0x78d; // bool
	//constexpr auto bHoldToFireOnAutofireTarget = 0x78e; // bool
	//constexpr auto DefaultAutofireRange = 0x790; // float
	//constexpr auto AutofireExtraTrackingRange = 0x794; // float
	//constexpr auto bServerNetDriverAnalytics = 0x798; // bool
	//constexpr auto bClientNetDriverAnalytics = 0x799; // bool
	//constexpr auto bDisableReplicationGraph = 0x79a; // bool
	//constexpr auto BRServerMaxTickRate = 0x79c; // float
	//constexpr auto DoubleTapOnEndTouchTime = 0x7a0; // float
	//constexpr auto DoubleTapOnStartTouchTime = 0x7a4; // float
	//constexpr auto DoubleTapDistance = 0x7a8; // float
	//constexpr auto SingleTapDistance = 0x7ac; // float
	//constexpr auto TouchMoveStickRadius = 0x7b0; // float
	//constexpr auto TouchMoveStickRadiusTargeting = 0x7b4; // float
	//constexpr auto TouchMoveStickRadiusScoped = 0x7b8; // float
	//constexpr auto TouchMoveStickRadiusDriving = 0x7bc; // float
	//constexpr auto AutorunLockZoneOffset = 0x7c0; // float
	//constexpr auto AutorunLockZoneDelay = 0x7c4; // float
	//constexpr auto MoveOriginResetTime = 0x7c8; // float
	//constexpr auto MoveOriginResetDistance = 0x7cc; // float
	//constexpr auto MoveOriginFollowDistance = 0x7d0; // float
	//constexpr auto bDisableTouchLookInertia = 0x7d4; // bool
	//constexpr auto RotateInertiaMultiplier = 0x7d8; // float
	//constexpr auto RotateInertiaMinTime = 0x7dc; // float
	//constexpr auto RotateInertiaMinLength = 0x7e0; // float
	//constexpr auto RotateInertiaMinMagnitude = 0x7e4; // float
	//constexpr auto RotateInertiaNumAveragedTouches = 0x7e8; // int32_t
	//constexpr auto bTouchQuickbarTapToLockEnabled = 0x7ec; // bool
	//constexpr auto bTouchInteractInUIAvailable = 0x7ed; // bool
	//constexpr auto bTouchInteractInUIForced = 0x7ee; // bool
	//constexpr auto bEnableHUDLayoutTool = 0x7ef; // bool
	//constexpr auto bEnableHUDLayoutCloudSave = 0x7f0; // bool
	//constexpr auto bEnableHUDLayoutToolPanZoom = 0x7f1; // bool
	//constexpr auto bEnableMobileHUDV2 = 0x7f2; // bool
	//constexpr auto bEnableHUDLayoutToolV2 = 0x7f3; // bool
	//constexpr auto bEnableHUDLayoutToolV2_GridSnap = 0x7f4; // bool
	//constexpr auto bEnableGFNSettingEditCondition = 0x7f5; // bool
	//constexpr auto AthenaExternalRichPresenceDelayTimeSeconds = 0x7f8; // float
	//constexpr auto bEnableExternalPresenceAthenaPlayersRemain = 0x7fc; // bool
	//constexpr auto MinimumTimeBetweenConsolePresenceUpdates = 0x800; // float
	//constexpr auto MinimumTimeBetweenMCPPresenceUpdates = 0x804; // float
	//constexpr auto TimeBetweenStorePatchCheckRequestsSeconds = 0x808; // int32_t
	//constexpr auto bInviteUIDisabled = 0x80c; // bool
	//constexpr auto bEnableInGameMipsAnalyticsReporting = 0x80d; // bool
	//constexpr auto SecondsBetweenTextureStatsGathering = 0x810; // float
	//constexpr auto bEnableMipsCapExperiment = 0x814; // bool
	//constexpr auto CurrentMipsCapExperimentVersion = 0x818; // int32_t
	//constexpr auto bEnableQualitySelectionScreen = 0x81c; // bool
	//constexpr auto bEnableQualityLevelSelectScreenTimer = 0x81d; // bool
	//constexpr auto bEnableDownloadAnalyticsReporting = 0x81e; // bool
	//constexpr auto bEnableDownloadHeartbeat = 0x81f; // bool
	//constexpr auto DownloadHeartbeatIntervalInSeconds = 0x820; // float
	//constexpr auto bEnableFriendsListButton = 0x824; // bool
	//constexpr auto bForceDisableCrossplatformSquadFill = 0x825; // bool
	//constexpr auto bRequireCrossplayOptIn = 0x826; // bool
	//constexpr auto bUseAccountCrossplayPermissions = 0x827; // bool
	//constexpr auto bSingleCrossplayOptInPrompt = 0x828; // bool
	//constexpr auto bImmediatelyDisplayCrossplayOptIn_STW = 0x829; // bool
	//constexpr auto bImmediatelyDisplayCrossplayOptIn_BR = 0x82a; // bool
	//constexpr auto bCrossplayOptInByDefault = 0x82b; // bool
	//constexpr auto bShowIconForSamePlatformPlayers = 0x82c; // bool
	//constexpr auto bObscuredPlatformIcons = 0x82d; // bool
	//constexpr auto bEnableChatWidget = 0x82e; // bool
	//constexpr auto bShowVoiceChatSettings = 0x82f; // bool
	//constexpr auto bShowMultipleVoiceChatSettings = 0x830; // bool
	//constexpr auto bUseClientSettingsForControllerImage = 0x831; // bool
	//constexpr auto bPartyInProgress = 0x832; // bool
	//constexpr auto bEnableSidebar = 0x833; // bool
	//constexpr auto bEnableSidebarExit = 0x834; // bool
	//constexpr auto bEnableSidebarExpressYourSupport = 0x835; // bool
	//constexpr auto bEnableHotTamaleWithVeggies = 0x836; // bool
	//constexpr auto bEnableHotTamaleWithTofu = 0x837; // bool
	//constexpr auto bEnableHotTamale = 0x838; // bool
	//constexpr auto bEnableHotTamaleWithCheese = 0x839; // bool
	//constexpr auto bEnableHotTamaleWithOnions = 0x83a; // bool
	//constexpr auto bEnableHotTamaleWithRice = 0x83b; // bool
	//constexpr auto HotTamaleWithVeggiesEditorTooltipDurationSeconds = 0x83c; // int32_t
	//constexpr auto HotTamaleWithVeggiesTabTooltipDurationSeconds = 0x840; // int32_t
	//constexpr auto HotTamaleWithVeggiesStringTable = 0x844; // FName
	//constexpr auto HotTamaleWithVeggiesReplaceOperationIntermediateDelay = 0x848; // float
	//constexpr auto bShouldAthenaQueryRecentPlayers = 0x84c; // bool
	//constexpr auto bEnableRecentPlayerList = 0x84d; // bool
	//constexpr auto bEnableSuggestedFriendList = 0x84e; // bool
	//constexpr auto bEnableBlockedList = 0x84f; // bool
	//constexpr auto bEnableFriendListInGame = 0x850; // bool
	//constexpr auto bPushJIPInfoToPlatformPresence = 0x851; // bool
	//constexpr auto bEnableStWInZonePrivacyChange = 0x852; // bool
	//constexpr auto bEnableSitoutOption = 0x853; // bool
	//constexpr auto bEnableSitoutOption_STW = 0x854; // bool
	//constexpr auto bEnableSocialPanelLeaveParty = 0x855; // bool
	//constexpr auto bEnableMainMenuLeaveParty = 0x856; // bool
	//constexpr auto MinUSSNameLength = 0x858; // int32_t
	//constexpr auto bEnableNickname = 0x85c; // bool
	//constexpr auto bAllowNicknameEmoji = 0x85d; // bool
	//constexpr auto NicknameEmojiBlacklist = 0x860; // TArray<FString>
	//constexpr auto bNicknameInFront = 0x870; // bool
	//constexpr auto bShowAccountBoosts = 0x871; // bool
	//constexpr auto bShowCustomerSupport = 0x872; // bool
	//constexpr auto bEnableChannelChangePopup = 0x873; // bool
	//constexpr auto bEnableVoiceSpeakerWidget = 0x874; // bool
	//constexpr auto bEnableSpeakerWidgetZonePerfMode = 0x875; // bool
	//constexpr auto bShowVoiceIndicatorsWhileLoading = 0x876; // bool
	//constexpr auto bEnableVoiceChannelSelectionUI = 0x877; // bool
	//constexpr auto bEnableGlobalChat = 0x878; // bool
	//constexpr auto bEnableAllTabInChat = 0x879; // bool
	//constexpr auto bEnableEULA = 0x87a; // bool
	//constexpr auto bEnableEndOfZoneCinematic = 0x87b; // bool
	//constexpr auto bEnableOnboardingCinematics = 0x87c; // bool
	//constexpr auto VideoDisplayDataBlacklist = 0x880; // TArray<FName>
	//constexpr auto bShowFounderBannerIcons = 0x890; // bool
	//constexpr auto bShowCurrentRegionInLobby = 0x891; // bool
	//constexpr auto bEnableFoundersDailyRewards = 0x892; // bool
	//constexpr auto bEnableTwitchIntegration = 0x893; // bool
	//constexpr auto bEnableMatchmakingRegionSetting = 0x894; // bool
	//constexpr auto bEnableReadyupButtonWhileSittingout = 0x895; // bool
	//constexpr auto bEnableEulaRequiredTournaments = 0x896; // bool
	//constexpr auto bEnableMFARequiredTournaments = 0x897; // bool
	//constexpr auto bAllTournamentsRequireMFA = 0x898; // bool
	//constexpr auto bSpectatorBroadcasterSkipMfaEulaCheck = 0x899; // bool
	//constexpr auto bEnableNaviationToChat = 0x89a; // bool
	//constexpr auto bEnableLanguageSetting = 0x89b; // bool
	//constexpr auto bEnableFriendCodeSetting = 0x89c; // bool
	//constexpr auto bEnableEarlyAccessLoadingScreenBanner = 0x89d; // bool
	//constexpr auto bClientIgnoreIsTournamentCheck = 0x89e; // bool
	//constexpr auto CampaignMatchEndRetryCount = 0x8a0; // int32_t
	//constexpr auto StWTutorialDownloadAttempts = 0x8a4; // int32_t
	//constexpr auto bShopPurchaseConfirmation = 0x8a8; // bool
	//constexpr auto bShopPurchaseConfirmationJapanPS4 = 0x8a9; // bool
	//constexpr auto bToyMessagingEnabled = 0x8aa; // bool
	//constexpr auto bAllowAccessToAllEmotesForTesting = 0x8ab; // bool
	//constexpr auto bAllowAccessToStWHeroOutfitsAndBackblingForTesting = 0x8ac; // bool
	//constexpr auto bEnableCosmeticItemShopInSTW = 0x8ad; // bool
	//constexpr auto bRequireEmoteOwnershipInPIE = 0x8ae; // bool
	//constexpr auto bEnableSTWLootDrops = 0x8af; // bool
	//constexpr auto bEnableSTWContainerItemCacheDrops = 0x8b0; // bool
	//constexpr auto bEnableSTWEnemyItemCacheDrops = 0x8b1; // bool
	//constexpr auto bEnableHoldToPickupUI = 0x8b2; // bool
	//constexpr auto bSkipTrailerMovie = 0x8b3; // bool
	//constexpr auto bAlwaysPlayTrailerMovie = 0x8b4; // bool
	//constexpr auto bHideUnaffordableMtxPurchases = 0x8b5; // bool
	//constexpr auto bDisableCTAInMtxStoreSelection = 0x8b6; // bool
	//constexpr auto bAthenaFrontEndUsePushPopMTXStore = 0x8b7; // bool
	//constexpr auto bHidePlusOnVbucksButton = 0x8b8; // bool
	//constexpr auto bAllowXboxStwAccessDuringLiveStoreOutage = 0x8b9; // bool
	//constexpr auto bShowReplayTrailerButton_Athena = 0x8ba; // bool
	//constexpr auto bEnableAlterationModification = 0x8bb; // bool
	//constexpr auto bEnableSchematicRarityUpgrade = 0x8bc; // bool
	//constexpr auto bEnableMissionActivationVote = 0x8bd; // bool
	//constexpr auto bEnableLtmRetrieveTheData = 0x8be; // bool
	//constexpr auto bEnableUpgradesVideos = 0x8bf; // bool
	//constexpr auto bEnableExternalRichPresence = 0x8c0; // bool
	//constexpr auto bShowEnableMFAModalAtStartupAthena = 0x8c1; // bool
	//constexpr auto bShowEnableMFAModalAtStartupSTW = 0x8c2; // bool
	//constexpr auto bEnableAIBuildingHitFX = 0x8c3; // bool
	//constexpr auto LevelToStartShowingMFAModal = 0x8c4; // int32_t
	//constexpr auto DaysBetweenEnableMFAModalPrompts = 0x8c8; // int32_t
	//constexpr auto DelayGiftButtonWhenMFANotEnabledSeconds = 0x8cc; // float
	//constexpr auto LevelToAutoOpenBattlePassOnNewSeason = 0x8d0; // int32_t
	//constexpr auto ForceSeasonRefreshCounter = 0x8d4; // int32_t
	//constexpr auto ForceVideoRefreshCounter = 0x8d8; // int32_t
	//constexpr auto bForceBattlePassPreview = 0x8dc; // bool
	//constexpr auto bCanShowSTWUpsellInBR = 0x8dd; // bool
	//constexpr auto bShowLeaderboardPrivacySettings = 0x8de; // bool
	//constexpr auto bEnableServerScoreboardLog = 0x8df; // bool
	//constexpr auto bEnableAsyncScoreboardFlush = 0x8e0; // bool
	//constexpr auto bEnableInputBasedMatchmaking = 0x8e1; // bool
	//constexpr auto bUsingAlternateMatchmakingModel = 0x8e2; // bool
	//constexpr auto bNotifyBlockedInput = 0x8e3; // bool
	//constexpr auto NumberOfFramesBeforeWarnInputBlocked = 0x8e4; // int32_t
	//constexpr auto bDisableVideoOptions = 0x8e8; // bool
	//constexpr auto bEnableBattlePassWatchVideoActionOnCell = 0x8e9; // bool
	//constexpr auto bEnableBattlePassReplayCinematicAction = 0x8ea; // bool
	//constexpr auto bEnableCareerReplayCinematicAction = 0x8eb; // bool
	//constexpr auto RadioInputDebounceSeconds = 0x8ec; // float
	//constexpr auto RadioTuningRetryTime = 0x8f0; // float
	//constexpr auto RadioTuningRetryCount = 0x8f4; // int32_t
	//constexpr auto bEnableBattlePassSocialFriends = 0x8f8; // bool
	//constexpr auto bEnableBattlePassSocialFriendsOfDifferentPlatforms = 0x8f9; // bool
	//constexpr auto bEnableBattlePassSocialFriendsServerSide = 0x8fa; // bool
	//constexpr auto bEnableSimulatedXPForBattlePassSocialFriends = 0x8fb; // bool
	//constexpr auto bEnableBattlePassPreviewOnRewardScreen = 0x8fc; // bool
	//constexpr auto bEnableHoldToCloseOnRewardsScreen = 0x8fd; // bool
	//constexpr auto BattleStarsNeededToShowRewardPreview = 0x900; // int32_t
	//constexpr auto ShowBattlePassTracker = 0x904; // int32_t
	//constexpr auto bDisplayBattlePassRewardsIndividually = 0x908; // bool
	//constexpr auto bDisplayOnlyBattlePassFAQ = 0x909; // bool
	//constexpr auto bEnableBPVideo = 0x90a; // bool
	//constexpr auto bEnableUEKGameSelect = 0x90b; // bool
	//constexpr auto bCompletelyDisableUEKGameSelect = 0x90c; // bool
	//constexpr auto bAlwaysPlayBPVideo = 0x90d; // bool
	//constexpr auto bDisableGRL = 0x90e; // bool
	//constexpr auto bShowBPPreviewVideo = 0x90f; // bool
	//constexpr auto bShowBPTrack_TimeLeft = 0x910; // bool
	//constexpr auto bDisplayAllCharactersOnBattlePassPreviewScreen = 0x911; // bool
	//constexpr auto bRefreshBattlePassCatalogOnSeasonDataLoaded = 0x912; // bool
	//constexpr auto bEnableChallengeHolidayVideo = 0x913; // bool
	//constexpr auto bEnableCareerScreenVideo = 0x914; // bool
	//constexpr auto bEnableSpecialEventVideo = 0x915; // bool
	//constexpr auto bEnableCNVideo = 0x916; // bool
	//constexpr auto bEnableWinterfestPurchaseButton = 0x917; // bool
	//constexpr auto bEnableWinterfestGiftButton = 0x918; // bool
	//constexpr auto bForceWinterfestInfoModalButtonVisible = 0x919; // bool
	//constexpr auto NumViewsToDisplayWinterfestInfoModalButton = 0x91c; // int32_t
	//constexpr auto bCheckForPatchUpdateOnMatchmakingPlayClick = 0x920; // bool
	//constexpr auto bCheckForPatchUpdateOnItemShopActivate = 0x921; // bool
	//constexpr auto HiddenSettings = 0x928; // TArray<FString>
	//constexpr auto bDisplayPlayerReportingRoles = 0x938; // bool
	//constexpr auto bDisplayRelevantPlayersForPlayerReporting = 0x939; // bool
	//constexpr auto bPreventMultipleReportsOfSamePlayer = 0x93a; // bool
	//constexpr auto bAllowReportingFeaturedIslands = 0x93b; // bool
	//constexpr auto bForceGamepadPlaytest = 0x93c; // bool
	//constexpr auto bEnableNewFireModeSelection = 0x93d; // bool
	//constexpr auto bEnableHUDPresetSelection = 0x93e; // bool
	//constexpr auto bEnableAddFriendWhileSpectating = 0x93f; // bool
	//constexpr auto bEnableFriendLink = 0x940; // bool
	//constexpr auto PlatformChatToastDisplaySeconds = 0x944; // float
	//constexpr auto HPMicrophoneToastDisplaySeconds = 0x948; // float
	//constexpr auto FriendLinkURL = 0x950; // FString
	//constexpr auto bAllowForceTouchFire = 0x960; // bool
	//constexpr auto VehicleSessionMinTimeUsed = 0x964; // float
	//constexpr auto RebootChipExpirationTime = 0x968; // float
	//constexpr auto RebootDirectiveDisplayTime = 0x96c; // float
	//constexpr auto bDonutIdleGameEnabled = 0x970; // bool
	//constexpr auto bRebootEnableInventoryDisplay = 0x971; // bool
	//constexpr auto bUseHordeStormShield = 0x972; // bool
	//constexpr auto HordeStormShieldStartingRadiusOverride = 0x974; // float
	//constexpr auto HordeStormShieldEndingRadiusOverride = 0x978; // float
	//constexpr auto HordeStormShieldBreatherRadiusOverride = 0x97c; // float
	//constexpr auto bUseHordeRespawnAtLastPawnLocation = 0x980; // bool
	//constexpr auto bAllowHordePlayerTriggeredRespawn = 0x981; // bool
	//constexpr auto MaxQuickScopeAimAssistPulls = 0x984; // int32_t
	//constexpr auto MaxQuickScopeAimAssistPullWatchTime = 0x988; // float
	//constexpr auto bShouldDisablePickaxeFXFrontendPreview = 0x98c; // bool
	//constexpr auto bRegisterPawnsWithSignificanceManagerInFrontEnd = 0x98d; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnPS4 = 0x98e; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnXB1 = 0x98f; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch = 0x990; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnPS4_STWOnly = 0x991; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnXB1_STWOnly = 0x992; // bool
	//constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch_STWOnly = 0x993; // bool
	//constexpr auto bSimpleHeistVanEntrance = 0x994; // bool
	//constexpr auto LobbyGenericLinkButtonURL = 0x998; // FString
	//constexpr auto bEnableLobbyGenericLinkButton = 0x9a8; // bool
	//constexpr auto LobbyGenericLinkButtonText = 0x9b0; // FRuntimeOptionLocalizableString
	//constexpr auto HighlightClipRewindTimeInSeconds = 0x9c0; // int32_t
	//constexpr auto bEnableAntiTaxi = 0x9c4; // bool
	//constexpr auto StopFlyingParachuteCooldownTime = 0x9c8; // float
	//constexpr auto FlushLoadingScreenRefreshSeconds = 0x9cc; // float
	//constexpr auto bEnableVehicleSpawnMissionInStw = 0x9d0; // bool
	//constexpr auto bEnableDownTierCraftingInStw = 0x9d1; // bool
	//constexpr auto bShowBugReportsButton = 0x9d2; // bool
	//constexpr auto bShowCommentReportsButton = 0x9d3; // bool
	//constexpr auto bShowContentReportsButton = 0x9d4; // bool
	//constexpr auto bEnableItemRefundingInStw = 0x9d5; // bool
	//constexpr auto bDisableCareerStatsButton = 0x9d6; // bool
	//constexpr auto bDisableCareerLeaderboardButton = 0x9d7; // bool
	//constexpr auto bDisableCareerStatsPagePlatformProfileButton = 0x9d8; // bool
	//constexpr auto bUsePlatformSpecificTextOnCareerPage = 0x9d9; // bool
	//constexpr auto bDisableViewOtherProfilesFromCompLeaderboards = 0x9da; // bool
	//constexpr auto bShowOtherPlayerStatsOnCareerPage = 0x9db; // bool
	//constexpr auto bShowFeatsOnClient = 0x9dc; // bool
	//constexpr auto bShowHardcoreModifiers = 0x9dd; // bool
	//constexpr auto InputMethodThrashingLimit = 0x9e0; // int32_t
	//constexpr auto InputMethodThrashingWindowInSeconds = 0x9e4; // float
	//constexpr auto bEnableLogUploadForTokenHolders = 0x9e8; // bool
	//constexpr auto TokenHolderLogTailSizeKb = 0x9ec; // float
	//constexpr auto bAllowPartialBackgroundAudio = 0x9f0; // bool
	//constexpr auto bDuplicateRemovedPlayersOnClient = 0x9f1; // bool
	//constexpr auto PlayerMarkerConfig = 0x9f4; // FPlayerMarkerConfig
	//constexpr auto bIsCreativeMultiSelectEnabled = 0xa50; // bool
	//constexpr auto bEnableUserProfilePictures = 0xa51; // bool
	//constexpr auto bEnableChannelsServiceLoadTesting = 0xa52; // bool
	//constexpr auto bAllowMimicingEmotes = 0xa53; // bool
	//constexpr auto bAllowMimicingEmotesInFrontend = 0xa54; // bool
	//constexpr auto bAllowAsyncTooltipLoading = 0xa55; // bool
	//constexpr auto bAllowListViewAsyncLoading = 0xa56; // bool
	//constexpr auto bEnableBackToPartyHubButton = 0xa57; // bool
	//constexpr auto bEnableMobileAvailableLootingListView = 0xa58; // bool
	//constexpr auto bEnableDisambiguateLoading = 0xa59; // bool
	//constexpr auto NumDaysToSnoozeGooglePlayRating = 0xa5c; // int32_t
	//constexpr auto NumDaysAllowedToDelayGoogleRating = 0xa60; // int32_t
	//constexpr auto bEnableMobileInGameAppRating = 0xa64; // bool
	//constexpr auto PreloadRevision = 0xa68; // int32_t
	//constexpr auto bEnableLiveStoreTilePreviews = 0xa6c; // bool
	//constexpr auto bUseLegacyItemShopOfferDetails = 0xa6d; // bool
	//constexpr auto bEnableLiveStoreTilePreviews_InGame = 0xa6e; // bool
	//constexpr auto bAllowedToEnableUIGlobalInvalidation = 0xa6f; // bool
	//constexpr auto bEnableAutoMulchInStW = 0xa70; // bool
	//constexpr auto bAllStWMoonbeamHUD = 0xa71; // bool
	//constexpr auto MaxCharactersInTextEntry = 0xa74; // int32_t
	//constexpr auto IllegalIslandTitleCharacters = 0xa78; // TArray<FString>
	//constexpr auto IllegalIslandTitleChars = 0xa88; // TArray<int32_t>
	//constexpr auto bEnableCreativeUserTextSanitizationWithToxicityService = 0xa98; // bool
	//constexpr auto bEnableCreativeUserTextSanitizationWithPlatformSanitizer = 0xa99; // bool
	//constexpr auto bEnableCreativeUserTextSanitizationWithChatSanitizer = 0xa9a; // bool
	//constexpr auto bUseToxicityAsCreativeMainTextSanitizer = 0xa9b; // bool
	//constexpr auto bUseLegacyAsyncSanitizationLogicInCreative = 0xa9c; // bool
	//constexpr auto KeepPlayingTogetherDuration = 0xaa0; // float
	//constexpr auto KeepPlayingTogetherTickFrequency = 0xaa4; // float
	//constexpr auto bUseLegacyFootsteps = 0xaa8; // bool
	//constexpr auto PawnVisibilityDurationOverrides = 0xab0; // TMap<FGameplayTag, float>
	//constexpr auto HotfixVersionId = 0xb00; // int32_t
	//constexpr auto bCanTurboBuildOutsideBuildModeWithBuildTool = 0xb04; // bool
	//constexpr auto MaxBuildingIntoTerrainIntersectionPercentage = 0xb08; // float
	//constexpr auto bUsingBuildingExtraPiece = 0xb0c; // bool
	//constexpr auto AnalyticsBuildingWallTooLowLocations = 0xb10; // int32_t
	//constexpr auto bDisableClientEngagementsAnalytics = 0xb14; // bool
	//constexpr auto AnalyticsClientEngagementsTimeoutSeconds = 0xb18; // float
	//constexpr auto AnalyticsClientEngagementsMaxSendPerMinute = 0xb1c; // int32_t
	//constexpr auto AnalyticsClientEngagementsMaxSendOnCleanup = 0xb20; // int32_t
	//constexpr auto bAnalyticsClientEngagementsRequireTimeToReturnFireToSend = 0xb24; // bool
	//constexpr auto AnalyticsClientEngagementsParticipationPercent = 0xb28; // int32_t
	//constexpr auto PublishingEnabledForWhitelistedAccounts = 0xb2c; // bool
	//constexpr auto IslandCodeLinkMnemonicExampleText = 0xb30; // FString
	//constexpr auto IslandCodeLinkURLText = 0xb40; // FString
	//constexpr auto FeaturedCreativeLTMAffiliateName = 0xb50; // FString
	//constexpr auto bEnableCreativeLTMSupportCreator = 0xb60; // bool
	//constexpr auto CreativePublishCodeURLPrefix = 0xb68; // FString
	//constexpr auto bCreativeMinimapRendering = 0xb78; // bool
	//constexpr auto bCreativeMinimapCaptureLighting = 0xb79; // bool
	//constexpr auto bCreativeMapRenderingInHub = 0xb7a; // bool
	//constexpr auto bCreativeMapWaitForVolumeReady = 0xb7b; // bool
	//constexpr auto CuratedLinkCodes = 0xb80; // TArray<FString>
	//constexpr auto CuratedIslandTemplateCodes = 0xb90; // TArray<FString>
	//constexpr auto PlaylistCuratedContent = 0xba0; // TMap<FString, FFortPlaylistCuratedContent>
	//constexpr auto bEnableIslandCheckpoints = 0xbf0; // bool
	//constexpr auto bEnableIslandLoadNetSafeGuards = 0xbf1; // bool
	//constexpr auto PlaylistCuratedHub = 0xbf8; // TMap<FString, FString>
	//constexpr auto CreativeIslandImageURLOverrides = 0xc48; // TMap<FString, FString>
	//constexpr auto CreativeIslandGeneratedImageURLOverride = 0xc98; // FString
	//constexpr auto bLoadingScreenInputPreprocessorEnabled = 0xca8; // bool
	//constexpr auto AllowInputTypeFilterForAccessibility = 0xca9; // bool
	//constexpr auto AllowLockPrimaryInputMethodToMouseForAccessibility = 0xcaa; // bool
	//constexpr auto bEnableLiveStream = 0xcab; // bool
	//constexpr auto bEnableLiveStreamCountdown = 0xcac; // bool
	//constexpr auto LiveStreamStartTime = 0xcb0; // FDateTime
	//constexpr auto bEnableLiveStreamInMatch = 0xcb8; // bool
	//constexpr auto bShowLiveStreamInMatchByDefault = 0xcb9; // bool
	//constexpr auto bCaptureTeamFrontendFlag = 0xcba; // bool
	//constexpr auto VideoHolidayName = 0xcbc; // FName
	//constexpr auto VideoBattlePassName = 0xcc0; // FName
	//constexpr auto VideoCareerScreenName = 0xcc4; // FName
	//constexpr auto VideoChallengeScreenName = 0xcc8; // FName
	//constexpr auto VideoFrontEndName = 0xccc; // FName
	//constexpr auto FTUESeasonTrailerBoundary = 0xcd0; // float
	//constexpr auto VideoDurationOffsetFromTransition = 0xcd4; // float
	//constexpr auto VideoDurationOffsetFromEnd = 0xcd8; // float
	//constexpr auto SeasonVideoIDs = 0xce0; // FSeasonVideoIDs
	//constexpr auto bEnableGCBeforeVideoPlayback = 0xd20; // bool
	//constexpr auto EOneVideoLength = 0xd24; // float
	//constexpr auto ETwoVideoLength = 0xd28; // float
	//constexpr auto MediaCDNDistribution = 0xd30; // TArray<float>
	//constexpr auto MaxNumberOfMediaDecoderResources = 0xd40; // int32_t
	//constexpr auto VideoEVMap = 0xd48; // TArray<FString>
	//constexpr auto MediaPartnerRegionControl = 0xd58; // FString
	//constexpr auto LiveStreamPiPMemoryRequired = 0xd68; // int32_t
	//constexpr auto ShouldShowLiveStreamPiPInMatchCounter = 0xd70; // int64_t
	//constexpr auto bEnableNewPIP = 0xd78; // bool
	//constexpr auto bEnableRiskyReelsStreaming = 0xd79; // bool
	//constexpr auto bDisableBlastURLStreamSource = 0xd7a; // bool
	//constexpr auto StreamPlaylistFetchMethodOrder = 0xd7c; // int32_t
	//constexpr auto bHiddenButEnabledLiveStreamInMatch = 0xd80; // bool
	//constexpr auto TimedEventsJIPStartDelay = 0xd84; // float
	//constexpr auto bInputActionHolding = 0xd88; // bool
	//constexpr auto PictureInPictureState = 0xd89; // FPictureInPictureInfo
	//constexpr auto bEnableSplineReticulationById = 0xd8c; // bool
	//constexpr auto bUseSingleHUDUpdatePerFrame = 0xd8d; // bool
	//constexpr auto MinInteractionScoreForFriendToBeConsideredClose = 0xd90; // int64_t
	//constexpr auto MinIntervalBetweenInviteToPartyNotificationsInSeconds = 0xd98; // int64_t
	//constexpr auto DelayBetweenStartOfPostGameAndShowDelayedNotificationsInSeconds = 0xda0; // float
	//constexpr auto PlaylistConditionalFlags = 0xda8; // TArray<FString>
	//constexpr auto bIsUserChoiceAllowedForForcedAndroidStore = 0xdb8; // bool
	//constexpr auto AndroidStoreCounter = 0xdbc; // int32_t
	//constexpr auto bHideCharacterCustomizationNullTile = 0xdc0; // bool
	//constexpr auto bEnablePlaylistRequireCrossplay = 0xdc1; // bool
	//constexpr auto bRequireCrossplayOptInForFill = 0xdc2; // bool
	//constexpr auto bUseConcurrentCrossplayPromptGuard = 0xdc3; // bool
	//constexpr auto MaxSquadSize = 0xdc4; // int32_t
	//constexpr auto MaxPartySizeCampaign = 0xdc8; // int32_t
	//constexpr auto MaxPartySizeAthena = 0xdcc; // int32_t
	//constexpr auto bShouldFollowersSendSquadMatchmakingInfo = 0xdd0; // bool
	//constexpr auto bAllowAthenaNavSystemForCreative = 0xdd1; // bool
	//constexpr auto bEnablePlayerSurveys = 0xdd2; // bool
	//constexpr auto bEnablePlayerStatsPrecache = 0xdd3; // bool
	//constexpr auto bEnableStreamingReplayViewingUI = 0xdd4; // bool
	//constexpr auto LiveReplayDiscoverabilityDelay = 0xdd8; // float
	//constexpr auto bSkipPlayingFortniteChecks = 0xddc; // bool
	//constexpr auto bReplayBattleMapCameraMode = 0xddd; // bool
	//constexpr auto bReplayKeepLocalClientEvents = 0xdde; // bool
	//constexpr auto bReplaySampleAthenaPawnMovement = 0xddf; // bool
	//constexpr auto ReplaySampleAthenaPawnTimeRate = 0xde0; // float
	//constexpr auto ReplaySampleAthenaPawnSpaceRate = 0xde4; // float
	//constexpr auto ReplaySampleAthenaPawnUpdateTimeRate = 0xde8; // float
	//constexpr auto bDisablePartyJoinInOutpost = 0xdec; // bool
	//constexpr auto MashSpecialScores = 0xdf0; // TMap<FString, int32_t>
	//constexpr auto bEnableMissedInvitesEntry = 0xe40; // bool
	//constexpr auto bOnlyShowMissedInvitesEntryIfMissedInvites = 0xe41; // bool
	//constexpr auto bEnableSidekick = 0xe42; // bool
	//constexpr auto bEnableSidekickFeature1 = 0xe43; // bool
	//constexpr auto bEnableSidekickFOMO = 0xe44; // bool
	//constexpr auto bEnableSidekickAvatars = 0xe45; // bool
	//constexpr auto bSidekickDisablesScreenRecord = 0xe46; // bool
	//constexpr auto bSidekickEnableExitFNButton = 0xe47; // bool
	//constexpr auto bEnableSidekickFaceAreaInvalidation = 0xe48; // bool
	//constexpr auto bSidekickDisabledByNightNight = 0xe49; // bool
	//constexpr auto bSidekickForcesSingleChannelMode = 0xe4a; // bool
	//constexpr auto bEnableCampaignBatchLevelingUI = 0xe4b; // bool
	//constexpr auto bAllowSimultaneousChannelConnections = 0xe4c; // bool
	//constexpr auto bExpandNotListeningChannels = 0xe4d; // bool
	//constexpr auto MaxSetFriendSubscriptionSettingsAttempts = 0xe50; // uint32_t
	//constexpr auto MaxQueryFriendSubscriptionSettingsAttempts = 0xe54; // uint32_t
	//constexpr auto NumDaysBetweenPlayingNotifications = 0xe58; // int32_t
	//constexpr auto NumHoursBetweenPlayingNotifications = 0xe5c; // int32_t
	//constexpr auto NumMinutesBetweenPlayingNotifications = 0xe60; // int32_t
	//constexpr auto bForceAutoChangeMaterialOn = 0xe64; // bool
	//constexpr auto bActiveDisplayDeviceTemperature = 0xe65; // bool
	//constexpr auto bAllowOfflineInvites = 0xe66; // bool
	//constexpr auto bEnablePlatformVoiceLeave = 0xe67; // bool
	//constexpr auto bEnablePlatformVoicePrompts = 0xe68; // bool
	//constexpr auto bEnableVoiceChatEnablePrompt = 0xe69; // bool
	//constexpr auto PlaylistGameVoiceChannelRecommendationDisplayTime = 0xe6c; // float
	//constexpr auto bEnablePlaylistGameChannelRecommendationToast = 0xe70; // bool
	//constexpr auto bEnableQuickHealing = 0xe71; // bool
	//constexpr auto bAllowDeferredPedestalPawnSpawn = 0xe72; // bool
	//constexpr auto bRunUnicornOnServer = 0xe73; // bool
	//constexpr auto bShowSamsungSensorButtonWarning = 0xe74; // bool
	//constexpr auto SamsungSensorButtonGamesPerWarning = 0xe78; // int32_t
	//constexpr auto CatabaExclusiveCountryCodes = 0xe80; // TArray<FString>
	//constexpr auto bEnableItemShopDynamicBackground = 0xe90; // bool
	//constexpr auto EnableCommunityVotingScreen = 0xe91; // bool
	//constexpr auto CommunityVotingTutorialVersion = 0xe94; // int32_t
	//constexpr auto CommunityVotingRevealDelay = 0xe98; // float
	//constexpr auto CommunityVotingTimerRefreshDelay = 0xe9c; // float
	//constexpr auto ScrollToWinnerTileAfterReveal = 0xea0; // bool
	//constexpr auto EnableStandaloneStorefront = 0xea1; // bool
	//constexpr auto bEnableBattlePassStorefront = 0xea2; // bool
	//constexpr auto bEnableItemPreviewInStore = 0xea3; // bool
	//constexpr auto bEnableCurrencyInspectScreenBonusText = 0xea4; // bool
	//constexpr auto bEnableCurrencyBonusBanner = 0xea5; // bool
	//constexpr auto bEnableItemShopInvalidationBox = 0xea6; // bool
	//constexpr auto ScrollToStandaloneSectionOnPopupClosed = 0xea7; // bool
	//constexpr auto ItemShopOrdering = 0xea8; // TArray<EFortItemShopSection>
	//constexpr auto bEnableItemShopSectionBangs = 0xeb8; // bool
	//constexpr auto bEnableItemShopCommunityVotingSectionBang = 0xeb9; // bool
	//constexpr auto ItemShopDefaultLandingPriority = 0xec0; // TArray<FAthenaItemShopSectionPriority>
	//constexpr auto ItemShopOverrideDisplayDataList = 0xed0; // TArray<FAthenaItemShopSectionOverrideDisplayData>
	//constexpr auto ItemShopDefaultLanding = 0xee0; // EFortItemShopSection
	//constexpr auto ItemShopOfferSeenThreshold = 0xee4; // float
	//constexpr auto CommunityVotingTileAnimated = 0xee8; // bool
	//constexpr auto ScrollToComTileOnEventPopupClosed = 0xee9; // bool
	//constexpr auto EnableThanksVotingPopup = 0xeea; // bool
	//constexpr auto bUseItemPresentationScreenOnItemPurchased = 0xeeb; // bool
	//constexpr auto CommunityVotingThanksPopupDelay = 0xeec; // float
	//constexpr auto ReloadMtxExclusiveCountryCodes = 0xef0; // TArray<FString>
	//constexpr auto bEnableReloadMtx = 0xf00; // bool
	//constexpr auto bEnableDynamicReloadMtx = 0xf01; // bool
	//constexpr auto bEnableInGameReloadMtx = 0xf02; // bool
	//constexpr auto bEnableCrew = 0xf03; // bool
	//constexpr auto bEnableSubscriptionInspectScreen = 0xf04; // bool
	//constexpr auto bEnableBattlePassViolatorEarnedCurrency = 0xf05; // bool
	//constexpr auto InGameCosmeticItemBangRefreshRate = 0xf08; // float
	//constexpr auto bUseContentPatchingRestartFlow = 0xf0c; // bool
	//constexpr auto bAthenaAutoPickupStackables = 0xf0d; // bool
	//constexpr auto ScheduledNotifications = 0xf10; // TArray<FRuntimeOptionScheduledNotification>
	//constexpr auto bEnableUnicornHighlightsOnClient = 0xf20; // bool
	//constexpr auto bEnableHighlightsPromptInCompeteScreen = 0xf21; // bool
	//constexpr auto bUseReturnToKairosLoadingScreen = 0xf22; // bool
	//constexpr auto bForceReturnToKairosLoadingScreen = 0xf23; // bool
	//constexpr auto bDebugForceLoginRelaunch = 0xf24; // bool
	//constexpr auto bEnableDADUpdateCheckOnRTMM = 0xf25; // bool
	//constexpr auto bShouldAllowNightNightMode = 0xf26; // bool
	//constexpr auto NightNightPluginName = 0xf28; // FString
	//constexpr auto NightNightCalendarEventName = 0xf38; // FString
	//constexpr auto bEnableFrontendMeshRockyRidgeCheck = 0xf48; // bool
	//constexpr auto bForceAllowFrontendMeshRockyRidgeCheck = 0xf49; // bool
	//constexpr auto FrontendMeshRockyRidgeMetadataKey = 0xf50; // FString
	//constexpr auto FrontendMeshRockyRidgeCanaryKey = 0xf60; // FString
	//constexpr auto FrontendMeshRockyRidgeInitialIntervalSeconds = 0xf70; // float
	//constexpr auto FrontendMeshRockyRidgeFailureMultiplier = 0xf74; // float
	//constexpr auto FrontendMeshRockyRidgeMaxIntervalSeconds = 0xf78; // float
	//constexpr auto FrontendMeshRockyRidgeMeshName = 0xf7c; // FName
	//constexpr auto bForceEverybodyToGoNightNight = 0xf80; // bool
	//constexpr auto bQueryKeychainBeforeGoingNightNight = 0xf81; // bool
	//constexpr auto bSkipSubGameDuringNightNight = 0xf82; // bool
	//constexpr auto bAllowCampaignFrontendToGoNightNight = 0xf83; // bool
	//constexpr auto bShouldAllowForcedIntro = 0xf84; // bool
	//constexpr auto ForcedIntroName = 0xf88; // FName
	//constexpr auto bShowMovieInGameplayIntro = 0xf8c; // bool
	//constexpr auto bSkipSubgameSelectDuringForcedIntro = 0xf8d; // bool
	//constexpr auto bSkipToEndGameplayIntroOutroVideos = 0xf8e; // bool
	//constexpr auto MaxGameplayCinematicLength = 0xf90; // float
	//constexpr auto bUseAthenaArmory = 0xf94; // bool
	//constexpr auto bEnableLiveSpectateButton = 0xf95; // bool
	//constexpr auto bEnableGuidedTutorialDefensiveBuilding = 0xf96; // bool
	//constexpr auto bEnableSafeZoneEditor = 0xf97; // bool
	//constexpr auto bEnableSavedLoadouts = 0xf98; // bool
	//constexpr auto bSavedLoadoutsUseGodTile = 0xf99; // bool
	//constexpr auto bEnableSafeZoneEditorOnLogin = 0xf9a; // bool
	//constexpr auto bEnableSafeZoneEditorWhenNotInApolloIntro = 0xf9b; // bool
	//constexpr auto LoginFlowCMSRefreshWaitTime = 0xf9c; // float
	//constexpr auto bEnableAppResumeCMSUpdate = 0xfa0; // bool
	//constexpr auto bEnableMOTDAnalytics = 0xfa1; // bool
	//constexpr auto bEnableTabTransitionMOTDAnalyticsEvent = 0xfa2; // bool
	//constexpr auto bAllowStoreSkipOpenAnimation = 0xfa3; // bool
	//constexpr auto bAllowInGameStore = 0xfa4; // bool
	//constexpr auto bPostGameStoreNoLeto = 0xfa5; // bool
	//constexpr auto bPostGameStoreTriggerIncrementalGC = 0xfa6; // bool
	//constexpr auto bAllowInGameLocker = 0xfa7; // bool
	//constexpr auto bAllowInGameCareer = 0xfa8; // bool
	//constexpr auto bAllowInGameActivityBrowser = 0xfa9; // bool
	//constexpr auto bEnableGuidedTutorialDirectFlush = 0xfaa; // bool
	//constexpr auto bEnableGuidedTutorialABTesting = 0xfab; // bool
	//constexpr auto bEnableHighlightPlayButtonABTesting = 0xfac; // bool
	//constexpr auto bEnableSkipGuidedTutorialABTesting = 0xfad; // bool
	//constexpr auto MaxFrontendFlowStatQueries = 0xfb0; // int32_t
	//constexpr auto ApolloIntroShowMovie = 0xfb4; // bool
	//constexpr auto bRunDeimosSpawnTimelines = 0xfb5; // bool
	//constexpr auto TeamToPlaceMeshNetPawnsOn = 0xfb8; // int32_t
	//constexpr auto bEnableAddFriendUserSearchDarkTraffic = 0xfbc; // bool
	//constexpr auto bEnableExtendedUserSearchUI = 0xfbd; // bool
	//constexpr auto bEnableRecursiveMatchAssignmentSearchForTeam = 0xfbe; // bool
	//constexpr auto bEnableBackfillCheckForHighestTeamScore = 0xfbf; // bool
	//constexpr auto bEnableBackfillCheckForTeamScoreDifference = 0xfc0; // bool
	//constexpr auto BackfillCheckForHighestTeamScorePlaylistOverrides = 0xfc8; // TMap<FString, int32_t>
	//constexpr auto BackfillCheckForScoreDiscrepancyPlaylistOverrides = 0x1018; // TMap<FString, float>
	//constexpr auto bDisableTdmBackfilledPlayerTeleport = 0x1068; // bool
	//constexpr auto bDisableWarmupRequiredPlayerCountCheck = 0x1069; // bool
	//constexpr auto bAIDirectorTreatBotsAsPlayersForLOD = 0x106a; // bool
	//constexpr auto bEnablePhoenix = 0x106b; // bool
	//constexpr auto bBuildingPossessionShown = 0x106c; // bool
	//constexpr auto LoadingContentModalWidget = 0x1070; // FSoftObjectPath
	//constexpr auto bBacchusFrontendEnabled = 0x1088; // bool
	//constexpr auto InvalidCreativeItemTags = 0x1090; // TArray<FName>
	//constexpr auto bEnableAFortPlayerPawnOnRep_InVehicleAndUFortVehicleSeatComponentOnRep_PlayerSlotsRaceConditionFix = 0x10a0; // bool
	//constexpr auto ValkyrieMajMinPatchQueryParams = 0x10a8; // FString
	//constexpr auto bSprintingStrafeSnapEnabled = 0x10b8; // bool
	//constexpr auto bExplicitSprintableInputRange = 0x10b9; // bool
	//constexpr auto MinForwardForSprint = 0x10bc; // float
	//constexpr auto MinForwardForSprintSnapping = 0x10c0; // float
	//constexpr auto AccelerationStrafeMultiplierSprintOverride = 0x10c4; // float
	//constexpr auto KeyboardDiagonalSprintForwardOverride = 0x10c8; // float
	//constexpr auto KeyboardSprintInputWindUpTime = 0x10cc; // float
	//constexpr auto KeyboardMoveInputWindUpTime = 0x10d0; // float
	//constexpr auto bEnableWebAuthFNMobileOnClassicBuild = 0x10d4; // bool
	//constexpr auto bPortraitWebAuthFNMobileOnClassicBuild = 0x10d5; // bool
	//constexpr auto bBacchusFrontendLabelShown = 0x10d6; // bool
	//constexpr auto NoWeaponZoneMaxDestroyCount = 0x10d8; // int32_t
	//constexpr auto NoWeaponZoneResetDestroyCountRate = 0x10dc; // float
	//constexpr auto bAllowCurieIfCreativeOrPlayground = 0x10e0; // bool
	//constexpr auto bEnableServerSendPlayerInteractions = 0x10e1; // bool
	//constexpr auto ServerSendPlayerInteractionsIntervalSeconds = 0x10e4; // float
	//constexpr auto bEnableServerSendPlayerInteractionsRankInCreativeMode = 0x10e8; // bool
	//constexpr auto bEnableServerPlayerInteractionIdleTracking = 0x10e9; // bool
	//constexpr auto bEnableNonFriendSquadInteractionTracking = 0x10ea; // bool
	//constexpr auto MinInteractionDurationForDispatch = 0x10f0; // double
	//constexpr auto DefaultMissionGen = 0x10f8; // TSoftClassPtr<UObject>
	//constexpr auto bGyroV2Enabled = 0x1120; // bool
	//constexpr auto bFlickStickEnabled = 0x1121; // bool
	//constexpr auto GyroAimAssistMode = 0x1124; // int32_t
	//constexpr auto bForceMotionControlsEnabled = 0x1128; // bool
	//constexpr auto bAdvancedCameraResetEnabled = 0x1129; // bool
	//constexpr auto bEnableBacchusDialogSystem = 0x112a; // bool
	//constexpr auto bBacchusDialogSystemSkipConfirmationStep = 0x112b; // bool
	//constexpr auto bMobileDisableResolutionReset = 0x112c; // bool
	//constexpr auto bMotionAxisMobileDefaultToYaw = 0x112d; // bool
	//constexpr auto bFollowCameraOptionAvailable = 0x112e; // bool
	//constexpr auto bAutoCenterOptionAvailable = 0x112f; // bool
	//constexpr auto bShouldRestartCreativeServersForCalendarEventChanges = 0x1130; // bool
	//constexpr auto bCreativeEmoteControllerUseWhitelist = 0x1131; // bool
	//constexpr auto CreativeEmoteControllerWhitelist = 0x1138; // TArray<FString>
	//constexpr auto bPreventLateJoiningPlayersAfterAircraft = 0x1148; // bool
	//constexpr auto AllowedPMRStatuses = 0x1150; // TArray<FString>
	//constexpr auto bShowRMTPurchaseSpecialInfo = 0x1160; // bool

constexpr auto CreativePlaysetPropActorPaths = 0x38;
constexpr auto bCanAccoladesDeviceGrantAccolades = 0x48;
constexpr auto CreativeBetaPermissions = 0x50;
constexpr auto bEnableItemDefinitionWhiteListing = 0x60;
constexpr auto bEnableItemDefinitionWhiteListingForTransientPickups = 0x61;
constexpr auto bAlwaysReadyUpAllLocalPlayersForMatchmaking = 0x62;
constexpr auto IslandResources = 0x68;
constexpr auto VolumeManagerBannedClasses = 0x78;
constexpr auto CreativeIslandDescriptionTagsMaxQty = 0x88;
constexpr auto CreativeIslandDescriptionTagsWhitelist = 0x90;
constexpr auto ExperimentalCohortPercent = 0xA0;
constexpr auto ExperimentalBucketPercentList = 0xB0;
constexpr auto bEnableSpectatorUpdates = 0xC0;
constexpr auto bEnableNPCInteractionsForSpectators = 0xC1;
constexpr auto bIsTournamentMode = 0xC2;
constexpr auto bIsOutOfSeasonMode = 0xC3;
constexpr auto bForceBRMode = 0xC4;
constexpr auto bLoadDirectlyIntoLobby = 0xC5;
constexpr auto bAllowBPTokenRefund = 0xC6;
constexpr auto bEnableSpeculativeCreativeMMTeamSizeFix = 0xC7;
constexpr auto bUseTournamentAnonymousOverrideEnabled = 0xC8;
constexpr auto bForceDisallowAnonymousMode = 0xC9;
constexpr auto bEnableGeneratedScreenshotForPortalPreview = 0xCA;
constexpr auto bAllowLoadoutSwitchingInLobby = 0xCB;
constexpr auto IngameMatchmakingDelaySeconds = 0xCC;
constexpr auto NumSavedLoadouts = 0xD0;
constexpr auto TournamentPlaylistName = 0xD4;
constexpr auto TournamentPlaylistPriorityBase = 0xD8;
constexpr auto TournamentModeQueueInterval = 0xDC;
constexpr auto MinimumAccountLevelForTournamentPlay = 0xE0;
constexpr auto bEnableManualBroadcasterStart = 0xE4;
constexpr auto bForcePRM = 0xE5;
constexpr auto bCreativeManualBroadcasterStart = 0xE6;
constexpr auto bCreativeEnableTimerForPhoneToolEnforcement = 0xE7;
constexpr auto bAutoloadRestrictedPlots = 0xE8;
constexpr auto bDisableMyIslandDescriptionPanel = 0xE9;
constexpr auto bEnableAllRemoteClientInfos = 0xEA;
constexpr auto bEnableBuildPreviewForBroadcast = 0xEB;
constexpr auto bEnableRemoteAimSnapshotManagerForBroadcast = 0xEC;
constexpr auto EsportsAnalyticsHeartbeatRate = 0xF0;
constexpr auto bUseBroadcastPostProcessing = 0xF4;
constexpr auto bUseBroadcastKillFeed = 0xF5;
constexpr auto bUseServerReplayActionFeed = 0xF6;
constexpr auto bReplayGoToTimeEnabled = 0xF7;
constexpr auto bBroadcastPipModeToggle = 0xF8;
constexpr auto bShowBroadcastPlayerEventScoreWidget = 0xF9;
constexpr auto bUseOutsideTopThreeSpectatorLeaderboard = 0xFA;
constexpr auto bReplayPauseZeroDeltas = 0xFB;
constexpr auto CurrentSocialImportVersion = 0xFC;
constexpr auto PawnDeathScreenDelay = 0x100;
constexpr auto CurrentVKImportVersion = 0x104;
constexpr auto bEnableMassFriendImport = 0x108;
constexpr auto bEnableSocialTab = 0x109;
constexpr auto bAllowSocialPresenceUpdates = 0x10A;
constexpr auto bEnableToastSocialWidget = 0x10B;
constexpr auto bEnableINICachedSocialStatus = 0x10C;
constexpr auto MaxINICachedSocialStatuses = 0x110;
constexpr auto MinSecondsBetweenINICachedSocialStatuses = 0x118;
constexpr auto NumDaysBeforeFailedImportReattempt = 0x120;
constexpr auto bEnableSocialBanModal = 0x124;
constexpr auto bEnableDedicatedServerSocialBanVoiceQuery = 0x125;
constexpr auto bEnableDedicatedServerSocialBanVoiceEnforcement = 0x126;
constexpr auto bDisplayLastOnlineTime = 0x127;
constexpr auto bDisplayLastInteraction = 0x128;
constexpr auto bEnableStartupSocialImport = 0x129;
constexpr auto bEnableBladeRAF = 0x12A;
constexpr auto bEnableStartupErebusFriendImport = 0x12B;
constexpr auto bEnableVKImport = 0x12C;
constexpr auto bEnableSteamImport = 0x12D;
constexpr auto SocialImportURI = 0x130;
constexpr auto DaysBetweenSocialImportPrompts = 0x140;
constexpr auto DaysBetweenVKImportPrompt = 0x144;
constexpr auto FriendImportCaptionSelection = 0x148;
constexpr auto bEnableSplitWalletTextNotice = 0x14C;
constexpr auto bShowAthenaStoreToast = 0x14D;
constexpr auto bShowAthenaStoreToastForRolloverAlone = 0x14E;
constexpr auto bAllow3DInspectOfRMTItems = 0x14F;
constexpr auto bAltUpdateFlow = 0x150;
constexpr auto bShowRMTDescriptionPopup = 0x151;
constexpr auto bAllowJuniorEndingMovie = 0x152;
constexpr auto AthenaStarterGameMode = 0x158;
constexpr auto AthenaStarterFill = 0x168;
constexpr auto PartyRichPresenceUpdateTime = 0x16C;
constexpr auto PartySuggestionUpdateTimer = 0x170;
constexpr auto MaxPartySuggestionsToConsider = 0x174;
constexpr auto bAllowLFG = 0x178;
constexpr auto bAllowPartyPresenceUpdates = 0x179;
constexpr auto bAllowGameplayPresenceUpdates = 0x17A;
constexpr auto bEnablePlaylistNameInRichPresence = 0x17B;
constexpr auto bAllowDiscordFrictionlessJoin = 0x17C;
constexpr auto bEnableInteractiveConsumables = 0x17D;
constexpr auto bEnableContextHelpMenu = 0x17E;
constexpr auto bShowAthenaItemShop = 0x17F;
constexpr auto bEnableShowdown = 0x180;
constexpr auto bEnableTournamentMatchCaps = 0x181;
constexpr auto bUsePlayingEventIds = 0x182;
constexpr auto bRetryCMSLoads = 0x183;
constexpr auto RefreshScoreDelay = 0x184;
constexpr auto bAlwaysForceTournamentLobbyPanelRefresh = 0x188;
constexpr auto bEnableEventLeaderboards = 0x189;
constexpr auto NumCachedLeaderboardPages = 0x18C;
constexpr auto MaxPagesPerLeaderboard = 0x190;
constexpr auto EventLeaderboardLiveRefreshTimeSeconds = 0x194;
constexpr auto EventLeaderboardLivePostEventRefreshWindowMinutes = 0x198;
constexpr auto bGetLiveSessionsFromLeaderboards = 0x19C;
constexpr auto bUseServerTournamentPlacementNotifications = 0x19D;
constexpr auto MaximumEventLengthHoursForCallout = 0x1A0;
constexpr auto bEnableHypeLeaderboards = 0x1A4;
constexpr auto bEnableSwapRegionsButton = 0x1A5;
constexpr auto bFillCompetitivePanelFromDiscovery = 0x1A6;
constexpr auto HypeLeaderboardEventId = 0x1A8;
constexpr auto HypeLeaderboardRefreshTimeSeconds = 0x1B8;
constexpr auto bHypeLeaderboardIncludeFriendsTab = 0x1BC;
constexpr auto CreativePlaylistName = 0x1C0;
constexpr auto BattleLabPlaylistName = 0x1C4;
constexpr auto CampaignPlaylistName = 0x1C8;
constexpr auto bEnableEventScoreClamping = 0x1CC;
constexpr auto CreativeDisabledTabIndex = 0x1D0;
constexpr auto bAllowIslandExporting = 0x1D4;
constexpr auto bAllowCreativeModeratorMode = 0x1D5;
constexpr auto bIslandExportingEnabledMCPOverride = 0x1D6;
constexpr auto bEnableCreativeServerImportFriendsOption = 0x1D7;
constexpr auto MaxPlayersInCreativeServer = 0x1D8;
constexpr auto MaxPlayersInCreativeWhitelist = 0x1DC;
constexpr auto bShowSupportACreatorOnIslandLinkScreen = 0x1E0;
constexpr auto bHideServersWithZeroPlayers = 0x1E1;
constexpr auto bEnableIslandCodeEntryOnPlayerPortal = 0x1E2;
constexpr auto bEnableIslandCodeEntryOnCuratedPortal = 0x1E3;
constexpr auto bEnableIslandCodeEntryInFrontend = 0x1E4;
constexpr auto RefreshFavoriteIslandsWaitTime = 0x1E8;
constexpr auto IslandCodeLength = 0x1EC;
constexpr auto bApplyCodeFormatting = 0x1F0;
constexpr auto bAdvertiseBattleLabOwnerInSession = 0x1F1;
constexpr auto bEnableThermometerUIForBattleLab = 0x1F2;
constexpr auto bEnableSpatialThermometerForBattleLab = 0x1F3;
constexpr auto bEnableHeatmapUIDisplayForCreative = 0x1F4;
constexpr auto bEnableHeatmapUIDisplayForBattleLab = 0x1F5;
constexpr auto bUseHeatmapHighPrecison = 0x1F6;
constexpr auto bEnableBudgetTrackerSpatialTest = 0x1F7;
constexpr auto bEnableSpatialThermometerForCreative = 0x1F8;
constexpr auto bEnableSpatialSettingsForCreative = 0x1F9;
constexpr auto bIsMatchmakingEnabledForPlayers = 0x1FA;
constexpr auto CreativeHeatmapThermometerCellSize = 0x1FC;
constexpr auto bEnableThermomterCostPreviwer = 0x200;
constexpr auto bEnableSlateVersionOfThermometer = 0x201;
constexpr auto bEnableJoinInProgress = 0x202;
constexpr auto bEnableSpectateAPartyMember = 0x203;
constexpr auto bEnableJoinAndSpectate = 0x204;
constexpr auto bEnableRequestToJoin = 0x205;
constexpr auto MaxNumAlivePlayersForSpectateAPartyMember = 0x208;
constexpr auto MaxNumPartyMemberSpectatorsPerMatch = 0x20C;
constexpr auto SpectateAPartyMemberPlaylistOverrides = 0x210;
constexpr auto bEnableJoinInProgressInMatchmakingWidget = 0x220;
constexpr auto bAnyPartyMemberAllowedToCancelMatchmakingV2 = 0x221;
constexpr auto bEnableLockerSearch = 0x222;
constexpr auto bEnableLockerDirtySearch = 0x223;
constexpr auto bEnableBattlePass = 0x224;
constexpr auto bEnableBattlePassFAQ = 0x225;
constexpr auto bShowBattlePassBangAfterPurchase = 0x226;
constexpr auto bShowBattlePassBangEveryLevel = 0x227;
constexpr auto bShowBattlePassBangs = 0x228;
constexpr auto bBattlePassVideoDelay = 0x229;
constexpr auto bEnableAthenaFavoriting = 0x22A;
constexpr auto bShowAthenaDailyQuests = 0x22B;
constexpr auto bEnableAthenaCustomPreviewActionForCosmetics = 0x22C;
constexpr auto bEnableAthenaItemRandomization = 0x22D;
constexpr auto bEnableProfileStatTracking = 0x22E;
constexpr auto bEnableProfileStatUI = 0x22F;
constexpr auto bEnableTrickUI = 0x230;
constexpr auto bEnableMultiplayerTricks = 0x231;
constexpr auto bEnableInGameChallengeTree = 0x232;
constexpr auto bCreateEpicAccountPinGrantDisabled = 0x233;
constexpr auto bLoginEpicWeb = 0x234;
constexpr auto bLoginXBLDisabled = 0x235;
constexpr auto bLoginPSNDisabled = 0x236;
constexpr auto bLoginErebusDisabled = 0x237;
constexpr auto bEnableClientSettingsSaveToCloud = 0x238;
constexpr auto bEnableClientSettingsSaveToDisk = 0x239;
constexpr auto bEnableClientSettingsRestoreInputPresets = 0x23A;
constexpr auto bDedServerEventServiceDownloadTryCount = 0x23C;
constexpr auto TournamentRefreshPayoutMaxRateSeconds = 0x240;
constexpr auto TournamentRefreshEventsMaxRateSeconds = 0x244;
constexpr auto TournamentRefreshPlayerMaxRateSeconds = 0x248;
constexpr auto TournamentHUDPointCounterDelay = 0x24C;
constexpr auto MaxNumDisplayNamesOnLiveGameList = 0x250;
constexpr auto LiveGameListInitialLimit = 0x254;
constexpr auto LiveGameListQueryIncreaseAmount = 0x258;
constexpr auto bEnableLiveGamesScreen = 0x25C;
constexpr auto bLiveGameTimeDurationVisible = 0x25D;
constexpr auto bEnableFlagSelection = 0x25E;
constexpr auto DefaultFlagRegionId = 0x260;
constexpr auto MixedNationTeamFlagRegionId = 0x270;
constexpr auto DisabledFlagSelections = 0x280;
constexpr auto FlagChangeCooldownDays = 0x290;
constexpr auto bEnableEventServicePayouts = 0x294;
constexpr auto bLiveGamesClientAnalyticsEnabled = 0x295;
constexpr auto MinimumWaitTimeToRequestNewShowdownScoreForWindow = 0x298;
constexpr auto EventServicePayoutRefreshRateSeconds = 0x29C;
constexpr auto EventServicePayoutRefreshSpreadSeconds = 0x2A0;
constexpr auto BundleLoaderWidgetTimerInterval = 0x2A4;
constexpr auto CancelledEvents = 0x2A8;
constexpr auto SecondsShowStartingMatchMessageForScheduledMMEvents = 0x2B8;
constexpr auto bEnableMatchAbandonProcess = 0x2BC;
constexpr auto MatchAbandonTimeout = 0x2C0;
constexpr auto bEnableMultidivisionTournamentEventIdQuorum = 0x2C4;
constexpr auto CloudSaveIntervalConfig = 0x2C8;
constexpr auto bSaveToCloudOnMapLoad = 0x2D0;
constexpr auto bSaveToCloudOnSuspend = 0x2D1;
constexpr auto bSaveToCloudOnDeactivate = 0x2D2;
constexpr auto bSaveToCloudOnTerminate = 0x2D3;
constexpr auto bSaveToCloudOnExit = 0x2D4;
constexpr auto bSaveToCloudOnLogout = 0x2D5;
constexpr auto GiftNotificationRefreshTimer = 0x2D8;
constexpr auto bEnableUndoPurchase = 0x2E0;
constexpr auto bMoveUndoToBottomBar = 0x2E1;
constexpr auto bShowStoreBanner = 0x2E2;
constexpr auto InGameStoreUpdateChance = 0x2E4;
constexpr auto bEnableReplayBrowser = 0x2E8;
constexpr auto WhitelistedReplayCLs = 0x2F0;
constexpr auto bAllowAllReplays = 0x300;
constexpr auto bEnableReplayRecording = 0x301;
constexpr auto bEnableLargeTeamReplayRecording = 0x302;
constexpr auto bEnableCreativeModeReplayRecording = 0x303;
constexpr auto bEnablePlaygroundModeReplayRecording = 0x304;
constexpr auto bEnableSplitscreenReplayRecording = 0x305;
constexpr auto bEnableReplayDemoSplitting = 0x306;
constexpr auto bStableReplayPlayback = 0x307;
constexpr auto bEnableHearingAccessibility = 0x308;
constexpr auto bDisableSpatializationInsteadOfMutingWhenHearingAccessibilityEnabled = 0x309;
constexpr auto bAllowVisualizingSoundsWithStereoAudio = 0x30A;
constexpr auto bEnableMetaSoundTestSimple = 0x30B;
constexpr auto bEnableMetaSoundTestComplex = 0x30C;
constexpr auto bDisableGifting = 0x30D;
constexpr auto bImmediateClaimOfEmote = 0x30E;
constexpr auto bForceRestrictChat = 0x30F;
constexpr auto GiftLimitAmount = 0x310;
constexpr auto bBattlePassGiftingEmergencyDisable = 0x314;
constexpr auto bEnableBattlePassGiftingButton = 0x315;
constexpr auto bEnableBattlePassGiftingButtonTokenOnly = 0x316;
constexpr auto bShowBPGiftBoxPopup = 0x317;
constexpr auto EndBattleRoyalUpdateDelay = 0x318;
constexpr auto LightswitchDownLoginDelay = 0x31C;
constexpr auto bShowStatusButtonOnWaitingRoomScreen = 0x320;
constexpr auto bInvertMotionOnUnattachedSwitchControllers = 0x321;
constexpr auto bDisableTouchLookVelocityScaling = 0x322;
constexpr auto bDisablePurchaseHistoryScreen = 0x323;
constexpr auto bEnableRedeemOfflinePurchasesToasts = 0x324;
constexpr auto bAllowProcessedPayoutsToRefreshProfile = 0x325;
constexpr auto TouchAimAssistStrengthScalar = 0x328;
constexpr auto bDisableTouchAimAssistAutoTracking = 0x32C;
constexpr auto bProcessGamepadInputOnMobile = 0x32D;
constexpr auto bMobileForceGamepadHUDWhenAttached = 0x32E;
constexpr auto bDisableLegacyControls = 0x32F;
constexpr auto bFixAimAssistDeadzoneExploit = 0x330;
constexpr auto CrucibleWhitelistOverride = 0x331;
constexpr auto bDisableCrucibleStatUpload = 0x332;
constexpr auto bDisableCrucibleStatDownload = 0x333;
constexpr auto bDisableCrucibleGlobalLeaderboards = 0x334;
constexpr auto bDisableCrucibleFriendLeaderboards = 0x335;
constexpr auto bDisableCrucibleAnalyticsEvents = 0x336;
constexpr auto bDisableCrucibleDestroyDeadBots = 0x337;
constexpr auto bDisableCrucibleForcedGC = 0x338;
constexpr auto bDisableCrucibleLeaderboardFilterText = 0x339;
constexpr auto bDisableCrucibleLeaderboardSwitching = 0x33A;
constexpr auto bCrucibleLockToPlatform = 0x33B;
constexpr auto bCrucibleSendStatsEndOfSession = 0x33C;
constexpr auto bCrucibleSendStatsEndOfSessionOnShutdownEvent = 0x33D;
constexpr auto CrucibleMinValidStatScoreMilliseconds = 0x340;
constexpr auto CrucibleLeaderboardFriendQueryMaxSize = 0x344;
constexpr auto bCrucibleLeaderboardEnableDisplayNameIcons = 0x348;
constexpr auto bEnableFortLeaderboardHelperDisplayNonPlatformNames = 0x349;
constexpr auto bEnableFortLeaderboardHelperConsolePlatformNameSearch = 0x34A;
constexpr auto bEnableFortLeaderboardHelperConsoleDisplayNameFallback = 0x34B;
constexpr auto bDisableCollectionStatsUpload = 0x34C;
constexpr auto bDisableCollectionStatsDownload = 0x34D;
constexpr auto CollectionStatsFriendQueryMaxSize = 0x350;
constexpr auto bSoundIndicatorsAlwaysEnabled = 0x354;
constexpr auto bSoundIndicatorsEnabledForTeammates = 0x355;
constexpr auto bSoundIndicatorsPooled = 0x356;
constexpr auto SoundIndicatorMaxNum = 0x358;
constexpr auto TencentDefaultBookStatSeason = 0x35C;
constexpr auto bEquipFirstWeaponOnMobile = 0x360;
constexpr auto bClearLastFireOnAbilityFailed = 0x361;
constexpr auto bUsePrototypeSubGameLoadingScreen = 0x362;
constexpr auto bForcePrototypeLoadingScreenScaling = 0x363;
constexpr auto ShowEliminationDistanceOver = 0x364;
constexpr auto FadeOutTeamIndicatorsAfter = 0x368;
constexpr auto FadeOutNPCEnemyIndicatorsAfter = 0x36C;
constexpr auto FadeOutEnemyIndicatorsAfter = 0x370;
constexpr auto FadeOutWorldItemIndicatorsAfter = 0x374;
constexpr auto FadeOutHardCoreBeaconIndicatorsAfter = 0x378;
constexpr auto MapIndicatorTouchClearDistance = 0x37C;
constexpr auto MapIndicatorOffset = 0x380;
constexpr auto AthenaMapZoomMax = 0x390;
constexpr auto BacchusMapIndicatorSizeMultiplier = 0x394;
constexpr auto AthenaMapPanSpeedMultiplier = 0x398;
constexpr auto AthenaMapZoomSpeedMultiplier = 0x39C;
constexpr auto bAthenaMapMapIconsFlowEnabled = 0x3A0;
constexpr auto WaitTimeBeforeShowingNewModeViolator = 0x3A4;
constexpr auto FriendCodeShareWarningMessage = 0x3A8;
constexpr auto PlatformPlayAllowedErrorMessage = 0x3B8;
constexpr auto bOnlyShareURLWithNoMessage = 0x3C8;
constexpr auto bExcludeURLInShareMessage = 0x3C9;
constexpr auto bShowCreateAccountOnRedirect = 0x3CA;
constexpr auto bEnableContextTutorial = 0x3CB;
constexpr auto bDebugForcePlayerSurveys = 0x3CC;
constexpr auto bFeedbackTextShown = 0x3CD;
constexpr auto bEnableBadMatchPopup = 0x3CE;
constexpr auto BadMatchIncidentThreshold = 0x3D0;
constexpr auto BadConnectionUpdateTime = 0x3D4;
constexpr auto BadMatchPopupRecallInterval = 0x3D8;
constexpr auto AthenaCodeOfConductURL = 0x3E0;
constexpr auto KairosCommunityRulesURL = 0x3F0;
constexpr auto BacchusFriendCodeShareURL = 0x400;
constexpr auto CreateAccountUrl = 0x410;
constexpr auto GooglePlayRatingURL = 0x420;
constexpr auto LinkAccountURL = 0x430;
constexpr auto AccountMergeMoreInfoURL = 0x440;
constexpr auto bEnableFactionTechScreen = 0x450;
constexpr auto bRequireFactionChoiceOnInfiltrationPlay = 0x451;
constexpr auto TotalPlayerTechLevelsToShow = 0x454;
constexpr auto SupportURL = 0x458;
constexpr auto CheckStatusURL = 0x468;
constexpr auto iOSAppStoreURL = 0x478;
constexpr auto TurnOnMfaURL = 0x488;
constexpr auto ArenaResetTime = 0x498;
constexpr auto ListOfCreatorsURL = 0x4A8;
constexpr auto bAllowCodeRedemptionInSubgameSelect = 0x4B8;
constexpr auto bEnableAutomaticMOTD = 0x4B9;
constexpr auto bShowMOTDInLobby = 0x4BA;
constexpr auto bMOTDSameNewsForCreative = 0x4BB;
constexpr auto bSkipSubgameSelect = 0x4BC;
constexpr auto BRUpdatesURLMode = 0x4BD;
constexpr auto BRUpdatesURL = 0x4C0;
constexpr auto STWUpdatesURLMode = 0x4D0;
constexpr auto STWUpdatesURL = 0x4D8;
constexpr auto GiftingInfoURL = 0x4E8;
constexpr auto PrivacyPolicyURL = 0x4F8;
constexpr auto FanContentPolicyURL = 0x508;
constexpr auto TermsOfServiceURL = 0x518;
constexpr auto GuardianChallengeLengthDays = 0x528;
constexpr auto bAgeGateFlowEnabled = 0x52C;
constexpr auto bEnableContentControls = 0x52D;
constexpr auto ContentControlsMoreInfoURL = 0x530;
constexpr auto ContentControlsForgotPinURL = 0x540;
constexpr auto ContentControlsVerifyEmailURL = 0x550;
constexpr auto bEnableContentControlsPlaytimeReporting = 0x560;
constexpr auto bEnableContentControlsPurchaseReporting = 0x561;
constexpr auto bContentControlsViewUGCEnabled = 0x562;
constexpr auto bContentControlsFriendRequestPinLength = 0x564;
constexpr auto MaxNumItemsInCreativeChests = 0x568;
constexpr auto MaxStackSizeForCreativeResources = 0x56C;
constexpr auto MaxStreamerMatchmakingDelay = 0x570;
constexpr auto bEnableHiddenMatchmakingDelay = 0x574;
constexpr auto TencentStoreDetailsURL = 0x578;
constexpr auto PSALoadingScreenPercentChance = 0x588;
constexpr auto StwDownloadLauncherOption = 0x590;
constexpr auto OverrideDefaultBonusXpEventTitleString = 0x5A0;
constexpr auto XBLDisableText = 0x5B0;
constexpr auto PSNDisableText = 0x5C0;
constexpr auto SwitchDisableText = 0x5D0;
constexpr auto ReviewPromptCriteria = 0x5E0;
constexpr auto bDisableAllKnobs = 0x5F4;
constexpr auto bDisableAllGameplayMessages = 0x5F5;
constexpr auto bDisableMatchmakingKnobs = 0x5F6;
constexpr auto bDisableMinigameKnobs = 0x5F7;
constexpr auto bDisableGameOptionKnobs = 0x5F8;
constexpr auto bDisableAffiliateFeature = 0x5F9;
constexpr auto bUseHotfixedAffiliateNamesArray = 0x5FA;
constexpr auto bEnablePrerollLlamas = 0x5FB;
constexpr auto bEnableSubregionNetworkAccelerators = 0x5FC;
constexpr auto DisabledNetworkAcceleratedSubregions = 0x600;
constexpr auto AdvertisedNetworkAcceleratedSubregions = 0x610;
constexpr auto bShowAccountItemWarningForVaultThreshold = 0x620;
constexpr auto DaysBetweenAccountItemWarnings = 0x624;
constexpr auto VaultLimitThresholdForAccountItemWarning = 0x628;
constexpr auto bShowAccountItemWarningForItemCount = 0x62C;
constexpr auto AlwaysWarnAccountItemCount = 0x630;
constexpr auto DisabledFrontendNavigationTabs = 0x638;
constexpr auto DisabledTabsForOutOfSeason = 0x648;
constexpr auto TournamentDisabledFrontendNavigationTabs = 0x658;
constexpr auto DisabledMatchmakingKnobs = 0x668;
constexpr auto HiddenMatchmakingKnobs = 0x678;
constexpr auto DisabledGameplayMessages = 0x688;
constexpr auto NumGameplayMessageChannels = 0x698;
constexpr auto AffiliateNames = 0x6A0;
constexpr auto bShowMOTDNews = 0x6B0;
constexpr auto DPlusVBuckPromoStart = 0x6B8;
constexpr auto DPlusVBuckPromoEnd = 0x6C0;
constexpr auto CountryCodesForDPlusVBuckOverride = 0x6C8;
constexpr auto RockyRidgeStart = 0x6D8;
constexpr auto SoloTournamentScoreThresholds = 0x6E0;
constexpr auto DuoTournamentScoreThresholds = 0x6F0;
constexpr auto SquadsTournamentScoreThresholds = 0x700;
constexpr auto PickingInteractDistance = 0x710;
constexpr auto PickingHighlightMovementUpdateDist = 0x714;
constexpr auto PickingHighlightUpdateTime = 0x718;
constexpr auto PickingTime = 0x71C;
constexpr auto AutoPickingInteractDistanceFactor = 0x720;
constexpr auto AutoOpenDoorInputMagnitude = 0x724;
constexpr auto AutoOpenDoorTraceDistance = 0x728;
constexpr auto bAutofireEnabled = 0x72C;
constexpr auto bShowXPWidgets = 0x72D;
constexpr auto bShowAccoladesListWidget = 0x72E;
constexpr auto bEnableInGameMatchmaking = 0x72F;
constexpr auto bUseNewFlowIngameMatchmaking = 0x730;
constexpr auto bToggleIGMAnalytics = 0x731;
constexpr auto WhitelistedInGameMatchmakingRegions = 0x738;
constexpr auto WhitelistedInGameMatchmakingSubRegions = 0x748;
constexpr auto BlacklistedInGameMatchmakingSubRegions = 0x758;
constexpr auto BlacklistedInGameMatchmakingPlaylists = 0x768;
constexpr auto SubRegionWhitelistedInGameMatchmakingPlaylists = 0x778;
constexpr auto bAllowPreserveSquad = 0x788;
constexpr auto bAllowPreserveSquadMemberVoting = 0x789;
constexpr auto bKeepPlayingTogether = 0x78A;
constexpr auto bPartyRift = 0x78B;
constexpr auto bAutofireUsesComponent = 0x78C;
constexpr auto bAutofireUsesAutoaimTarget = 0x78D;
constexpr auto bHoldToFireOnAutofireTarget = 0x78E;
constexpr auto DefaultAutofireRange = 0x790;
constexpr auto AutofireExtraTrackingRange = 0x794;
constexpr auto bServerNetDriverAnalytics = 0x798;
constexpr auto bClientNetDriverAnalytics = 0x799;
constexpr auto bDisableReplicationGraph = 0x79A;
constexpr auto BRServerMaxTickRate = 0x79C;
constexpr auto DoubleTapOnEndTouchTime = 0x7A0;
constexpr auto DoubleTapOnStartTouchTime = 0x7A4;
constexpr auto DoubleTapDistance = 0x7A8;
constexpr auto SingleTapDistance = 0x7AC;
constexpr auto TouchMoveStickRadius = 0x7B0;
constexpr auto TouchMoveStickRadiusTargeting = 0x7B4;
constexpr auto TouchMoveStickRadiusScoped = 0x7B8;
constexpr auto TouchMoveStickRadiusDriving = 0x7BC;
constexpr auto AutorunLockZoneOffset = 0x7C0;
constexpr auto AutorunLockZoneDelay = 0x7C4;
constexpr auto MoveOriginResetTime = 0x7C8;
constexpr auto MoveOriginResetDistance = 0x7CC;
constexpr auto MoveOriginFollowDistance = 0x7D0;
constexpr auto bDisableTouchLookInertia = 0x7D4;
constexpr auto RotateInertiaMultiplier = 0x7D8;
constexpr auto RotateInertiaMinTime = 0x7DC;
constexpr auto RotateInertiaMinLength = 0x7E0;
constexpr auto RotateInertiaMinMagnitude = 0x7E4;
constexpr auto RotateInertiaNumAveragedTouches = 0x7E8;
constexpr auto bTouchQuickbarTapToLockEnabled = 0x7EC;
constexpr auto bTouchInteractInUIAvailable = 0x7ED;
constexpr auto bTouchInteractInUIForced = 0x7EE;
constexpr auto bEnableHUDLayoutTool = 0x7EF;
constexpr auto bEnableHUDLayoutCloudSave = 0x7F0;
constexpr auto bEnableHUDLayoutToolPanZoom = 0x7F1;
constexpr auto bEnableMobileHUDV2 = 0x7F2;
constexpr auto bEnableHUDLayoutToolV2 = 0x7F3;
constexpr auto bEnableHUDLayoutToolV2_GridSnap = 0x7F4;
constexpr auto bEnableGFNSettingEditCondition = 0x7F5;
constexpr auto AthenaExternalRichPresenceDelayTimeSeconds = 0x7F8;
constexpr auto bEnableExternalPresenceAthenaPlayersRemain = 0x7FC;
constexpr auto MinimumTimeBetweenConsolePresenceUpdates = 0x800;
constexpr auto MinimumTimeBetweenMCPPresenceUpdates = 0x804;
constexpr auto TimeBetweenStorePatchCheckRequestsSeconds = 0x808;
constexpr auto bInviteUIDisabled = 0x80C;
constexpr auto bEnableInGameMipsAnalyticsReporting = 0x80D;
constexpr auto SecondsBetweenTextureStatsGathering = 0x810;
constexpr auto bEnableMipsCapExperiment = 0x814;
constexpr auto CurrentMipsCapExperimentVersion = 0x818;
constexpr auto bEnableQualitySelectionScreen = 0x81C;
constexpr auto bEnableQualityLevelSelectScreenTimer = 0x81D;
constexpr auto bEnableDownloadAnalyticsReporting = 0x81E;
constexpr auto bEnableDownloadHeartbeat = 0x81F;
constexpr auto DownloadHeartbeatIntervalInSeconds = 0x820;
constexpr auto bEnableFriendsListButton = 0x824;
constexpr auto bForceDisableCrossplatformSquadFill = 0x825;
constexpr auto bRequireCrossplayOptIn = 0x826;
constexpr auto bUseAccountCrossplayPermissions = 0x827;
constexpr auto bSingleCrossplayOptInPrompt = 0x828;
constexpr auto bImmediatelyDisplayCrossplayOptIn_STW = 0x829;
constexpr auto bImmediatelyDisplayCrossplayOptIn_BR = 0x82A;
constexpr auto bCrossplayOptInByDefault = 0x82B;
constexpr auto bShowIconForSamePlatformPlayers = 0x82C;
constexpr auto bObscuredPlatformIcons = 0x82D;
constexpr auto bEnableChatWidget = 0x82E;
constexpr auto bShowVoiceChatSettings = 0x82F;
constexpr auto bUseClientSettingsForControllerImage = 0x830;
constexpr auto bPartyInProgress = 0x831;
constexpr auto bEnableSidebar = 0x832;
constexpr auto bEnableSidebarExit = 0x833;
constexpr auto bEnableSidebarExpressYourSupport = 0x834;
constexpr auto bEnableHotTamaleWithVeggies = 0x835;
constexpr auto bEnableHotTamaleWithTofu = 0x836;
constexpr auto bEnableHotTamale = 0x837;
constexpr auto bEnableHotTamaleWithCheese = 0x838;
constexpr auto bEnableHotTamaleWithOnions = 0x839;
constexpr auto bEnableHotTamaleWithRice = 0x83A;
constexpr auto HotTamaleWithVeggiesEditorTooltipDurationSeconds = 0x83C;
constexpr auto HotTamaleWithVeggiesTabTooltipDurationSeconds = 0x840;
constexpr auto HotTamaleWithVeggiesStringTable = 0x844;
constexpr auto HotTamaleWithVeggiesReplaceOperationIntermediateDelay = 0x848;
constexpr auto bShouldAthenaQueryRecentPlayers = 0x84C;
constexpr auto bEnableAwayFriendsList = 0x84D;
constexpr auto bEnableRecentPlayerList = 0x84E;
constexpr auto bEnableSuggestedFriendList = 0x84F;
constexpr auto bEnableBlockedList = 0x850;
constexpr auto bEnableFriendListInGame = 0x851;
constexpr auto bPushJIPInfoToPlatformPresence = 0x852;
constexpr auto bEnableStWInZonePrivacyChange = 0x853;
constexpr auto bEnableSitoutOption = 0x854;
constexpr auto bEnableSitoutOption_STW = 0x855;
constexpr auto bEnableSocialPanelLeaveParty = 0x856;
constexpr auto bEnableMainMenuLeaveParty = 0x857;
constexpr auto MinUSSNameLength = 0x858;
constexpr auto bEnableNickname = 0x85C;
constexpr auto bAllowNicknameEmoji = 0x85D;
constexpr auto NicknameEmojiBlacklist = 0x860;
constexpr auto bNicknameInFront = 0x870;
constexpr auto bShowAccountBoosts = 0x871;
constexpr auto bShowCustomerSupport = 0x872;
constexpr auto bEnableChannelChangePopup = 0x873;
constexpr auto bEnableVoiceSpeakerWidget = 0x874;
constexpr auto bEnableSpeakerWidgetZonePerfMode = 0x875;
constexpr auto bShowVoiceIndicatorsWhileLoading = 0x876;
constexpr auto bEnableVoiceChannelSelectionUI = 0x877;
constexpr auto bEnableGlobalChat = 0x878;
constexpr auto bEnableAllTabInChat = 0x879;
constexpr auto bEnableEULA = 0x87A;
constexpr auto bEnableEndOfZoneCinematic = 0x87B;
constexpr auto bEnableOnboardingCinematics = 0x87C;
constexpr auto VideoDisplayDataBlacklist = 0x880;
constexpr auto bShowFounderBannerIcons = 0x890;
constexpr auto bShowCurrentRegionInLobby = 0x891;
constexpr auto bEnableFoundersDailyRewards = 0x892;
constexpr auto bEnableTwitchIntegration = 0x893;
constexpr auto bEnableMatchmakingRegionSetting = 0x894;
constexpr auto bEnableReadyupButtonWhileSittingout = 0x895;
constexpr auto bEnableEulaRequiredTournaments = 0x896;
constexpr auto bEnableMFARequiredTournaments = 0x897;
constexpr auto bAllTournamentsRequireMFA = 0x898;
constexpr auto bSpectatorBroadcasterSkipMfaEulaCheck = 0x899;
constexpr auto bEnableNaviationToChat = 0x89A;
constexpr auto bEnableLanguageSetting = 0x89B;
constexpr auto bEnableFriendCodeSetting = 0x89C;
constexpr auto bEnableEarlyAccessLoadingScreenBanner = 0x89D;
constexpr auto bClientIgnoreIsTournamentCheck = 0x89E;
constexpr auto CampaignMatchEndRetryCount = 0x8A0;
constexpr auto StWTutorialDownloadAttempts = 0x8A4;
constexpr auto bShopPurchaseConfirmation = 0x8A8;
constexpr auto bShopPurchaseConfirmationJapanPS4 = 0x8A9;
constexpr auto bToyMessagingEnabled = 0x8AA;
constexpr auto bAllowAccessToAllEmotesForTesting = 0x8AB;
constexpr auto bAllowAccessToStWHeroOutfitsAndBackblingForTesting = 0x8AC;
constexpr auto bEnableCosmeticItemShopInSTW = 0x8AD;
constexpr auto bRequireEmoteOwnershipInPIE = 0x8AE;
constexpr auto bEnableSTWLootDrops = 0x8AF;
constexpr auto bEnableSTWContainerItemCacheDrops = 0x8B0;
constexpr auto bEnableSTWEnemyItemCacheDrops = 0x8B1;
constexpr auto bEnableHoldToPickupUI = 0x8B2;
constexpr auto bSkipTrailerMovie = 0x8B3;
constexpr auto bAlwaysPlayTrailerMovie = 0x8B4;
constexpr auto bHideUnaffordableMtxPurchases = 0x8B5;
constexpr auto bDisableCTAInMtxStoreSelection = 0x8B6;
constexpr auto bAthenaFrontEndUsePushPopMTXStore = 0x8B7;
constexpr auto bHidePlusOnVbucksButton = 0x8B8;
constexpr auto bAllowXboxStwAccessDuringLiveStoreOutage = 0x8B9;
constexpr auto bShowReplayTrailerButton_Athena = 0x8BA;
constexpr auto bEnableAlterationModification = 0x8BB;
constexpr auto bEnableSchematicRarityUpgrade = 0x8BC;
constexpr auto bEnableMissionActivationVote = 0x8BD;
constexpr auto bEnableLtmRetrieveTheData = 0x8BE;
constexpr auto bEnableUpgradesVideos = 0x8BF;
constexpr auto bEnableExternalRichPresence = 0x8C0;
constexpr auto bShowEnableMFAModalAtStartupAthena = 0x8C1;
constexpr auto bShowEnableMFAModalAtStartupSTW = 0x8C2;
constexpr auto bEnableAIBuildingHitFX = 0x8C3;
constexpr auto LevelToStartShowingMFAModal = 0x8C4;
constexpr auto DaysBetweenEnableMFAModalPrompts = 0x8C8;
constexpr auto DelayGiftButtonWhenMFANotEnabledSeconds = 0x8CC;
constexpr auto LevelToAutoOpenBattlePassOnNewSeason = 0x8D0;
constexpr auto ForceSeasonRefreshCounter = 0x8D4;
constexpr auto ForceVideoRefreshCounter = 0x8D8;
constexpr auto bForceBattlePassPreview = 0x8DC;
constexpr auto bCanShowSTWUpsellInBR = 0x8DD;
constexpr auto bShowLeaderboardPrivacySettings = 0x8DE;
constexpr auto bEnableServerScoreboardLog = 0x8DF;
constexpr auto bEnableAsyncScoreboardFlush = 0x8E0;
constexpr auto bEnableInputBasedMatchmaking = 0x8E1;
constexpr auto bUsingAlternateMatchmakingModel = 0x8E2;
constexpr auto bNotifyBlockedInput = 0x8E3;
constexpr auto NumberOfFramesBeforeWarnInputBlocked = 0x8E4;
constexpr auto bDisableVideoOptions = 0x8E8;
constexpr auto bEnableBattlePassWatchVideoActionOnCell = 0x8E9;
constexpr auto bEnableBattlePassReplayCinematicAction = 0x8EA;
constexpr auto bEnableCareerReplayCinematicAction = 0x8EB;
constexpr auto RadioInputDebounceSeconds = 0x8EC;
constexpr auto RadioTuningRetryTime = 0x8F0;
constexpr auto RadioTuningRetryCount = 0x8F4;
constexpr auto bEnableBattlePassSocialFriends = 0x8F8;
constexpr auto bEnableBattlePassSocialFriendsOfDifferentPlatforms = 0x8F9;
constexpr auto bEnableBattlePassSocialFriendsServerSide = 0x8FA;
constexpr auto bEnableSimulatedXPForBattlePassSocialFriends = 0x8FB;
constexpr auto bEnableBattlePassPreviewOnRewardScreen = 0x8FC;
constexpr auto bEnableHoldToCloseOnRewardsScreen = 0x8FD;
constexpr auto BattleStarsNeededToShowRewardPreview = 0x900;
constexpr auto ShowBattlePassTracker = 0x904;
constexpr auto bDisplayBattlePassRewardsIndividually = 0x908;
constexpr auto bDisplayOnlyBattlePassFAQ = 0x909;
constexpr auto bEnableBPVideo = 0x90A;
constexpr auto bEnableUEKGameSelect = 0x90B;
constexpr auto bCompletelyDisableUEKGameSelect = 0x90C;
constexpr auto bAlwaysPlayBPVideo = 0x90D;
constexpr auto bDisableGRL = 0x90E;
constexpr auto bShowBPPreviewVideo = 0x90F;
constexpr auto bShowBPTrack_TimeLeft = 0x910;
constexpr auto bDisplayAllCharactersOnBattlePassPreviewScreen = 0x911;
constexpr auto bRefreshBattlePassCatalogOnSeasonDataLoaded = 0x912;
constexpr auto bEnableChallengeHolidayVideo = 0x913;
constexpr auto bEnableCareerScreenVideo = 0x914;
constexpr auto bEnableSpecialEventVideo = 0x915;
constexpr auto bEnableCNVideo = 0x916;
constexpr auto bEnableWinterfestPurchaseButton = 0x917;
constexpr auto bEnableWinterfestGiftButton = 0x918;
constexpr auto bForceWinterfestInfoModalButtonVisible = 0x919;
constexpr auto NumViewsToDisplayWinterfestInfoModalButton = 0x91C;
constexpr auto bCheckForPatchUpdateOnMatchmakingPlayClick = 0x920;
constexpr auto bCheckForPatchUpdateOnItemShopActivate = 0x921;
constexpr auto HiddenSettings = 0x928;
constexpr auto bDisplayPlayerReportingRoles = 0x938;
constexpr auto bDisplayRelevantPlayersForPlayerReporting = 0x939;
constexpr auto bPreventMultipleReportsOfSamePlayer = 0x93A;
constexpr auto bAllowReportingFeaturedIslands = 0x93B;
constexpr auto bForceGamepadPlaytest = 0x93C;
constexpr auto bEnableNewFireModeSelection = 0x93D;
constexpr auto bEnableHUDPresetSelection = 0x93E;
constexpr auto bEnableAddFriendWhileSpectating = 0x93F;
constexpr auto bEnableFriendLink = 0x940;
constexpr auto PlatformChatToastDisplaySeconds = 0x944;
constexpr auto HPMicrophoneToastDisplaySeconds = 0x948;
constexpr auto FriendLinkURL = 0x950;
constexpr auto bAllowForceTouchFire = 0x960;
constexpr auto VehicleSessionMinTimeUsed = 0x964;
constexpr auto RebootChipExpirationTime = 0x968;
constexpr auto RebootDirectiveDisplayTime = 0x96C;
constexpr auto bDonutIdleGameEnabled = 0x970;
constexpr auto bRebootEnableInventoryDisplay = 0x971;
constexpr auto bUseHordeStormShield = 0x972;
constexpr auto HordeStormShieldStartingRadiusOverride = 0x974;
constexpr auto HordeStormShieldEndingRadiusOverride = 0x978;
constexpr auto HordeStormShieldBreatherRadiusOverride = 0x97C;
constexpr auto bUseHordeRespawnAtLastPawnLocation = 0x980;
constexpr auto bAllowHordePlayerTriggeredRespawn = 0x981;
constexpr auto MaxQuickScopeAimAssistPulls = 0x984;
constexpr auto MaxQuickScopeAimAssistPullWatchTime = 0x988;
constexpr auto bShouldDisablePickaxeFXFrontendPreview = 0x98C;
constexpr auto bRegisterPawnsWithSignificanceManagerInFrontEnd = 0x98D;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnPS4 = 0x98E;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnXB1 = 0x98F;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch = 0x990;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnPS4_STWOnly = 0x991;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnXB1_STWOnly = 0x992;
constexpr auto bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch_STWOnly = 0x993;
constexpr auto bSimpleHeistVanEntrance = 0x994;
constexpr auto LobbyGenericLinkButtonURL = 0x998;
constexpr auto bEnableLobbyGenericLinkButton = 0x9A8;
constexpr auto LobbyGenericLinkButtonText = 0x9B0;
constexpr auto HighlightClipRewindTimeInSeconds = 0x9C0;
constexpr auto bEnableAntiTaxi = 0x9C4;
constexpr auto StopFlyingParachuteCooldownTime = 0x9C8;
constexpr auto FlushLoadingScreenRefreshSeconds = 0x9CC;
constexpr auto bEnableVehicleSpawnMissionInStw = 0x9D0;
constexpr auto bEnableDownTierCraftingInStw = 0x9D1;
constexpr auto bShowBugReportsButton = 0x9D2;
constexpr auto bShowCommentReportsButton = 0x9D3;
constexpr auto bShowContentReportsButton = 0x9D4;
constexpr auto bEnableItemRefundingInStw = 0x9D5;
constexpr auto bDisableCareerStatsButton = 0x9D6;
constexpr auto bDisableCareerLeaderboardButton = 0x9D7;
constexpr auto bDisableCareerStatsPagePlatformProfileButton = 0x9D8;
constexpr auto bUsePlatformSpecificTextOnCareerPage = 0x9D9;
constexpr auto bDisableViewOtherProfilesFromCompLeaderboards = 0x9DA;
constexpr auto bShowOtherPlayerStatsOnCareerPage = 0x9DB;
constexpr auto bShowFeatsOnClient = 0x9DC;
constexpr auto bShowHardcoreModifiers = 0x9DD;
constexpr auto InputMethodThrashingLimit = 0x9E0;
constexpr auto InputMethodThrashingWindowInSeconds = 0x9E4;
constexpr auto bEnableLogUploadForTokenHolders = 0x9E8;
constexpr auto TokenHolderLogTailSizeKb = 0x9EC;
constexpr auto bAllowPartialBackgroundAudio = 0x9F0;
constexpr auto bDuplicateRemovedPlayersOnClient = 0x9F1;
constexpr auto PlayerMarkerConfig = 0x9F4;
constexpr auto bIsCreativeMultiSelectEnabled = 0xA50;
constexpr auto bEnableUserProfilePictures = 0xA51;
constexpr auto bEnableChannelsServiceLoadTesting = 0xA52;
constexpr auto bAllowMimicingEmotes = 0xA53;
constexpr auto bAllowMimicingEmotesInFrontend = 0xA54;
constexpr auto bAllowAsyncTooltipLoading = 0xA55;
constexpr auto bAllowListViewAsyncLoading = 0xA56;
constexpr auto bEnableBackToPartyHubButton = 0xA57;
constexpr auto bEnableMobileAvailableLootingListView = 0xA58;
constexpr auto bEnableDisambiguateLoading = 0xA59;
constexpr auto NumDaysToSnoozeGooglePlayRating = 0xA5C;
constexpr auto NumDaysAllowedToDelayGoogleRating = 0xA60;
constexpr auto bEnableMobileInGameAppRating = 0xA64;
constexpr auto PreloadRevision = 0xA68;
constexpr auto bEnableLiveStoreTilePreviews = 0xA6C;
constexpr auto bUseLegacyItemShopOfferDetails = 0xA6D;
constexpr auto bEnableLiveStoreTilePreviews_InGame = 0xA6E;
constexpr auto bAllowedToEnableUIGlobalInvalidation = 0xA6F;
constexpr auto bEnableAutoMulchInStW = 0xA70;
constexpr auto bAllStWMoonbeamHUD = 0xA71;
constexpr auto MaxCharactersInTextEntry = 0xA74;
constexpr auto IllegalIslandTitleCharacters = 0xA78;
constexpr auto IllegalIslandTitleChars = 0xA88;
constexpr auto bEnableCreativeUserTextSanitizationWithToxicityService = 0xA98;
constexpr auto bEnableCreativeUserTextSanitizationWithPlatformSanitizer = 0xA99;
constexpr auto bEnableCreativeUserTextSanitizationWithChatSanitizer = 0xA9A;
constexpr auto bUseToxicityAsCreativeMainTextSanitizer = 0xA9B;
constexpr auto bUseLegacyAsyncSanitizationLogicInCreative = 0xA9C;
constexpr auto KeepPlayingTogetherDuration = 0xAA0;
constexpr auto KeepPlayingTogetherTickFrequency = 0xAA4;
constexpr auto bUseLegacyFootsteps = 0xAA8;
constexpr auto PawnVisibilityDurationOverrides = 0xAB0;
constexpr auto HotfixVersionId = 0xB00;
constexpr auto bCanTurboBuildOutsideBuildModeWithBuildTool = 0xB04;
constexpr auto MaxBuildingIntoTerrainIntersectionPercentage = 0xB08;
constexpr auto bUsingBuildingExtraPiece = 0xB0C;
constexpr auto AnalyticsBuildingWallTooLowLocations = 0xB10;
constexpr auto bDisableClientEngagementsAnalytics = 0xB14;
constexpr auto AnalyticsClientEngagementsTimeoutSeconds = 0xB18;
constexpr auto AnalyticsClientEngagementsMaxSendPerMinute = 0xB1C;
constexpr auto AnalyticsClientEngagementsMaxSendOnCleanup = 0xB20;
constexpr auto bAnalyticsClientEngagementsRequireTimeToReturnFireToSend = 0xB24;
constexpr auto AnalyticsClientEngagementsParticipationPercent = 0xB28;
constexpr auto PublishingEnabledForWhitelistedAccounts = 0xB2C;
constexpr auto IslandCodeLinkMnemonicExampleText = 0xB30;
constexpr auto IslandCodeLinkURLText = 0xB40;
constexpr auto FeaturedCreativeLTMAffiliateName = 0xB50;
constexpr auto bEnableCreativeLTMSupportCreator = 0xB60;
constexpr auto CreativePublishCodeURLPrefix = 0xB68;
constexpr auto bCreativeMinimapRendering = 0xB78;
constexpr auto bCreativeMinimapCaptureLighting = 0xB79;
constexpr auto bCreativeMapRenderingInHub = 0xB7A;
constexpr auto bCreativeMapWaitForVolumeReady = 0xB7B;
constexpr auto CuratedLinkCodes = 0xB80;
constexpr auto CuratedIslandTemplateCodes = 0xB90;
constexpr auto PlaylistCuratedContent = 0xBA0;
constexpr auto bEnableIslandCheckpoints = 0xBF0;
constexpr auto bEnableIslandLoadNetSafeGuards = 0xBF1;
constexpr auto PlaylistCuratedHub = 0xBF8;
constexpr auto CreativeIslandImageURLOverrides = 0xC48;
constexpr auto CreativeIslandGeneratedImageURLOverride = 0xC98;
constexpr auto bLoadingScreenInputPreprocessorEnabled = 0xCA8;
constexpr auto AllowInputTypeFilterForAccessibility = 0xCA9;
constexpr auto AllowLockPrimaryInputMethodToMouseForAccessibility = 0xCAA;
constexpr auto bEnableLiveStream = 0xCAB;
constexpr auto bEnableLiveStreamCountdown = 0xCAC;
constexpr auto LiveStreamStartTime = 0xCB0;
constexpr auto bEnableLiveStreamInMatch = 0xCB8;
constexpr auto bShowLiveStreamInMatchByDefault = 0xCB9;
constexpr auto bCaptureTeamFrontendFlag = 0xCBA;
constexpr auto VideoHolidayName = 0xCBC;
constexpr auto VideoBattlePassName = 0xCC0;
constexpr auto VideoCareerScreenName = 0xCC4;
constexpr auto VideoChallengeScreenName = 0xCC8;
constexpr auto VideoFrontEndName = 0xCCC;
constexpr auto FTUESeasonTrailerBoundary = 0xCD0;
constexpr auto VideoDurationOffsetFromTransition = 0xCD4;
constexpr auto VideoDurationOffsetFromEnd = 0xCD8;
constexpr auto SeasonVideoIDs = 0xCE0;
constexpr auto bEnableGCBeforeVideoPlayback = 0xD20;
constexpr auto EOneVideoLength = 0xD24;
constexpr auto ETwoVideoLength = 0xD28;
constexpr auto MediaCDNDistribution = 0xD30;
constexpr auto MaxNumberOfMediaDecoderResources = 0xD40;
constexpr auto VideoEVMap = 0xD48;
constexpr auto MediaPartnerRegionControl = 0xD58;
constexpr auto LiveStreamPiPMemoryRequired = 0xD68;
constexpr auto ShouldShowLiveStreamPiPInMatchCounter = 0xD70;
constexpr auto bEnableNewPIP = 0xD78;
constexpr auto bEnableRiskyReelsStreaming = 0xD79;
constexpr auto bDisableBlastURLStreamSource = 0xD7A;
constexpr auto StreamPlaylistFetchMethodOrder = 0xD7C;
constexpr auto bHiddenButEnabledLiveStreamInMatch = 0xD80;
constexpr auto TimedEventsJIPStartDelay = 0xD84;
constexpr auto bInputActionHolding = 0xD88;
constexpr auto PictureInPictureState = 0xD89;
constexpr auto bEnableSplineReticulationById = 0xD8C;
constexpr auto bUseSingleHUDUpdatePerFrame = 0xD8D;
constexpr auto MinInteractionScoreForFriendToBeConsideredClose = 0xD90;
constexpr auto MinIntervalBetweenInviteToPartyNotificationsInSeconds = 0xD98;
constexpr auto DelayBetweenStartOfPostGameAndShowDelayedNotificationsInSeconds = 0xDA0;
constexpr auto PlaylistConditionalFlags = 0xDA8;
constexpr auto bIsUserChoiceAllowedForForcedAndroidStore = 0xDB8;
constexpr auto AndroidStoreCounter = 0xDBC;
constexpr auto bHideCharacterCustomizationNullTile = 0xDC0;
constexpr auto bEnablePlaylistRequireCrossplay = 0xDC1;
constexpr auto bRequireCrossplayOptInForFill = 0xDC2;
constexpr auto bUseConcurrentCrossplayPromptGuard = 0xDC3;
constexpr auto MaxSquadSize = 0xDC4;
constexpr auto MaxPartySizeCampaign = 0xDC8;
constexpr auto MaxPartySizeAthena = 0xDCC;
constexpr auto bShouldFollowersSendSquadMatchmakingInfo = 0xDD0;
constexpr auto bAllowAthenaNavSystemForCreative = 0xDD1;
constexpr auto bEnablePlayerSurveys = 0xDD2;
constexpr auto bEnablePlayerStatsPrecache = 0xDD3;
constexpr auto bEnableStreamingReplayViewingUI = 0xDD4;
constexpr auto LiveReplayDiscoverabilityDelay = 0xDD8;
constexpr auto bSkipPlayingFortniteChecks = 0xDDC;
constexpr auto bReplayBattleMapCameraMode = 0xDDD;
constexpr auto bReplayKeepLocalClientEvents = 0xDDE;
constexpr auto bReplaySampleAthenaPawnMovement = 0xDDF;
constexpr auto ReplaySampleAthenaPawnTimeRate = 0xDE0;
constexpr auto ReplaySampleAthenaPawnSpaceRate = 0xDE4;
constexpr auto ReplaySampleAthenaPawnUpdateTimeRate = 0xDE8;
constexpr auto bDisablePartyJoinInOutpost = 0xDEC;
constexpr auto MashSpecialScores = 0xDF0;
constexpr auto bEnableMissedInvitesEntry = 0xE40;
constexpr auto bOnlyShowMissedInvitesEntryIfMissedInvites = 0xE41;
constexpr auto bEnableSidekick = 0xE42;
constexpr auto bEnableSidekickFeature1 = 0xE43;
constexpr auto bEnableSidekickFOMO = 0xE44;
constexpr auto bEnableSidekickAvatars = 0xE45;
constexpr auto bSidekickDisablesScreenRecord = 0xE46;
constexpr auto bSidekickEnableExitFNButton = 0xE47;
constexpr auto bEnableSidekickFaceAreaInvalidation = 0xE48;
constexpr auto bSidekickDisabledByNightNight = 0xE49;
constexpr auto bSidekickForcesSingleChannelMode = 0xE4A;
constexpr auto bEnableCampaignBatchLevelingUI = 0xE4B;
constexpr auto bAllowSimultaneousChannelConnections = 0xE4C;
constexpr auto bExpandNotListeningChannels = 0xE4D;
constexpr auto MaxSetFriendSubscriptionSettingsAttempts = 0xE50;
constexpr auto MaxQueryFriendSubscriptionSettingsAttempts = 0xE54;
constexpr auto NumDaysBetweenPlayingNotifications = 0xE58;
constexpr auto NumHoursBetweenPlayingNotifications = 0xE5C;
constexpr auto NumMinutesBetweenPlayingNotifications = 0xE60;
constexpr auto bForceAutoChangeMaterialOn = 0xE64;
constexpr auto bActiveDisplayDeviceTemperature = 0xE65;
constexpr auto bAllowOfflineInvites = 0xE66;
constexpr auto bEnablePlatformVoiceLeave = 0xE67;
constexpr auto bEnablePlatformVoicePrompts = 0xE68;
constexpr auto bEnableVoiceChatEnablePrompt = 0xE69;
constexpr auto PlaylistGameVoiceChannelRecommendationDisplayTime = 0xE6C;
constexpr auto bEnablePlaylistGameChannelRecommendationToast = 0xE70;
constexpr auto bEnableQuickHealing = 0xE71;
constexpr auto bAllowDeferredPedestalPawnSpawn = 0xE72;
constexpr auto bRunUnicornOnServer = 0xE73;
constexpr auto bShowSamsungSensorButtonWarning = 0xE74;
constexpr auto SamsungSensorButtonGamesPerWarning = 0xE78;
constexpr auto CatabaExclusiveCountryCodes = 0xE80;
constexpr auto bEnableItemShopDynamicBackground = 0xE90;
constexpr auto EnableCommunityVotingScreen = 0xE91;
constexpr auto CommunityVotingTutorialVersion = 0xE94;
constexpr auto CommunityVotingRevealDelay = 0xE98;
constexpr auto CommunityVotingTimerRefreshDelay = 0xE9C;
constexpr auto ScrollToWinnerTileAfterReveal = 0xEA0;
constexpr auto EnableStandaloneStorefront = 0xEA1;
constexpr auto bEnableBattlePassStorefront = 0xEA2;
constexpr auto bEnableItemPreviewInStore = 0xEA3;
constexpr auto bEnableCurrencyInspectScreenBonusText = 0xEA4;
constexpr auto bEnableCurrencyBonusBanner = 0xEA5;
constexpr auto bEnableItemShopInvalidationBox = 0xEA6;
constexpr auto ScrollToStandaloneSectionOnPopupClosed = 0xEA7;
constexpr auto ItemShopOrdering = 0xEA8;
constexpr auto bEnableItemShopSectionBangs = 0xEB8;
constexpr auto bEnableItemShopCommunityVotingSectionBang = 0xEB9;
constexpr auto ItemShopDefaultLandingPriority = 0xEC0;
constexpr auto ItemShopOverrideDisplayDataList = 0xED0;
constexpr auto ItemShopDefaultLanding = 0xEE0;
constexpr auto ItemShopOfferSeenThreshold = 0xEE4;
constexpr auto CommunityVotingTileAnimated = 0xEE8;
constexpr auto ScrollToComTileOnEventPopupClosed = 0xEE9;
constexpr auto EnableThanksVotingPopup = 0xEEA;
constexpr auto bUseItemPresentationScreenOnItemPurchased = 0xEEB;
constexpr auto CommunityVotingThanksPopupDelay = 0xEEC;
constexpr auto ReloadMtxExclusiveCountryCodes = 0xEF0;
constexpr auto bEnableReloadMtx = 0xF00;
constexpr auto bEnableDynamicReloadMtx = 0xF01;
constexpr auto bEnableInGameReloadMtx = 0xF02;
constexpr auto bEnableCrew = 0xF03;
constexpr auto bEnableSubscriptionInspectScreen = 0xF04;
constexpr auto bEnableBattlePassViolatorEarnedCurrency = 0xF05;
constexpr auto InGameCosmeticItemBangRefreshRate = 0xF08;
constexpr auto bUseContentPatchingRestartFlow = 0xF0C;
constexpr auto bAthenaAutoPickupStackables = 0xF0D;
constexpr auto ScheduledNotifications = 0xF10;
constexpr auto bEnableUnicornHighlightsOnClient = 0xF20;
constexpr auto bEnableHighlightsPromptInCompeteScreen = 0xF21;
constexpr auto bUseReturnToKairosLoadingScreen = 0xF22;
constexpr auto bForceReturnToKairosLoadingScreen = 0xF23;
constexpr auto bDebugForceLoginRelaunch = 0xF24;
constexpr auto bEnableDADUpdateCheckOnRTMM = 0xF25;
constexpr auto bShouldAllowNightNightMode = 0xF26;
constexpr auto NightNightPluginName = 0xF28;
constexpr auto NightNightCalendarEventName = 0xF38;
constexpr auto bEnableFrontendMeshRockyRidgeCheck = 0xF48;
constexpr auto bForceAllowFrontendMeshRockyRidgeCheck = 0xF49;
constexpr auto FrontendMeshRockyRidgeMetadataKey = 0xF50;
constexpr auto FrontendMeshRockyRidgeCanaryKey = 0xF60;
constexpr auto FrontendMeshRockyRidgeInitialIntervalSeconds = 0xF70;
constexpr auto FrontendMeshRockyRidgeFailureMultiplier = 0xF74;
constexpr auto FrontendMeshRockyRidgeMaxIntervalSeconds = 0xF78;
constexpr auto FrontendMeshRockyRidgeMeshName = 0xF7C;
constexpr auto bForceEverybodyToGoNightNight = 0xF80;
constexpr auto bQueryKeychainBeforeGoingNightNight = 0xF81;
constexpr auto bSkipSubGameDuringNightNight = 0xF82;
constexpr auto bAllowCampaignFrontendToGoNightNight = 0xF83;
constexpr auto bShouldAllowForcedIntro = 0xF84;
constexpr auto ForcedIntroName = 0xF88;
constexpr auto bShowMovieInGameplayIntro = 0xF8C;
constexpr auto bSkipSubgameSelectDuringForcedIntro = 0xF8D;
constexpr auto bSkipToEndGameplayIntroOutroVideos = 0xF8E;
constexpr auto MaxGameplayCinematicLength = 0xF90;
constexpr auto bUseAthenaArmory = 0xF94;
constexpr auto bEnableLiveSpectateButton = 0xF95;
constexpr auto bEnableGuidedTutorialDefensiveBuilding = 0xF96;
constexpr auto bEnableSafeZoneEditor = 0xF97;
constexpr auto bEnableSavedLoadouts = 0xF98;
constexpr auto bSavedLoadoutsUseGodTile = 0xF99;
constexpr auto bEnableSafeZoneEditorOnLogin = 0xF9A;
constexpr auto bEnableSafeZoneEditorWhenNotInApolloIntro = 0xF9B;
constexpr auto LoginFlowCMSRefreshWaitTime = 0xF9C;
constexpr auto bEnableAppResumeCMSUpdate = 0xFA0;
constexpr auto bEnableMOTDAnalytics = 0xFA1;
constexpr auto bEnableTabTransitionMOTDAnalyticsEvent = 0xFA2;
constexpr auto bAllowStoreSkipOpenAnimation = 0xFA3;
constexpr auto bAllowInGameStore = 0xFA4;
constexpr auto bPostGameStoreNoLeto = 0xFA5;
constexpr auto bPostGameStoreTriggerIncrementalGC = 0xFA6;
constexpr auto bAllowInGameLocker = 0xFA7;
constexpr auto bAllowInGameCareer = 0xFA8;
constexpr auto bAllowInGameActivityBrowser = 0xFA9;
constexpr auto bEnableGuidedTutorialDirectFlush = 0xFAA;
constexpr auto bEnableGuidedTutorialABTesting = 0xFAB;
constexpr auto bEnableHighlightPlayButtonABTesting = 0xFAC;
constexpr auto bEnableSkipGuidedTutorialABTesting = 0xFAD;
constexpr auto MaxFrontendFlowStatQueries = 0xFB0;
constexpr auto ApolloIntroShowMovie = 0xFB4;
constexpr auto bRunDeimosSpawnTimelines = 0xFB5;
constexpr auto TeamToPlaceMeshNetPawnsOn = 0xFB8;
constexpr auto bEnableAddFriendUserSearchDarkTraffic = 0xFBC;
constexpr auto bEnableExtendedUserSearchUI = 0xFBD;
constexpr auto bEnableRecursiveMatchAssignmentSearchForTeam = 0xFBE;
constexpr auto bEnableBackfillCheckForHighestTeamScore = 0xFBF;
constexpr auto bEnableBackfillCheckForTeamScoreDifference = 0xFC0;
constexpr auto BackfillCheckForHighestTeamScorePlaylistOverrides = 0xFC8;
constexpr auto BackfillCheckForScoreDiscrepancyPlaylistOverrides = 0x1018;
constexpr auto bDisableTdmBackfilledPlayerTeleport = 0x1068;
constexpr auto bDisableWarmupRequiredPlayerCountCheck = 0x1069;
constexpr auto bAIDirectorTreatBotsAsPlayersForLOD = 0x106A;
constexpr auto bEnablePhoenix = 0x106B;
constexpr auto bBuildingPossessionShown = 0x106C;
constexpr auto LoadingContentModalWidget = 0x1070;
constexpr auto bBacchusFrontendEnabled = 0x1088;
constexpr auto InvalidCreativeItemTags = 0x1090;
constexpr auto ValkyrieMajMinPatchQueryParams = 0x10A0;
constexpr auto bSprintingStrafeSnapEnabled = 0x10B0;
constexpr auto bExplicitSprintableInputRange = 0x10B1;
constexpr auto MinForwardForSprint = 0x10B4;
constexpr auto MinForwardForSprintSnapping = 0x10B8;
constexpr auto AccelerationStrafeMultiplierSprintOverride = 0x10BC;
constexpr auto KeyboardDiagonalSprintForwardOverride = 0x10C0;
constexpr auto KeyboardSprintInputWindUpTime = 0x10C4;
constexpr auto KeyboardMoveInputWindUpTime = 0x10C8;
constexpr auto bEnableWebAuthFNMobileOnClassicBuild = 0x10CC;
constexpr auto bPortraitWebAuthFNMobileOnClassicBuild = 0x10CD;
constexpr auto bBacchusFrontendLabelShown = 0x10CE;
constexpr auto NoWeaponZoneMaxDestroyCount = 0x10D0;
constexpr auto NoWeaponZoneResetDestroyCountRate = 0x10D4;
constexpr auto bAllowCurieIfCreativeOrPlayground = 0x10D8;
constexpr auto bEnableServerSendPlayerInteractions = 0x10D9;
constexpr auto ServerSendPlayerInteractionsIntervalSeconds = 0x10DC;
constexpr auto bEnableServerSendPlayerInteractionsRankInCreativeMode = 0x10E0;
constexpr auto bEnableServerPlayerInteractionIdleTracking = 0x10E1;
constexpr auto bEnableNonFriendSquadInteractionTracking = 0x10E2;
constexpr auto MinInteractionDurationForDispatch = 0x10E8;
constexpr auto DefaultMissionGen = 0x10F0;
constexpr auto bGyroV2Enabled = 0x1118;
constexpr auto bFlickStickEnabled = 0x1119;
constexpr auto GyroAimAssistMode = 0x111C;
constexpr auto bForceMotionControlsEnabled = 0x1120;
constexpr auto bAdvancedCameraResetEnabled = 0x1121;
constexpr auto bEnableBacchusDialogSystem = 0x1122;
constexpr auto bBacchusDialogSystemSkipConfirmationStep = 0x1123;
constexpr auto bMobileDisableResolutionReset = 0x1124;
constexpr auto bMotionAxisMobileDefaultToYaw = 0x1125;
constexpr auto bFollowCameraOptionAvailable = 0x1126;
constexpr auto bAutoCenterOptionAvailable = 0x1127;
constexpr auto bShouldRestartCreativeServersForCalendarEventChanges = 0x1128;
constexpr auto bCreativeEmoteControllerUseWhitelist = 0x1129;
constexpr auto CreativeEmoteControllerWhitelist = 0x1130;
constexpr auto bPreventLateJoiningPlayersAfterAircraft = 0x1140;
constexpr auto AllowedPMRStatuses = 0x1148;
constexpr auto bShowRMTPurchaseSpecialInfo = 0x1158;

}


namespace FortSKPushVehicleConfigs
{

	constexpr auto PedalForceMultiplier = 0x6b0; // float
	constexpr auto PedalTopSpeedMultiplier = 0x6b4; // float
	constexpr auto PedalForceDuration = 0x6b8; // float
	constexpr auto CoastBrakingMinDelta = 0x6bc; // float
	constexpr auto CoastBrakingMaxDelta = 0x6c0; // float
	constexpr auto PedalMinDuration = 0x6c4; // float
	constexpr auto MountDuration = 0x6c8; // float
	constexpr auto DismountDuration = 0x6cc; // float
	constexpr auto MinPreDismountCooldown = 0x6d0; // float
	constexpr auto PreDismountCooldown = 0x6d4; // float
	constexpr auto PedalCooldown = 0x6d8; // float
	constexpr auto CoastBrakingStrength = 0x6dc; // float
	constexpr auto ShoppingMinPedalCoastSpeed = 0x6e0; // float
	constexpr auto VehicleDebugStrafeCoastMultiplier = 0x6e4; // float
	constexpr auto CanCoastCooldown = 0x6e8; // float
	constexpr auto MaxAutoDismountForwardSpeed = 0x6ec; // float
	constexpr auto PedalMinForwardVelocity = 0x6f0; // float
	constexpr auto FastDismountDuration = 0x6f4; // float
	constexpr auto CanCoastAfterFastDismountCooldown = 0x6f8; // float
	constexpr auto PassengerVehicleWeightShiftYawStrength = 0x6fc; // float
	constexpr auto MinPushForceMagnitude = 0x700; // float
	constexpr auto MinGearRampTime = 0x704; // float

}

namespace FortSpaghettiVehicle {

	//constexpr auto CacheDriverCameraShake = 0x18d8; // UMatineeCameraShake*
	//constexpr auto BounceContactRepulsionForce = 0x18e0; // float
	//constexpr auto BoostForce = 0x18e4; // float
	//constexpr auto MaxVerticalBoostForce = 0x18e8; // float
	//constexpr auto BoostSpeedKmh = 0x18ec; // float
	//constexpr auto BaseSphericalDriveParams = 0x18f0; // FSphericalDriveParams
	//constexpr auto BaseTowhookParams = 0x1938; // FTowhookParams
	//constexpr auto TowhookSpringDeformationRateOnGround = 0x1a08; // float
	//constexpr auto bAutoRetractGrapple = 0x1a0c; // bool
	//constexpr auto bCanHoldGrapple = 0x1a0d; // bool
	//constexpr auto TowhookInterpSpeed = 0x1a10; // float
	//constexpr auto TowhookInterpMaxPercentPerSecond = 0x1a14; // float
	//constexpr auto TowhookMaxInvalidateTargetAngleDeg = 0x1a18; // float
	//constexpr auto TowhookMaxInvalidateTargetDot = 0x1a1c; // float
	//constexpr auto InternalBlockerCollisionName = 0x1a20; // FName
	//constexpr auto BoostBounceAction = 0x1a28; // FFortRechargingActionTimer
	//constexpr auto ProjectileTraceChannel = 0x1b04; // ECollisionChannel
	//constexpr auto ProjectileSpeedKmh = 0x1b08; // float
	//constexpr auto OnTowhookShot = 0x1b10; // FMulticastInlineDelegate
	//constexpr auto OnTowhookAttached = 0x1b20; // FMulticastInlineDelegate
	//constexpr auto OnTowhookDetached = 0x1b30; // FMulticastInlineDelegate
	//constexpr auto OnTowhookMissed = 0x1b40; // FMulticastInlineDelegate
	//constexpr auto OnTowhookHolstered = 0x1b50; // FMulticastInlineDelegate
	//constexpr auto OnTowhookYanked = 0x1b60; // FMulticastInlineDelegate
	//constexpr auto OnExtendToggled = 0x1b70; // FMulticastInlineDelegate
	//constexpr auto ReplicatedAttachState = 0x1b80; // FNetTowhookAttachState
	//constexpr auto FortSpaghettiVehicleConfigs = 0x1bf0; // UFortSpaghettiVehicleConfigs*
	//constexpr auto NetTowhookAimDir = 0x2388; // FVector_NetQuantizeNormal
	//constexpr auto CacheCoilIdleTopR = 0x23b0; // UParticleSystemComponent*
	//constexpr auto CacheCoilIdleTopL = 0x23b8; // UParticleSystemComponent*
	//constexpr auto CacheCoilIdleBottomR = 0x23c0; // UParticleSystemComponent*
	//constexpr auto CacheCoilIdleBottomL = 0x23c8; // UParticleSystemComponent*
	//constexpr auto CacheBoostFX = 0x23d0; // UParticleSystemComponent*
	//constexpr auto CacheDustFX = 0x23d8; // UParticleSystemComponent*
	//constexpr auto CacheAudioMovement = 0x23e0; // UFortVehicleAudioVoice*
	//constexpr auto CacheAudioWind = 0x23e8; // UFortVehicleAudioVoice*
	//constexpr auto CacheAudioTowCable = 0x23f0; // UFortVehicleAudioVoice*

	constexpr auto CacheDriverCameraShake = 0x18D0;
	constexpr auto BounceContactRepulsionForce = 0x18D8;
	constexpr auto BoostForce = 0x18DC;
	constexpr auto MaxVerticalBoostForce = 0x18E0;
	constexpr auto BoostSpeedKmh = 0x18E4;
	constexpr auto BaseSphericalDriveParams = 0x18E8;
	constexpr auto BaseTowhookParams = 0x1930;
	constexpr auto TowhookSpringDeformationRateOnGround = 0x1A00;
	constexpr auto bAutoRetractGrapple = 0x1A04;
	constexpr auto bCanHoldGrapple = 0x1A05;
	constexpr auto TowhookInterpSpeed = 0x1A08;
	constexpr auto TowhookInterpMaxPercentPerSecond = 0x1A0C;
	constexpr auto TowhookMaxInvalidateTargetAngleDeg = 0x1A10;
	constexpr auto TowhookMaxInvalidateTargetDot = 0x1A14;
	constexpr auto InternalBlockerCollisionName = 0x1A18;
	constexpr auto BoostBounceAction = 0x1A20;
	constexpr auto ProjectileTraceChannel = 0x1AFC;
	constexpr auto ProjectileSpeedKmh = 0x1B00;
	constexpr auto OnTowhookShot = 0x1B08;
	constexpr auto OnTowhookAttached = 0x1B18;
	constexpr auto OnTowhookDetached = 0x1B28;
	constexpr auto OnTowhookMissed = 0x1B38;
	constexpr auto OnTowhookHolstered = 0x1B48;
	constexpr auto OnTowhookYanked = 0x1B58;
	constexpr auto OnExtendToggled = 0x1B68;
	constexpr auto ReplicatedAttachState = 0x1B78;
	constexpr auto FortSpaghettiVehicleConfigs = 0x1BE8;
	constexpr auto NetTowhookAimDir = 0x2378;
	constexpr auto CacheCoilIdleTopR = 0x23A0;
	constexpr auto CacheCoilIdleTopL = 0x23A8;
	constexpr auto CacheCoilIdleBottomR = 0x23B0;
	constexpr auto CacheCoilIdleBottomL = 0x23B8;
	constexpr auto CacheBoostFX = 0x23C0;
	constexpr auto CacheDustFX = 0x23C8;
	constexpr auto CacheAudioMovement = 0x23D0;
	constexpr auto CacheAudioWind = 0x23D8;
	constexpr auto CacheAudioTowCable = 0x23E0;
}

namespace FortVehicleSeatWeaponComponent {

	constexpr auto MuzzleSocketNames = 0xa0; // TArray<FName>
	constexpr auto WeaponSeatDefinitions = 0xb0; // TArray<FWeaponSeatDefinition>
	constexpr auto ActiveSeatIdx = 0xc0; // int32_t
	constexpr auto CachedWeaponDef = 0xc8; // UFortWeaponRangedItemDefinition*
	constexpr auto CachedOverheatMax = 0xd0; // float
	constexpr auto CachedOverheatValue = 0xd4; // float
	constexpr auto OverheatValueRepped = 0xd8; // float
	constexpr auto bWeaponEquipped = 0xdc; // bool
	constexpr auto bUseVehicleOrientationForShootingCone = 0xdd; // bool
	constexpr auto bControlledByMultipleSeats = 0xde; // bool
	constexpr auto bUseWeaponCameraMode = 0xdf; // bool
	constexpr auto ActorBase = 0xe0; // AActor*
	constexpr auto bReadyToSleep = 0xe8; // bool
	constexpr auto TotalShotsAllowedThenShutdown = 0xf0; // FScalableFloat
	constexpr auto ShotsFired = 0x118; // int32_t
	constexpr auto OnSeatedPlayerTargetingChanged = 0x120; // FMulticastInlineDelegate
	constexpr auto OnOverheatStateChanged = 0x130; // FMulticastInlineDelegate
	constexpr auto OnEquipMountedWeapon = 0x140; // FMulticastInlineDelegate
	constexpr auto bSeatUsesFastSharedReplication = 0x150; // bool
	constexpr auto bWeaponOverheatDataHasBeenCached = 0x151; // bool
	constexpr auto CachedWeaponOverheatData = 0x154; // FFortCachedWeaponOverheatData
	constexpr auto CachedWeaponState = 0x16c; // FVehicleWeapon_RetainedData
	constexpr auto bSaveAndRestoreWeaponData = 0x178; // bool
	constexpr auto WeaponSklMeshComponent = 0x180; // USkeletalMeshComponent*
	constexpr auto VehicleSocketName = 0x188; // FName
	constexpr auto VehiclePawnAttachSocketName = 0x18c; // FName
	constexpr auto AttachmentAngleOffsetYaw = 0x190; // float
	constexpr auto DynamicReticleWidgetComponent = 0x1c8; // UFortVehicleDynamicReticleWidgetComponent*
	constexpr auto CachedWeapon = 0x1d0; // AFortWeaponRanged*

}

namespace FortVehicleAimingWeaponComp {


	constexpr auto bShouldResetCameraHorizontallyToBarrelWhenEntered = 0x1d8; // bool
	constexpr auto bShouldResetCameraVerticallyToBarrelWhenEntered = 0x1d9; // bool
	constexpr auto StartCameraResetToBarrelTime = 0x1dc; // float
	constexpr auto bAllowCameraLocalVerticalRotationOnly = 0x1e0; // bool
	constexpr auto AimBlendInSpeed = 0x1e4; // float
	constexpr auto AimBlendOutSpeed = 0x1e8; // float
	constexpr auto bSetDesiredPitchWhenUnmanned = 0x1ec; // bool
	constexpr auto bSetDesiredYawWhenUnmanned = 0x1ed; // bool
	constexpr auto bUseGlobalOnlyAiming = 0x1ee; // bool
	constexpr auto LocalAimOffsetWhenPitchedUp = 0x1f0; // FVector
	constexpr auto LocalAimOffsetWhenPitchedFlat = 0x208; // FVector
	constexpr auto LocalAimOffsetWhenPitchedDown = 0x220; // FVector
	constexpr auto RotCyclesPerFullTurnHoriz = 0x238; // float
	constexpr auto RotCyclesPerFullTurnVert = 0x23c; // float
	constexpr auto bCorrectAimFromCameraToMuzzle = 0x240; // bool
	constexpr auto bUseClientMuzzleLocationAuthority = 0x241; // bool
	constexpr auto YawDiffRemaining = 0x244; // float
	constexpr auto PitchDiffRemaining = 0x248; // float
	constexpr auto bInterpolateAimToDesired = 0x24c; // bool
	constexpr auto LastTickTime = 0x250; // float
	constexpr auto TickCount = 0x254; // int32_t
	constexpr auto CameraAimBlendFactor = 0x258; // float
	constexpr auto TargetLocalAimOrientation = 0x260; // FRotator
	constexpr auto TargetLocalAimOrientationCorrected = 0x278; // FRotator
	constexpr auto CurrentLocalAimOrientation = 0x290; // FRotator
	constexpr auto CurrentLocalAimOrientationCorrected = 0x2a8; // FRotator
	constexpr auto TargetLocalAimOrientationRepped = 0x2c0; // FRotator
	constexpr auto TargetLocalAimOrientationCorrectedRepped = 0x2d8; // FRotator
	constexpr auto UnmannedDesiredPitch = 0x2f0; // float
	constexpr auto UnmannedDesiredYaw = 0x2f4; // float
	constexpr auto HorizAimRotDelta = 0x2f8; // float
	constexpr auto VertAimRotDelta = 0x2fc; // float
	constexpr auto AimSourceType = 0x300; // EFortAbilityTargetingSource
	constexpr auto bPlayerEnteredThisFrame = 0x301; // bool
	constexpr auto bApplyOwnerRotationToAimWhenUnmanned = 0x302; // bool
	constexpr auto MaxYawPerSecondThreshold = 0x304; // float
	constexpr auto MaxPitchPerSecondThreshold = 0x308; // float
	constexpr auto PitchConstraintAngleOffset = 0x30c; // float
	constexpr auto AimInterpSpeed = 0x310; // float
	constexpr auto InitialCameraInterpSpeed = 0x314; // float
	constexpr auto InitialCameraLerpTime = 0x318; // float
	constexpr auto MinDistanceForCorrection = 0x31c; // float
	constexpr auto AnimatedMuzzleLocation = 0x320; // FVector

}

namespace FortVehicleFuelComponent {

	constexpr auto OnFuelChanged = 0xa0; // FMulticastInlineDelegate
	constexpr auto OnRefueledFromEmpty = 0xb0; // FMulticastInlineDelegate
	constexpr auto OnOutOfFuel = 0xc0; // FMulticastInlineDelegate
	constexpr auto OnLowFuel = 0xd0; // FMulticastInlineDelegate
	constexpr auto OwnerVehicle = 0xe0; // AFortAthenaVehicle*
	constexpr auto ServerFuel = 0xe8; // float
	constexpr auto OutOfFuelSound = 0xf0; // USoundBase*
	constexpr auto LowFuelSound = 0xf8; // USoundBase*
	constexpr auto LowFuelRepeatingPing = 0x100; // USoundBase*
	constexpr auto UsesFuelSystem = 0x108; // FScalableFloat
	constexpr auto InitializeWithStartingFuel = 0x130; // FScalableFloat
	constexpr auto FuelTankCapacity = 0x158; // FScalableFloat
	constexpr auto FuelPerSecondIdle = 0x180; // FScalableFloat
	constexpr auto FuelPerSecondDriving = 0x1a8; // FScalableFloat
	constexpr auto FuelPerSecondBoosting = 0x1d0; // FScalableFloat
	constexpr auto MinFuelAtSpawn = 0x208; // FScalableFloat
	constexpr auto MaxFuelAtSpawn = 0x230; // FScalableFloat
	constexpr auto InfiniteFuel = 0x258; // FScalableFloat
	constexpr auto LowFuelRepeatingPingDelay = 0x280; // FScalableFloat
	constexpr auto LowFuelPercent = 0x2a8; // FScalableFloat
	constexpr auto CustomFuelUI = 0x2d0; // TArray<FVehicleSpecificUIDetails>

}

namespace FortVehicleItemDefinition {

	constexpr auto VehicleMinSpawnPercent = 0x8b8; // FScalableFloat
	constexpr auto VehicleMaxSpawnPercent = 0x8e0; // FScalableFloat
	constexpr auto MaxNumberCanSpawn = 0x908; // FScalableFloat
	constexpr auto MinPercentWithGas = 0x930; // FScalableFloat
	constexpr auto MaxPercentWithGas = 0x958; // FScalableFloat
	constexpr auto MinPercentInoperable = 0x980; // FScalableFloat
	constexpr auto MaxPercentInoperable = 0x9a8; // FScalableFloat
	constexpr auto WrapPreviewTransform = 0x9d0; // FTransform
	constexpr auto WrapPreviewSectionMask = 0xa30; // int32_t
	constexpr auto bUseInWrapPreviewList = 0xa34; // char : 1
	constexpr auto VehicleActorClass = 0xa38; // TSoftClassPtr<UObject>
	constexpr auto PreviewSkeletalMesh = 0xa60; // TSoftObjectPtr<USkeletalMesh>
	constexpr auto SpawnVehicleNames = 0xa88; // TArray<FString>
	constexpr auto MaxSpawnDistance = 0xa98; // float
	constexpr auto SpawnWithMods = 0xaa0; // FGameplayTagContainer

}

namespace FortVehicleManager {

	constexpr auto OnVehicleCountByTagChanged = 0x290; // FMulticastInlineDelegate
	constexpr auto Vehicles = 0x2a8; // TArray<AFortAthenaVehicle*>
	constexpr auto VehicleCountByTagMap = 0x2d8; // TMap<FGameplayTag, int32_t>

}

namespace FortVehicleMovementSet {

	constexpr auto FrontLateralFrictionScale = 0x30; // FFortGameplayAttributeData
	constexpr auto RearLateralFrictionScale = 0x58; // FFortGameplayAttributeData
	constexpr auto BrakeForceTractionScale = 0x80; // FFortGameplayAttributeData
	constexpr auto ForwardForceTractionScale = 0xa8; // FFortGameplayAttributeData
	constexpr auto SlopeAntigravityScale = 0xd0; // FFortGameplayAttributeData
	constexpr auto TopSpeedScale = 0xf8; // FFortGameplayAttributeData
	constexpr auto VehicleGravityScale = 0x120; // FFortGameplayAttributeData

}

namespace FortWeakPoint {
	constexpr auto OnWeakPointStateChangedDelegate = 0x950; // FMulticastInlineDelegate
	constexpr auto CachedWeakPointCoordinator = 0x960; // UFortWeakPointsCoordinatorComponent*
	constexpr auto WeakPointState = 0x968; // EFortWeakPointState
	constexpr auto WeakPointAttachmentSocketName = 0x96c; // FName
	constexpr auto bShouldDisplayHealthBarWhenActive = 0x970; // bool
	constexpr auto bShouldRegisterForAimAssist = 0x971; // bool

}

namespace FortWeaponAttrSet {

	constexpr auto WeaponChanceToNotConsumeAmmo = 0x30; // FFortGameplayAttributeData
	constexpr auto AccumulatedWeaponChanceToNotConsumeAmmo = 0x58; // FFortGameplayAttributeData
	constexpr auto WeaponRateOfFire = 0x80; // FFortGameplayAttributeData
	constexpr auto WeaponHorizontalRecoil = 0xa8; // FFortGameplayAttributeData
	constexpr auto WeaponVerticalRecoil = 0xd0; // FFortGameplayAttributeData
	constexpr auto WeaponSpreadReduction = 0xf8; // FFortGameplayAttributeData
	constexpr auto WeaponReloadSpeed = 0x120; // FFortGameplayAttributeData
	constexpr auto WeaponAmmoClipSize = 0x148; // FFortGameplayAttributeData
	constexpr auto WeaponChargeRate = 0x170; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatMultiplier = 0x198; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatMaxMultiplier = 0x1c0; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatCoolingMultiplier = 0x1e8; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatCooldownMultiplier = 0x210; // FFortGameplayAttributeData
	constexpr auto CharacterItemDurabilityDecayModifier = 0x238; // FFortGameplayAttributeData

}

namespace FortWeaponPickaxeAthena {
	constexpr auto WeaponChanceToNotConsumeAmmo = 0x30; // FFortGameplayAttributeData
	constexpr auto AccumulatedWeaponChanceToNotConsumeAmmo = 0x58; // FFortGameplayAttributeData
	constexpr auto WeaponRateOfFire = 0x80; // FFortGameplayAttributeData
	constexpr auto WeaponHorizontalRecoil = 0xa8; // FFortGameplayAttributeData
	constexpr auto WeaponVerticalRecoil = 0xd0; // FFortGameplayAttributeData
	constexpr auto WeaponSpreadReduction = 0xf8; // FFortGameplayAttributeData
	constexpr auto WeaponReloadSpeed = 0x120; // FFortGameplayAttributeData
	constexpr auto WeaponAmmoClipSize = 0x148; // FFortGameplayAttributeData
	constexpr auto WeaponChargeRate = 0x170; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatMultiplier = 0x198; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatMaxMultiplier = 0x1c0; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatCoolingMultiplier = 0x1e8; // FFortGameplayAttributeData
	constexpr auto WeaponOverheatCooldownMultiplier = 0x210; // FFortGameplayAttributeData
	constexpr auto CharacterItemDurabilityDecayModifier = 0x238; // FFortGameplayAttributeData

}

namespace FortWeaponRanged {

	constexpr auto OnProjectileSpawned = 0xf80; // FMulticastInlineDelegate
	constexpr auto TracerTemplate = 0xfa8; // AFortTracerBase*
	constexpr auto bAllowAutomaticWeaponCatchup = 0xfb0; // bool
	constexpr auto CurrentNumBullets = 0xfb8; // int32_t
	constexpr auto ScopeTargetingMuzzleOffset = 0xfc0; // FVector
	constexpr auto CurrentMuzzleBlockedLocation = 0xfd8; // FVector
	constexpr auto CurrentDamageStart = 0xff0; // EFortAbilityTargetingSource
	constexpr auto MaxTargetingAimAdjustment = 0xff8; // FRotator
	constexpr auto bMaintainAimLocationDuringTargeting = 0x1010; // char : 1
	constexpr auto bUseFirstPersonTargeting = 0x1010; // char : 1
	constexpr auto bUseScopeTargeting = 0x1010; // char : 1
	constexpr auto bShouldDisplayAmmoCounterDuringSecondaryFire = 0x1010; // char : 1
	constexpr auto bAlwaysAimFromMuzzle = 0x1010; // char : 1
	constexpr auto bShouldAimFromMuzzleAtCloseRange = 0x1010; // char : 1
	constexpr auto bShouldHideReserveAmmo = 0x1010; // char : 1
	constexpr auto bShouldDisplayAmmoCounter = 0x1010; // char : 1
	constexpr auto bUseShellsParticles = 0x1011; // char : 1
	constexpr auto bUsePersistentBeam = 0x1011; // char : 1
	constexpr auto bUseImpactDecals = 0x1011; // char : 1
	constexpr auto bUseImpactFXForProjectileOverlaps = 0x1011; // char : 1
	constexpr auto bUseImpactFXForProjectiles = 0x1011; // char : 1
	constexpr auto bActivateRangeAbilityPerBurstShot = 0x1011; // char : 1
	constexpr auto bUseBeamParticles = 0x1011; // char : 1
	constexpr auto bPersistentFireFX = 0x1011; // char : 1
	constexpr auto bUseTracers = 0x1012; // char : 1
	constexpr auto bUseOverrideBaseSpread = 0x1012; // char : 1
	constexpr auto bIsMuzzleTraceNearWall = 0x1012; // char : 1
	constexpr auto MuzzleTraceNearWallThreshold = 0x1014; // float
	constexpr auto BeamSignificance = 0x1028; // FFortEffectDistanceQuality
	constexpr auto ImpactSignificance = 0x1040; // FFortEffectDistanceQuality
	constexpr auto DecalSignificance = 0x1058; // FFortEffectDistanceQuality
	constexpr auto ScopeImpactEffectDistanceOffset = 0x1070; // float
	constexpr auto MuzzlePSC = 0x1078; // UFXSystemComponent*
	constexpr auto ShellPSC = 0x1080; // UFXSystemComponent*
	constexpr auto BeamParticleSystem = 0x1088; // UParticleSystem*
	constexpr auto BeamNiagaraSystemAsset = 0x1090; // TSoftObjectPtr<UNiagaraSystem>
	constexpr auto BeamSourceSocketName = 0x10b8; // FName
	constexpr auto FortSpawnPropOverride = 0x10c0; // USkeletalMesh*
	constexpr auto FortSpawnPropAnimOverride = 0x10c8; // UAnimationAsset*
	constexpr auto DecalSizeMin = 0x10d0; // FVector
	constexpr auto DecalSizeMax = 0x10e8; // FVector
	constexpr auto DecalLifespanMin = 0x1100; // float
	constexpr auto DecalLifespanMax = 0x1104; // float
	constexpr auto DecalColorStart = 0x1108; // FLinearColor
	constexpr auto DecalColorEnd = 0x1118; // FLinearColor
	constexpr auto DecalMaterial = 0x1128; // UMaterialInterface*
	constexpr auto DecalTexture = 0x1130; // UTexture2D*
	constexpr auto SurfaceAcceptingDecals = 0x1138; // TArray<EPhysicalSurface>
	constexpr auto ShellReloadCounter = 0x114c; // int32_t
	constexpr auto TargetingRotAdjustmentTotal = 0x1158; // FRotator
	constexpr auto LastTargetingRotAdjustmentWeight = 0x1170; // float
	constexpr auto ScopePostProcessEnabled = 0x11e8; // bool
	constexpr auto ScopePostProcessBlendWeight = 0x11ec; // float
	constexpr auto ScopePostProcessMaterial = 0x11f0; // TArray<FWeightedBlendable>
	constexpr auto BulletPattern = 0x1208; // TArray<FFortBulletPatternEntry>
	constexpr auto BeamNiagaraSystemInstance = 0x1258; // UNiagaraSystem*
	constexpr auto bUseAthenaRecoil = 0x12bc; // char : 1
	constexpr auto bUseAthenaPerfectADSAim = 0x12bc; // char : 1
	constexpr auto bFirstShotAccuracyCheckVehicleMovement = 0x12bc; // char : 1
	constexpr auto FirstShotAccuracyMinWaitTime = 0x12c0; // float
	constexpr auto BulletCountForPerBulletRecoil = 0x12c4; // int32_t
	constexpr auto FireAnimation = 0x12f8; // UAnimMontage*
	constexpr auto FireDownsightsAnimation = 0x1300; // UAnimMontage*
	constexpr auto FireFromCrouchWalkAnimation = 0x1308; // UAnimMontage*
	constexpr auto CockingAnimation = 0x1310; // UAnimMontage*
	constexpr auto WeaponFireMontage = 0x1318; // UAnimMontage*
	constexpr auto WeaponFireDownsightsMontage = 0x1320; // UAnimMontage*
	constexpr auto WeaponFireFromCrouchWalkMontage = 0x1328; // UAnimMontage*
	constexpr auto WeaponCockingMontage = 0x1330; // UAnimMontage*
	constexpr auto BeamPSC = 0x1338; // UFXSystemComponent*
	constexpr auto CrouchWalkSpeedThreshold = 0x1340; // float
	constexpr auto bEnableRecoilDelay = 0x1344; // bool
	constexpr auto OnOverheatValueChanged = 0x1368; // FMulticastInlineDelegate
	constexpr auto OverheatState = 0x1378; // EFortWeaponOverheatState
	constexpr auto OverheatedAnimation = 0x1380; // UAnimMontage*
	constexpr auto WeaponOverheatedAnimation = 0x1388; // UAnimMontage*
	constexpr auto bCooldownWhileOverheated = 0x1390; // bool
	constexpr auto OverheatValue = 0x1394; // float
	constexpr auto TimeHeatWasLastAdded = 0x139c; // float
	constexpr auto TimeOverheatedBegan = 0x13a0; // float
	constexpr auto bCacheAimPointOnFire = 0x13a4; // bool
	constexpr auto CachedAimPoint = 0x13a8; // FVector
	constexpr auto CachedLODSettingsManager = 0x13d8; // TScriptInterface<IFortAthenaAILODSettings>

}



namespace FortWorldSettings {

	constexpr auto ActorsNeedingWorldReady = 0x490; // TArray<AActor*>
	constexpr auto WorldCells = 0x4a0; // TArray<int32_t>
	constexpr auto WorldCellsOrigin = 0x4b0; // FVector
	constexpr auto WorldCellsFlags = 0x4c8; // int32_t
	constexpr auto bGenerateTestLevelSaves = 0x4cc; // char : 1
	constexpr auto bDisableCullDistance = 0x4cc; // char : 1
	constexpr auto bUseWorldSpecificCullDistanceOverride = 0x4cc; // char : 1
	constexpr auto bOverrideMainMapSettings = 0x4cc; // char : 1
	constexpr auto bValidateNavGraphConnectivity = 0x4cc; // char : 1
	constexpr auto bLimitNavGraphSkyCells = 0x4cc; // char : 1
	constexpr auto bUseProceduralFoliage = 0x4cc; // char : 1
	constexpr auto bUseConditionalBuildingFoundations = 0x4cc; // char : 1
	constexpr auto bAllowBuildingStreamingData = 0x4cd; // char : 1
	constexpr auto SplineHLODIndex = 0x4d0; // int32_t
	constexpr auto bShowTimeOfDayManager = 0x4d4; // char : 1
	constexpr auto MinCullObjectSize = 0x4d8; // float
	constexpr auto MinCullDistance = 0x4dc; // float
	constexpr auto MaxCullObjectSize = 0x4e0; // float
	constexpr auto MaxCullDistance = 0x4e4; // float
	constexpr auto OverrideMinimapMaterial = 0x4e8; // UMaterialInterface*
	constexpr auto PvPMapWorldCenter = 0x4f0; // FVector2D
	constexpr auto MapZOffset = 0x500; // float
	constexpr auto MapRotation = 0x508; // FRotator
	constexpr auto MapInitialMask = 0x520; // UTexture2D*
	constexpr auto bSpawnPhysicsObjectManager = 0x528; // char : 1
	constexpr auto bSpawnVehicleManager = 0x528; // char : 1
	constexpr auto MapWorldScale = 0x52c; // float
	constexpr auto MiniMapZoom = 0x530; // float
	constexpr auto AircraftPathBrush = 0x540; // FSlateBrush
	constexpr auto AircraftMidlinePathBrush = 0x600; // FSlateBrush
	constexpr auto AircraftPathTeamIndicatorBrush = 0x6c0; // FSlateBrush
	constexpr auto SafeZoneFinalPosBrush = 0x780; // FSlateBrush
	constexpr auto NavGraphSkyCells = 0x840; // TArray<FIntPoint>
	constexpr auto SearchSpeedOverride = 0x850; // UCurveTable*
	constexpr auto ResourceRateOverride = 0x858; // UCurveTable*
	constexpr auto SoundBodyHeadshotRequired = 0x860; // USoundBase*
	constexpr auto bSpawnTimeOfDayManager = 0x868; // char : 1
	constexpr auto bDisableGlobalWeatherEvents = 0x868; // char : 1
	constexpr auto WorldTimeOfDayManager = 0x870; // TSoftClassPtr<UObject>
	constexpr auto WorldMusicManager = 0x898; // TSoftClassPtr<UObject>
	constexpr auto WorldMusicManagerBank = 0x8c0; // UFortMusicManagerBank*
	constexpr auto DefaultWorldTimeOfDayManager = 0x8c8; // TSoftClassPtr<UObject>
	constexpr auto ZoneThemeTimeOfDayManager = 0x8f0; // TSoftClassPtr<UObject>
	constexpr auto MissionTimeOfDayManager = 0x918; // TSoftClassPtr<UObject>
	constexpr auto ZoneThemeMusicManager = 0x940; // TSoftClassPtr<UObject>
	constexpr auto ZoneThemeMusicManagerBank = 0x968; // UFortMusicManagerBank*
	constexpr auto BuildingFoundationStreamingData = 0x970; // TArray<FBuildingFoundationStreamingData>
	constexpr auto TimeOfDayManager = 0x980; // AFortTimeOfDayManager*
	constexpr auto VehicleManager = 0x988; // AFortVehicleManager*
	constexpr auto PhysicsObjectManager = 0x990; // AFortPhysicsObjectManager*
	constexpr auto LevelOverlayManager = 0x998; // UFortLevelOverlayManager*

}

namespace GameDataBR {

	constexpr auto AnalyticsItemExclusionDataBR = 0x30; // TSoftObjectPtr<UFortAnalyticsItemExclusions>
	constexpr auto LootTierDataTablesBR = 0x58; // TArray<TSoftObjectPtr<UDataTable>>
	constexpr auto LootPackageDataTablesBR = 0x68; // TArray<TSoftObjectPtr<UDataTable>>
	constexpr auto QuestEventXPTable = 0x78; // TSoftObjectPtr<UDataTable>
	constexpr auto QuestEventXPRegistry = 0xa0; // FDataRegistryType
	constexpr auto RarityTokens = 0xa8; // TArray<TSoftObjectPtr<UFortTokenType>>
	constexpr auto NamedWeightTagQueryTable = 0xb8; // TSoftObjectPtr<UDataTable>
	constexpr auto AIGoalManagerBR = 0xe0; // TSoftClassPtr<UObject>
	constexpr auto AIDirectorBR = 0x108; // TSoftClassPtr<UObject>
	constexpr auto DefaultDamageReceiverClassBR = 0x130; // TSoftClassPtr<UObject>
	constexpr auto FeedbackManagerClassBR = 0x158; // TSoftClassPtr<UObject>
	constexpr auto UIFeedbackBankBR = 0x180; // TSoftObjectPtr<UFortUIFeedbackBank>
	constexpr auto DefaultHeroBR = 0x1a8; // TSoftObjectPtr<UFortHeroType>
	constexpr auto PlayerAbilitySetBR = 0x1d0; // TSoftObjectPtr<UFortAbilitySet>
	constexpr auto CompetitiveIdentityDataTable = 0x1f8; // TSoftObjectPtr<UDataTable>
	constexpr auto FortItemsForEventMapping = 0x220; // TSoftObjectPtr<UFortItemsForEventMapping>
	constexpr auto FortItemToPickupBGAMapping = 0x248; // TSoftObjectPtr<UFortItemToBuildingGameplayActorPickupMapping>
	constexpr auto WeaponReticleExtensions = 0x270; // TSoftObjectPtr<UFortWeaponReticleExtensionData>
	constexpr auto FeedbackEventData = 0x298; // TSoftObjectPtr<UFortGameplayFeedbackEventData>
	constexpr auto DefaultRebootVanIndicatorClass = 0x2c0; // TSoftClassPtr<UObject>
	constexpr auto DefaultContextTutorialIndicatorClass = 0x2e8; // TSoftClassPtr<UObject>
	constexpr auto DefaultEliminationIndicatorClass = 0x310; // TSoftClassPtr<UObject>
	constexpr auto CreativeRealEstatePlotTable = 0x338; // TSoftObjectPtr<UDataTable>
	constexpr auto CreativeBetaPermissions = 0x360; // UCreativeBetaPermissionsDataAsset*
	constexpr auto CreativeDynamicXp = 0x368; // TSoftObjectPtr<UCreativeDynamicXpDataAsset>
	constexpr auto CreativePlaysetProps = 0x390; // TSoftObjectPtr<UCreativePlaysetPropsDataAsset>
	constexpr auto CachedCreativeInventory = 0x3b8; // TMap<FPrimaryAssetId, FCreativeItemMetaData>
	constexpr auto CachedCreativeRealEstatePlots = 0x408; // TArray<FPrimaryAssetId>
	constexpr auto CachedCreativeBetaPermissions = 0x418; // TMap<FPrimaryAssetId, FCreativeBetaPermission>
	constexpr auto CachedCreativePlaysetProps = 0x468; // TSet<FName>
	constexpr auto CreativeTagsTable = 0x4b8; // TSoftObjectPtr<UDataTable>
	constexpr auto CreativeTagCategoriesTable = 0x4e0; // TSoftObjectPtr<UDataTable>
	constexpr auto MapPreloadData = 0x508; // TSoftObjectPtr<UAthenaMapPreloadData>
	constexpr auto FortWeaponPickupSpawnAmmoData = 0x530; // TSoftObjectPtr<UFortWeaponPickupSpawnAmmoData>
	constexpr auto FrontendGameStateComponents = 0x558; // TArray<TSoftClassPtr<UObject>>
	constexpr auto FortFactionMapping = 0x568; // TSoftObjectPtr<UFortFactionMapping>
	constexpr auto ItemWrapConfigAsset = 0x590; // TSoftObjectPtr<UFortItemWrapMappingData>
	constexpr auto DefaultGliderAnimSet = 0x5b8; // TSoftObjectPtr<UFortPlayerGliderAnimSet>
	constexpr auto UmbrellaGliderAnimSet = 0x5e0; // TSoftObjectPtr<UFortPlayerGliderAnimSet>
	constexpr auto ItemDefToItemVariantDataMappingAsset = 0x608; // TSoftObjectPtr<UFortItemDefToItemVariantDataMapping>
	constexpr auto WeaponUpgradeTable = 0x630; // TSoftObjectPtr<UDataTable>
	constexpr auto DefaultGlobalCurrencyItemDefinition = 0x658; // TSoftObjectPtr<UFortResourceItemDefinition>
	constexpr auto DefaultCurrencyPayoutTable = 0x680; // TSoftObjectPtr<UCurveTable>
	constexpr auto DefaultLootGroupData = 0x6a8; // TSoftObjectPtr<UFortLootGroupWeightedRollingData>
	constexpr auto PlayerAttributesClampingDataTable = 0x6d0; // TSoftObjectPtr<UDataTable>
	constexpr auto BotItemDataTable = 0x6f8; // TSoftObjectPtr<UDataTable>
	constexpr auto BotSupportedItemTags = 0x720; // FGameplayTagContainer
	constexpr auto FallbackSeason = 0x758; // UAthenaSeasonItemDefinition*
	constexpr auto FallbackRepeatableDailiesCard = 0x760; // UFortRepeatableDailiesCardItemDefinition*
	constexpr auto UnableToPerformActionMessages = 0x768; // TArray<FGameplayTagMessage>
	constexpr auto HUDVisibilityGameplayTags = 0x778; // TArray<FSettingsHUDVisibilityAndText>
	constexpr auto TimeOfDayRGBForPeripherals = 0x788; // UCurveLinearColor*
	constexpr auto AthenaSoundMix = 0x790; // USoundMix*
	constexpr auto AthenaReverbEffect = 0x798; // UReverbEffect*
	constexpr auto AthenaReverbEffectTag = 0x7a0; // FName
	constexpr auto VisualizationSoundMix = 0x7a8; // USoundMix*
	constexpr auto RespawnDataTable = 0x7b0; // UFortRespawnDataTable*
	constexpr auto NamedWeightsByPoi = 0x7b8; // UPoiNamedWeights*
	constexpr auto AthenaMemoryCostRegister = 0x7c0; // UAthenaMemoryCostRegister*

}

namespace FortPlayerDBNORevivedParams {
	constexpr auto RevivedPlayer = 0x28; // AFortPlayerPawn*
	constexpr auto RevivedBy = 0x30; // AController*

}

namespace FortPlayerDBNOEnterParams
{
	constexpr auto KilledPlayer = 0x28; // AFortPlayerPawn*
	constexpr auto KilledBy = 0x30; // AController*

}

namespace ULocalPlayer
{
	constexpr auto ViewportClient = 0x70; // UGameViewportClient*
	constexpr auto AspectRatioAxisConstraint = 0xb0; // EAspectRatioAxisConstraint
	constexpr auto PendingLevelPlayerControllerClass = 0xb8; // APlayerController*
	constexpr auto bSentSplitJoin = 0xc0; // char : 1
	constexpr auto ControllerId = 0xd8; // int32_t
}

namespace ULevel
{
	constexpr auto OwningWorld = 0xb8; // UWorld*
	constexpr auto Model = 0xc0; // UModel*
	constexpr auto ModelComponents = 0xc8; // TArray<UModelComponent*>
	constexpr auto ActorCluster = 0xd8; // ULevelActorContainer*
	constexpr auto NumTextureStreamingUnbuiltComponents = 0xe0; // int32_t
	constexpr auto NumTextureStreamingDirtyResources = 0xe4; // int32_t
	constexpr auto LevelScriptActor = 0xe8; // ALevelScriptActor*
	constexpr auto NavListStart = 0xf0; // ANavigationObjectBase*
	constexpr auto NavListEnd = 0xf8; // ANavigationObjectBase*
	constexpr auto NavDataChunks = 0x100; // TArray<UNavigationDataChunk*>
	constexpr auto LightmapTotalSize = 0x110; // float
	constexpr auto ShadowmapTotalSize = 0x114; // float
	constexpr auto StaticNavigableGeometry = 0x118; // TArray<FVector>
	constexpr auto StreamingTextureGuids = 0x128; // TArray<FGuid>
	constexpr auto StreamingTextures = 0x138; // TArray<FName>
	constexpr auto PackedTextureStreamingQualityLevelFeatureLevel = 0x148; // uint32_t
	constexpr auto LevelBuildDataId = 0x210; // FGuid
	constexpr auto MapBuildData = 0x220; // UMapBuildDataRegistry*
	constexpr auto LightBuildLevelOffset = 0x228; // FIntVector
	constexpr auto bIsLightingScenario = 0x234; // char : 1
	constexpr auto bTextureStreamingRotationChanged = 0x234; // char : 1
	constexpr auto bStaticComponentsRegisteredInStreamingManager = 0x234; // char : 1
	constexpr auto bIsVisible = 0x234; // char : 1
	constexpr auto bIsPartitioned = 0x236; // char : 1
	constexpr auto WorldSettings = 0x298; // AWorldSettings*
	constexpr auto WorldDataLayers = 0x2a0; // AWorldDataLayers*
	constexpr auto AssetUserData = 0x2b0; // TArray<UAssetUserData*>
	constexpr auto DestroyedReplicatedStaticActors = 0x2d0; // TArray<FReplicatedStaticActorDestructionInfo>
}

namespace UFortPlayerControllerAthenaXPComponent
{
	constexpr auto PlayerAccolades = 0xa0; // TArray<FAthenaAccolades>
	constexpr auto LocalPunchCardMedals = 0xb0; // TArray<FCardSlotMedalData>
	constexpr auto EventArray = 0xc0; // FXPEventArray
	constexpr auto WaitingQuestXp = 0x1e0; // TArray<FXPEventEntry>
	constexpr auto RestXP = 0x1f0; // int32_t
	constexpr auto bRegisteredWithQuestManager = 0x1f4; // bool
	constexpr auto CachedLevelInfo = 0x240; // FAthenaLevelInfo
	constexpr auto CachedSeasonDef = 0x268; // UAthenaSeasonItemDefinition*
	constexpr auto CachedSeasonMatchXpBoost = 0x270; // int32_t
	constexpr auto CurrentLevel = 0x278; // int32_t
	constexpr auto PlayerXp = 0x27c; // int32_t
	constexpr auto TotalXpEarned = 0x280; // int32_t
	constexpr auto MedalBonusXP = 0x284; // int32_t
	constexpr auto SurvivalXp = 0x288; // int32_t
	constexpr auto CombatXp = 0x28c; // int32_t
	constexpr auto MatchXp = 0x290; // int32_t
	constexpr auto ChallengeXp = 0x294; // int32_t
	constexpr auto HasBRMatchReportCompletedProfileVer = 0x298; // int64_t
	constexpr auto InMatchProfileVer = 0x2a0; // int64_t
	constexpr auto MedalsEarned = 0x2a8; // TArray<UFortAccoladeItemDefinition*>
	constexpr auto QuestsUpdated = 0x2b8; // TArray<TWeakObjectPtr<UFortQuestItem>>
}

namespace ASkyLight
{
	constexpr auto LightComponent = 0x280; // USkyLightComponent*
	constexpr auto bEnabled = 0x288; // char : 1
}
namespace USkyLightComponent
{
	constexpr auto bRealTimeCapture = 0x2d8; // bool
	constexpr auto SourceType = 0x2d9; // ESkyLightSourceType
	constexpr auto Cubemap = 0x2e0; // UTextureCube*
	constexpr auto SourceCubemapAngle = 0x2e8; // float
	constexpr auto CubemapResolution = 0x2ec; // int32_t
	constexpr auto SkyDistanceThreshold = 0x2f0; // float
	constexpr auto bCaptureEmissiveOnly = 0x2f4; // bool
	constexpr auto bLowerHemisphereIsBlack = 0x2f5; // bool
	constexpr auto LowerHemisphereColor = 0x2f8; // FLinearColor
	constexpr auto OcclusionMaxDistance = 0x308; // float
	constexpr auto Contrast = 0x30c; // float
	constexpr auto OcclusionExponent = 0x310; // float
	constexpr auto MinOcclusion = 0x314; // float
	constexpr auto OcclusionTint = 0x318; // FColor
	constexpr auto bCloudAmbientOcclusion = 0x31c; // char : 1
	constexpr auto CloudAmbientOcclusionStrength = 0x320; // float
	constexpr auto CloudAmbientOcclusionExtent = 0x324; // float
	constexpr auto CloudAmbientOcclusionMapResolutionScale = 0x328; // float
	constexpr auto CloudAmbientOcclusionApertureScale = 0x32c; // float
	constexpr auto OcclusionCombineMode = 0x330; // EOcclusionCombineMode
	constexpr auto BlendDestinationCubemap = 0x3d8; // UTextureCube*

}
//YouTube : EFK
//Discord : EFK#6607
//Twitter : EFK
//Twitch : Zeusty
